{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","assets/svg/Plus.js","components/Input/MultiplyInput.styled.js","components/Input/MultiplyInput.jsx","components/DatePicker/Datepicker.jsx","components/Sidebar/SidebarSearch/SidebarSearch.styled.js","components/Sidebar/SidebarSearch/SidebarSearch.jsx"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","Plus","width","height","viewBox","fill","xmlns","d","styled","div","type","badgeOrange","lightViolet","orange","violet","MultiplyInput","handleChangeInputValues","inputValues","useState","currentValue","changeCurrentValue","in","InputField","placeholder","value","onChange","e","target","onKeyDown","key","test","InputButton","onClick","map","v","className","currentTarget","querySelector","innerHTML","newValues","filter","handleDelete","initialState","startDate","endDate","focusedInput","Datepicker","selectedDate","setSelectedDates","stateStartDate","stateEndDate","useReducer","datepickerReducer","state","dispatch","useEffect","payload","Date","theme","datepickerStyles","displayFormat","onDatesChange","data","onFocusChange","showSelectedDates","numberOfMonths","window","innerWidth","minBookingDate","initialVisibleMonth","isShowSidebarSearch","lightGrey","errorRed","SidebarSearch","currentTab","setCurrentTab","display","handleSearchSubmit","handleSelectSearchQueryOption","handleSubmitSearchQueryValue","searchQueryFilters","searchParametersStartDate","searchParametersEndDate","dayValues","setDayValues","inputTagValues","changeInputTagValues","inputMentionValues","changeInputMentionValues","error","setError","displayErrors","setTimeout","handleTabClick","tabName","style","borderBottom","visibility","replace","concat","slice","params","tags","moment","unix","add","hours","minutes","Input","get","submitValue","SelectInput","options","handleSelectOption"],"mappings":"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","file":"static/js/11.8e6320e7.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React from 'react'\n\nfunction Plus() {\n  return (\n    <svg\n      width=\"15\"\n      height=\"15\"\n      viewBox=\"0 0 12 12\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12 6C12 6.553 11.952 7 11.399 7H7V11.399C7 11.951 6.553 12 6 12C5.447 12 5 11.951 5 11.399V7H0.601C0.0489998 7 0 6.553 0 6C0 5.447 0.0489998 5 0.601 5H5V0.601C5 0.0479999 5.447 0 6 0C6.553 0 7 0.0479999 7 0.601V5H11.399C11.952 5 12 5.447 12 6Z\"\n        fill=\"black\"\n      />\n    </svg>\n  )\n}\nexport default Plus\n","import styled from 'styled-components'\nimport { orange, badgeOrange, lightViolet, violet } from '../../config/styles'\n\nexport default styled.div`\n  margin-top: 1rem;\n  margin-bottom: 0.9rem;\n  .input__tag {\n    display: inline-block;\n    background-color: ${({ type }) =>\n      type === 'tags' ? `${badgeOrange}` : `${lightViolet}`};\n    border-radius: 0.5rem;\n    padding: 0.7rem 0.8rem 0.5rem 0.8rem;\n    margin-right: 0.3rem;\n    margin-top: 1rem;\n    & p {\n      display: inline-block;\n      color: ${({ type }) => (type === 'tags' ? `${orange}` : `${violet}`)};\n    }\n  }\n  .input__delete-button {\n    display: inline-block;\n    padding-left: 0.5rem;\n    font-weight: 700;\n    margin-block-end: 0;\n    color: ${({ type }) => (type === 'tags' ? `${orange}` : `${violet}`)};\n  }\n`\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n// images\nimport Plus from '../../assets/svg/Plus'\n\n// styled\nimport Container from './Input.styled'\nimport InputButton from './InputButton'\nimport InputField from './InputField'\nimport MultiplyInputContainer from './MultiplyInput.styled'\n\nfunction MultiplyInput({ type, handleChangeInputValues, inputValues }) {\n  // local state\n  const [currentValue, changeCurrentValue] = useState('')\n\n  const handleChange = e => {\n    changeCurrentValue(e.target.value)\n  }\n  const handleKeyDown = e => {\n    switch (e.key) {\n      case 'Enter':\n        if (currentValue.length === 0 || /^\\s+$/.test(currentValue)) {\n          return\n        }\n        handleChangeInputValues(currentValue)\n        changeCurrentValue('')\n        break\n      default:\n        break\n    }\n  }\n  const handleButtonClick = () => {\n    if (currentValue.length === 0 || /^\\s+$/.test(currentValue)) {\n      return\n    }\n    handleChangeInputValues(currentValue)\n    changeCurrentValue('')\n  }\n  const handleDelete = v => {\n    const value = v.currentTarget.querySelector('.text').innerHTML\n    const newValues = inputValues.filter(v => v !== value)\n    handleChangeInputValues(newValues, true)\n  }\n  return (\n    <MultiplyInputContainer type={type} in={type}>\n      <Container>\n        <InputField\n          placeholder=\"Type here...\"\n          value={currentValue}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n        />\n        <InputButton onClick={handleButtonClick}>\n          <Plus />\n        </InputButton>\n      </Container>\n      {inputValues &&\n        inputValues.map((v, i) => (\n          <div\n            className=\"input__tag\"\n            key={v + i}\n            onClick={v => handleDelete(v)}\n          >\n            <p className=\"text text_subtitle\">{v}</p>\n            <button className=\"input__delete-button\">x</button>\n          </div>\n        ))}\n    </MultiplyInputContainer>\n  )\n}\nMultiplyInput.propTypes = {\n  handleChangeInputValues: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  inputValues: PropTypes.array,\n}\nexport default MultiplyInput\n","import React, { useReducer, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { DateRangeInput } from '@datepicker-react/styled'\nimport { ThemeProvider } from 'styled-components'\n\n// hooks\nimport { datepickerReducer } from '../../utils/hooks'\n\n// styles\nimport { datepickerStyles } from '../../config/styles'\n\nconst initialState = {\n  startDate: null,\n  endDate: null,\n  focusedInput: null,\n}\n\nfunction Datepicker({\n  selectedDate,\n  setSelectedDates,\n  stateStartDate,\n  stateEndDate,\n}) {\n  const [state, dispatch] = useReducer(datepickerReducer, initialState)\n  useEffect(() => {\n    if (stateStartDate || stateEndDate) {\n      dispatch({\n        type: 'dateChange',\n        payload: {\n          startDate: new Date(stateStartDate * 1000),\n          endDate: new Date(stateEndDate * 1000),\n          focusedInput: null,\n        },\n      })\n    }\n  }, [stateEndDate, stateStartDate])\n  useEffect(() => {\n    if (state.startDate && state.endDate && !state.focusedInput) {\n      setSelectedDates(state)\n    }\n  }, [setSelectedDates, state])\n  return (\n    <ThemeProvider theme={datepickerStyles}>\n      <DateRangeInput\n        displayFormat=\"dd.MM.yyyy\"\n        onDatesChange={data => dispatch({ type: 'dateChange', payload: data })}\n        onFocusChange={focusedInput =>\n          dispatch({ type: 'focusChange', payload: focusedInput })\n        }\n        startDate={state.startDate} // Date or null\n        endDate={state.endDate} // Date or null\n        focusedInput={state.focusedInput} // START_DATE, END_DATE or null\n        showSelectedDates={false}\n        numberOfMonths={window.innerWidth > 1175 ? 2 : 1}\n        minBookingDate={new Date('January 01, 2019 00:00:00')}\n        initialVisibleMonth={new Date(selectedDate * 1000)}\n      />\n    </ThemeProvider>\n  )\n}\nDatepicker.propTypes = {\n  selectedDate: PropTypes.number,\n  setSelectedDates: PropTypes.func.isRequired,\n  stateStartDate: PropTypes.number,\n  stateEndDate: PropTypes.number,\n}\nexport default Datepicker\n","import styled from 'styled-components'\nimport {\n  lightGrey,\n  badgeOrange,\n  orange,\n  errorRed,\n} from '../../../config/styles'\n\nexport default styled.div`\n  display: ${({ isShowSidebarSearch }) =>\n    isShowSidebarSearch ? `block` : `none`};\n  border-bottom: 1px solid ${lightGrey};\n  padding-bottom: 2rem;\n  & label {\n    display: inline-block;\n    width: 100%;\n  }\n  .button-container {\n    display: flex;\n    justify-content: center;\n  }\n  .datepicker__container {\n    div[data-testid='DateRangeInputGrid'] {\n      grid-template-columns: 45% 10% 45%;\n    }\n  }\n  .sibebar-search__button {\n    margin-top: 2rem;\n    font-size: 1.2rem;\n    background-color: ${orange};\n    color: #fff;\n    border-radius: 3rem;\n    padding: 1rem;\n    width: 70%;\n    box-shadow: 0px 4px 3px ${lightGrey};\n    cursor: pointer;\n    transition-duration: 0.25s;\n    &:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 1px 4px rgba(0, 0, 0, 0.08), 0 2px 8px rgba(0, 0, 0, 0.06),\n        0 0 16px rgba(0, 0, 0, 0.18);\n    }\n  }\n  .sidebar-search__error {\n    background: ${errorRed};\n    padding: 0.5rem;\n    height: 2.2rem;\n    border-radius: 0.5rem;\n    margin-bottom: 1rem;\n    margin-top: 1.3rem;\n    visibility: hidden;\n\n    p {\n      margin-block-end: 0rem;\n    }\n  }\n  .sidebar-search__menu {\n    display: flex;\n    align-items: center;\n    margin-top: 3rem;\n  }\n  .sidebar-search__menu-tab {\n    flex-basis: 50%;\n    min-width: 40%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .sidebar-search__tab-button {\n    cursor: pointer;\n    border-bottom: 3px solid ${lightGrey};\n    :hover {\n      border-bottom: 3px solid ${badgeOrange};\n    }\n  }\n  .sidebar-search__tab_filters {\n    margin-top: 3rem;\n    & > div {\n      margin-right: 0;\n      margin-top: 1rem;\n      margin-bottom: 0.9rem;\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\n\n// components\nimport Input from '../../Input/Input.jsx'\nimport SelectInput from '../../Select/SelectInput.jsx'\nimport MultiplyInput from '../../Input/MultiplyInput.jsx'\nimport DatePicker from '../../DatePicker/Datepicker.jsx'\n\n// styled\nimport Container from './SidebarSearch.styled'\n\n// colors\nimport { orange } from '../../../config/styles'\n\nfunction SidebarSearch({\n  currentTab,\n  setCurrentTab,\n  display,\n  handleSearchSubmit,\n  handleSelectSearchQueryOption,\n  handleSubmitSearchQueryValue,\n  selectedDate,\n  searchQueryFilters,\n  searchParametersStartDate,\n  searchParametersEndDate,\n}) {\n  const [dayValues, setDayValues] = useState({\n    startDate: null,\n    endDate: null,\n  })\n  const [inputTagValues, changeInputTagValues] = useState([])\n  const [inputMentionValues, changeInputMentionValues] = useState([])\n  const [error, setError] = useState('')\n  const displayErrors = error => {\n    setError(error)\n    setTimeout(() => {\n      setError('')\n    }, 2000)\n  }\n  const handleChangeTagInputValues = (value, replace) => {\n    if (replace) {\n      changeInputTagValues([...value])\n    } else {\n      if (value[0] !== '#') {\n        value = '#'.concat(value)\n      } else {\n        value = '#'.concat(value.slice(1))\n      }\n      changeInputTagValues([...inputTagValues, value])\n    }\n  }\n  const handleChangeMentionInputValues = (value, replace) => {\n    if (replace) {\n      changeInputMentionValues([...value])\n    } else {\n      if (value[0] !== '@') {\n        value = '@'.concat(value)\n      } else {\n        value = '@'.concat(value.slice(1))\n      }\n      changeInputMentionValues([...inputMentionValues, value])\n    }\n  }\n  const handleSubmit = () => {\n    const params = {\n      tags: [...inputTagValues, ...inputMentionValues],\n      startDate: moment(dayValues.startDate).unix(),\n      endDate: moment(dayValues.endDate)\n        .add({ hours: 23, minutes: 59 })\n        .unix(),\n    }\n    if (inputTagValues.length === 0 && inputMentionValues.length === 0) {\n      displayErrors('Please, enter at least one tag or mention')\n      return\n    }\n    if (!dayValues.startDate || !dayValues.endDate) {\n      displayErrors('Please, select date range')\n      return\n    }\n    handleSearchSubmit(params)\n  }\n  const handleSetSelectedDate = data => {\n    setDayValues(data)\n  }\n  const handleTabClick = tabName => {\n    setCurrentTab(tabName)\n  }\n  return (\n    <Container isShowSidebarSearch={display}>\n      <div className=\"sidebar-search__menu\">\n        <div className=\"sidebar-search__menu-tab\">\n          <button\n            className=\"sidebar-search__tab-button\"\n            onClick={() => handleTabClick('Search')}\n            style={{\n              borderBottom: currentTab === 'Search' && `3px solid ${orange}`,\n            }}\n          >\n            <p className=\"text text_p2\">Search parameters</p>\n          </button>\n        </div>\n        <div className=\"sidebar-search__menu-tab\">\n          <button\n            className=\"sidebar-search__tab-button\"\n            onClick={() => handleTabClick('Filters')}\n            style={{\n              borderBottom: currentTab === 'Filters' && `3px solid ${orange}`,\n            }}\n          >\n            <p className=\"text text_p2\">Filters</p>\n          </button>\n        </div>\n      </div>\n      {currentTab === 'Search' && (\n        <div className=\"sidebar-search__tab\">\n          <div\n            className=\"sidebar-search__error\"\n            style={{\n              visibility: error ? `inherit` : 'hidden',\n            }}\n          >\n            <p className=\"text text_p2\">{error}</p>\n          </div>\n          <p className=\"text text_p2\">Search by tags</p>\n          <MultiplyInput\n            handleChangeInputValues={handleChangeTagInputValues}\n            inputValues={inputTagValues}\n            type=\"tags\"\n          />\n          <br />\n          <p className=\"text text_p2\">Search by mentions</p>\n          <MultiplyInput\n            handleChangeInputValues={handleChangeMentionInputValues}\n            inputValues={inputMentionValues}\n            type=\"mentions\"\n          />\n          <br />\n          <p className=\"text text_p2\">Select date range</p>\n          <div className=\"datepicker__container\">\n            <DatePicker\n              selectedDate={selectedDate}\n              setSelectedDates={handleSetSelectedDate}\n              stateStartDate={searchParametersStartDate}\n              stateEndDate={searchParametersEndDate}\n            />\n          </div>\n          <div className=\"button-container\">\n            <button className=\"sibebar-search__button\" onClick={handleSubmit}>\n              Search events\n            </button>\n          </div>\n        </div>\n      )}\n      {currentTab === 'Filters' && (\n        <div className=\"sidebar-search__tab sidebar-search__tab_filters\">\n          <div>\n            <p className=\"text text_p2\">Search by word</p>\n            <Input\n              value={searchQueryFilters.get('keyword')}\n              type=\"multiply\"\n              submitValue={handleSubmitSearchQueryValue}\n            />\n          </div>\n          <SelectInput\n            placeholder=\"Sort by:\"\n            value={searchQueryFilters.get('sortBy')}\n            options={[\n              { value: 'A - Z' },\n              { value: 'Popular' },\n              { value: 'Nearby' },\n              { value: 'By time' },\n            ]}\n            handleSelectOption={handleSelectSearchQueryOption}\n          />\n        </div>\n      )}\n    </Container>\n  )\n}\nSidebarSearch.propTypes = {\n  currentTab: PropTypes.string.isRequired,\n  setCurrentTab: PropTypes.func.isRequired,\n  display: PropTypes.bool,\n  handleSearchSubmit: PropTypes.func.isRequired,\n  handleSelectSearchQueryOption: PropTypes.func.isRequired,\n  handleSubmitSearchQueryValue: PropTypes.func.isRequired,\n  selectedDate: PropTypes.number,\n  searchQueryFilters: PropTypes.object,\n  searchParametersStartDate: PropTypes.number,\n  searchParametersEndDate: PropTypes.number,\n}\nexport default SidebarSearch\n"],"sourceRoot":""}