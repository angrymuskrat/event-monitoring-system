{"version":3,"sources":["actions/dataActions.js","actions/cityActions.js","sagas/fetchData.js","sagas/apiSaga.js","sagas/saga.js","reducers/index.js","containers/App/globalStyles.js","components/Input/Suggestions.js","components/Input/AutocompleteInput.jsx","containers/Navigation/Navigation.styled.js","assets/svg/BackButton.js","assets/svg/EMlogo.js","containers/Navigation/Navigation.jsx","containers/Navigation/index.js","containers/App/App.js","containers/App/index.js","index.js","utils/utils.js","actions/uiActions.js","reducers/dataReducer.js","reducers/cityReducer.js","actions/types.js","actions/mapActions.js","config/cities.js","reducers/mapReducer.js","reducers/uiReducer.js","components/Input/Input.styled.js","components/Input/InputButton.js","components/Input/InputField.js","components/Loading/Loading.styled.js","components/Loading/Loading.jsx","assets/svg/Magnifier.js","assets/img/cityPictures/london.jpg","assets/img/cityPictures/moscow.jpg","assets/img/cityPictures/newyork.jpg","assets/img/cityPictures/spb.jpg","config/styles.js","assets/fonts/Open_Sans/OpenSans-Regular.ttf","assets/fonts/Open_Sans/OpenSans-Light.ttf","assets/fonts/Open_Sans/OpenSans-SemiBold.ttf","assets/fonts/Open_Sans/OpenSans-Bold.ttf","assets/fonts/Montserrat/Montserrat-Regular.ttf","assets/fonts/Montserrat/Montserrat-SemiBold.ttf"],"names":["clearStore","type","CLEAR_STORE","setChartData","data","SET_CHART_DATA","payload","setCurrentCityAndViewport","city","SET_CURRENT_CITY_AND_VIEWPORT","setEventsData","SET_EVENTS_DATA","setEventFilter","filter","SET_EVENT_FILTER","setHeatmapData","SET_HEATMAP_DATA","setNewDate","date","SET_NEW_DATE","setSelectedDate","SET_SELECTED_DATE","setSearchQuery","events","SET_SEARCH_QUERY","setSelectedHour","hour","SET_SELECTED_HOUR","setSearchParameters","params","SET_SEARCH_PARAMETERS","setSearchQueryFilter","SET_SEARCHQUERY_FILTER","setupMapFromHistory","config","SETUP_MAP_FROM_HISTORY","setPopupData","SET_POPUP_DATA","initSession","INIT_SESSION","setAuth","SET_AUTH","setCurrentCity","SET_CITY","server","headers","withCredentials","credentials","requestSessionCookie","axios","method","fetchHeatmap","topLeft","botRight","time","selectedHour","get","fetchEvents","fetchChartTimeData","start","finish","fetchSearchEventsData","tags","fetchPostData","postcode","fetchSingleHeatmap","fetchSingleEventLayer","handleToggleAllEvents","handleFetchData","handleFetchAllData","handlePlayDemo","handleSetSelectedDate","handleSetCityAndViewport","setInitialBounds","handleSetupMapFromHistory","handleChangeViewport","handleSearchEvents","fetchSingleInstagramPost","handleFetchPopupData","handleInitSession","fetchDataSaga","fetchAllDataSaga","toggleAllEventsSaga","setSelectedDateSaga","setCityAndViewportSaga","setupMapFromHistorySaga","changeViewportSaga","searchEventsSaga","fetchPopupDataSaga","initSessionSaga","timerSaga","getIsCurrentHourExists","state","getIn","select","undefined","call","heatmapData","convertHeatmapDataToLayer","storeData","put","FETCH_FAILURE","eventsData","convertEventsToGeoJSON","getToggleAllEvents","LOADING_START","getChartData","hours","getCity","getTopLeft","getBottomRight","all","map","h","LOADING_FINISH","console","error","FETCH_SUCCESS","mapData","setup","startDate","Number","chartData","convertChartData","countUpDemoPlay","end","array","eventChannel","emitter","END","iv","setInterval","clearInterval","getSelectedHour","index","findIndex","length","slice","chan","take","seconds","stopDemo","cancelled","Object","prototype","toString","moment","unix","getPrevSelectedHour","prevSelectedHour","getPrevSelectedDate","prevSelectedDate","nextSelectedHour","getCurrentBottomRight","currentBotRight","getCurrentTopLeft","currentTopLeft","getIsShowAllEvents","isShowAllEvents","getSearchQuery","replace","join","cityName","split","cities","find","c","id","country","bottomRight","viewport","center","lat","lng","zoom","setViewport","bounds","setBounds","push","toggleSidebar","historyTopLeft","d","parseFloat","historyBotRight","corner1","latLng","corner2","latLngBounds","getCenter","newViewport","newBounds","currentHistoryCity","findCity","configCity","startLoading","getCurrentCityId","currentCityId","searchTags","tag","concat","endDate","convertSearchQueryToGeoJSON","finishLoading","postData","convertPostData","graphql","shortcode_media","getIsPopupOpen","isPopupOpen","getPopupData","p","filteredData","delay","Promise","resolve","setTimeout","res","log","status","setAuthError","takeLatest","FETCH_DATA","FETCH_ALL_DATA","TOGGLE_ALL_EVENTS","CHANGE_VIEWPORT","takeEvery","TOGGLE_POPUP","PLAY_DEMO","fork","channel","STOP_DEMO","cancel","rootSaga","createRootReducer","history","combineReducers","router","connectRouter","cityReducer","ui","uiReducer","mapReducer","dataReducer","GlobalStyle","createGlobalStyle","openSansRegular","openSansLight","openSansSemiBold","openSansBold","montserratRegular","montserratSemiBold","fontSize","darkGrey","defaultBackground","grey","orange","styled","ul","showSuggestions","lightGrey","memo","defaultValue","handleClick","useState","activeSuggestion","setActiveSuggestion","filteredSuggestions","setFilteredSuggestions","setShowSuggestions","userInput","setUserInput","suggestions","avaliable","useEffect","onClick","e","currentTarget","innerText","InputField","placeholder","onChange","value","suggestion","toLowerCase","indexOf","onKeyDown","keyCode","InputButton","style","cursor","Magnifier","Suggestions","className","key","div","BackButton","xmlns","aria-hidden","focusable","width","height","preserveAspectRatio","viewBox","fill","EMlogo","clipPath","Navigation","currentCity","currentCityCountry","selectedDate","location","useLocation","onButtonClick","pathname","to","toJS","mapStateToProps","createImmutableSelector","boundsSelector","currentCityIdSelector","currentCitySelector","currentCityCountrySelector","selectedDateSelector","connect","dispatch","path","MapPage","lazy","AboutPage","TeamPage","StartingPage","LoginPage","App","session","auth","document","title","fallback","Loading","exact","component","render","authSelector","createBrowserHistory","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","run","ReactDOM","getElementById","a","async","Center","lon","PostCodes","fromJS","properties","Tags","postcodes","Title","Start","Finish","uuid","photoUrl","display_url","geometry","coordinates","Set","List","cluster","n","sort","b","localTime","format","posts","post","caption","edge_media_to_caption","edges","node","text","likes","edge_media_preview_like","count","name","profilePicUrl","owner","profile_pic_url","username","profileLink","postLink","shortcode","sortEvents","filters","str","arr","keyword","isSet","el","some","word","sortBy","x","distance","viewportCenterCoordinates","eventCoordinates","from","point","units","calculateDistance","TOGGLE_SIDEBAR","toggleAllEvents","togglePopup","playDemo","fetchData","fetchAllData","setSearchEvents","SEARCH_EVENTS","SET_AUTH_ERROR","setHighlightedHour","SET_HIGHLIGHTED_HOUR","setHighlightedEvent","SET_HIGHTLIGHTED_EVENT","setSelectedEvent","SET_SELECTED_EVENT","initialState","heatmap","searchQuery","searchParameters","eventFilters","searchQueryFilters","currentPopupData","dataSelector","selectedHourSelector","currentHeatmapSelector","eventsSelector","currentEventsSelector","chartDataSelector","allHeatmapDataSelector","reduce","accum","allEventsDataSelector","JSON","stringify","valueSeq","flatten","eventFiltersSelector","searchQueryFiltersSelector","searchQuerySelector","searchParametersSelector","searchParametersStartDateSelector","searchParametersEndDateSelector","currentPopupDataSelector","set","Map","prevHeatmap","setIn","union","keys","prevEvents","parameter","cityId","citySelector","String","SET_BOUNDS","SET_CURRENT_USER_LOCATION","SET_VIEWPORT","FETCH_DATA_AFTER_VIEWPORT_CHANGE","FETCH_TIMELINE_SUCCESS","FETCH_TIMELINE_START","VIEWPORT_TRANSITION","setCurrentUserLocation","picture","saintPetersburgPic","newyorkPic","moscowPic","londonPic","currentUserLocation","mapSelector","viewportSelector","currentUserLocationSelector","update","previousViewport","merge","previousBounds","isLoading","isTimelineLoading","isSidebarOpen","isDemoPlay","isViewportTransition","highlightedHour","highlightedEvent","selectedEvent","errors","authError","isSearchingEvents","uiSelector","isSidebarOpenSelector","isDemoPlaySelector","isShowAllEventsSelector","isLoadingSelector","errorSelector","isPopupOpenSelector","isSearchingEventsSelector","authErrorSelector","button","input","lightGreyTransparent","transparentBackground","version","y","data-original","data-old_color","module","exports","chartLightGrey","chartDarkGrey","lightOrange","badgeOrange","violet","lightViolet","errorRed","textError","modalStyles","content","top","left","right","bottom","marginRight","transform","position","padding","paddingTop","maxWidth","datepickerStyles","breakpoints","reactDatepicker","daySize","fontFamily","colors","accessibility","selectedDay","selectedDayHover","primaryColor","datepickerPadding","dateSingleDatepickerWrapperLeft","dateSingleDatepickerWrapperRight","datepickerCloseWrapperRight","dayHoverRangeBorderColor","closeFontSize","closeMargin","dayFontSize","inputLabelBorder","inputLabelBorderRadius","inputBackground","inputFontSize","inputFontWeight","inputMinHeight","inputCalendarWrapperTop","inputCalendarWrapperLeft","datepickerResetDatesWrapperMargin","dateRangeStartDateInputPadding","dateSingleInputPadding","inputPadding","xsDatepickerStyles","heatmapGradient","0.1","0.2","0.4","0.6","0.8","1"],"mappings":"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","file":"static/js/main.d5538a65.chunk.js","sourcesContent":["import {\n  CLEAR_STORE,\n  INIT_SESSION,\n  SET_AUTH,\n  SET_CHART_DATA,\n  SET_CURRENT_CITY_AND_VIEWPORT,\n  SET_EVENTS_DATA,\n  SET_EVENT_FILTER,\n  SET_HEATMAP_DATA,\n  SET_NEW_DATE,\n  SET_SEARCHQUERY_FILTER,\n  SET_SELECTED_HOUR,\n  SET_SELECTED_DATE,\n  SET_SEARCH_PARAMETERS,\n  SET_SEARCH_QUERY,\n  SET_POPUP_DATA,\n  SETUP_MAP_FROM_HISTORY,\n} from './types'\n\nexport const clearStore = () => {\n  return { type: CLEAR_STORE }\n}\nexport const setChartData = data => {\n  return {\n    type: SET_CHART_DATA,\n    payload: data,\n  }\n}\nexport const setCurrentCityAndViewport = city => {\n  return {\n    type: SET_CURRENT_CITY_AND_VIEWPORT,\n    payload: city,\n  }\n}\nexport const setEventsData = data => {\n  return {\n    type: SET_EVENTS_DATA,\n    payload: data,\n  }\n}\nexport const setEventFilter = filter => ({\n  type: SET_EVENT_FILTER,\n  payload: filter,\n})\nexport const setHeatmapData = data => {\n  return {\n    type: SET_HEATMAP_DATA,\n    payload: data,\n  }\n}\nexport const setNewDate = date => {\n  return {\n    type: SET_NEW_DATE,\n    payload: date,\n  }\n}\nexport const setSelectedDate = date => {\n  return {\n    type: SET_SELECTED_DATE,\n    payload: date,\n  }\n}\nexport const setSearchQuery = events => {\n  return {\n    type: SET_SEARCH_QUERY,\n    payload: events,\n  }\n}\nexport const setSelectedHour = hour => {\n  return {\n    type: SET_SELECTED_HOUR,\n    payload: hour,\n  }\n}\nexport const setSearchParameters = params => {\n  return {\n    type: SET_SEARCH_PARAMETERS,\n    payload: params,\n  }\n}\nexport const setSearchQueryFilter = filter => ({\n  type: SET_SEARCHQUERY_FILTER,\n  payload: filter,\n})\nexport const setupMapFromHistory = config => ({\n  type: SETUP_MAP_FROM_HISTORY,\n  payload: config,\n})\nexport const setPopupData = data => {\n  return {\n    type: SET_POPUP_DATA,\n    payload: data,\n  }\n}\nexport const initSession = config => {\n  return {\n    type: INIT_SESSION,\n    payload: config,\n  }\n}\nexport const setAuth = () => {\n  return {\n    type: SET_AUTH,\n  }\n}\n","import { SET_CITY } from './types'\n\nexport const setCurrentCity = city => {\n  return {\n    type: SET_CITY,\n    payload: city,\n  }\n}\n","import axios from 'axios'\nconst server = 'http://pp.onti.actcognitive.org:17112'\nconst config = {\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  },\n  withCredentials: true,\n  credentials: 'same-origin',\n}\nexport const requestSessionCookie = data => {\n  return axios(`${server}/login`, {\n    method: 'post',\n    data: data,\n    withCredentials: true,\n    headers: { 'Content-Type': 'application/json' },\n  })\n}\n\n\n\n\nexport const fetchHeatmap = ({\n  city,\n  topLeft,\n  botRight,\n  time,\n  selectedHour,\n}) => {\n  return axios.get(\n    `${server}/heatmap/${city}/${topLeft}/${botRight}/${\n      selectedHour ? selectedHour : time\n    }`,\n    config\n  )\n}\nexport const fetchEvents = ({\n  city,\n  topLeft,\n  botRight,\n  time,\n  selectedHour,\n}) => {\n  return axios.get(\n    `${server}/events/${city}/${topLeft}/${botRight}/${\n      selectedHour ? selectedHour : time\n    }`,\n    config\n  )\n}\nexport const fetchChartTimeData = (city, start, finish) => {\n  return axios.get(`${server}/timeline/${city}/${start}/${finish}`, config)\n}\nexport const fetchSearchEventsData = ({ city, tags, start, finish }) => {\n  return axios.get(\n    `${server}/search/${city}/${tags}/${start}/${finish}`,\n    config\n  )\n}\nexport const fetchPostData = postcode => {\n  return axios.get(`https://www.instagram.com/p/${postcode}/?__a=1`)\n}\n// export const requestSessionCookie = data => {\n//   return axios(`${server}/login`, {\n//     method: 'post',\n//     data: data,\n//     withCredentials: true,\n//     headers: { 'Content-Type': 'application/json' },\n//   })\n// }\n","import {\n  all,\n  call,\n  cancel,\n  take,\n  put,\n  fork,\n  cancelled,\n  select,\n  takeLatest,\n  takeEvery,\n} from 'redux-saga/effects'\nimport { eventChannel, END } from 'redux-saga'\nimport { push, replace } from 'connected-react-router'\n\n/******************************************************************************/\n/******************************* UTILS ****************************************/\n/******************************************************************************/\n\nimport moment from 'moment'\nimport { latLng, latLngBounds } from 'leaflet'\nimport { cities } from '../config/cities'\n\n/******************************************************************************/\n/******************************* TYPES ****************************************/\n/******************************************************************************/\n\nimport {\n  FETCH_DATA,\n  FETCH_SUCCESS,\n  FETCH_FAILURE,\n  FETCH_ALL_DATA,\n  TOGGLE_ALL_EVENTS,\n  PLAY_DEMO,\n  SET_NEW_DATE,\n  STOP_DEMO,\n  SET_CURRENT_CITY_AND_VIEWPORT,\n  SETUP_MAP_FROM_HISTORY,\n  CHANGE_VIEWPORT,\n  SET_SEARCH_PARAMETERS,\n  TOGGLE_POPUP,\n  LOADING_START,\n  LOADING_FINISH,\n  INIT_SESSION,\n} from '../actions/types'\n\n/******************************************************************************/\n/******************************* ACTIONS **************************************/\n/******************************************************************************/\n\nimport {\n  setAuth,\n  setChartData,\n  setHeatmapData,\n  setEventsData,\n  setSelectedHour,\n  setSelectedDate,\n  setSearchQuery,\n  setSearchParameters,\n  setPopupData,\n} from '../actions/dataActions'\nimport { setCurrentCity } from '../actions/cityActions'\nimport {\n  stopDemo,\n  startLoading,\n  toggleSidebar,\n  finishLoading,\n  setAuthError,\n} from '../actions/uiActions'\nimport { setViewport, setBounds } from '../actions/mapActions'\n\n/******************************************************************************/\n/******************************* HELPERS **************************************/\n/******************************************************************************/\n\nimport {\n  fetchHeatmap,\n  fetchEvents,\n  fetchChartTimeData,\n  fetchSearchEventsData,\n  fetchPostData,\n  requestSessionCookie,\n} from '../sagas/fetchData'\nimport {\n  convertEventsToGeoJSON,\n  convertHeatmapDataToLayer,\n  convertChartData,\n  convertPostData,\n  convertSearchQueryToGeoJSON,\n} from '../utils/utils'\n\n/******************************************************************************/\n/******************************* SAGAS *************************************/\n/******************************************************************************/\n\n/**\n * @func fetchSingleHeatmap - additional saga fn, that fetch each individual heatmap for one hour and put data into the store\n * @param {object} config - config object with parameters\n */\nfunction* fetchSingleHeatmap(config) {\n  try {\n    const getIsCurrentHourExists = state =>\n      state.getIn(['data', 'heatmap', `${config.time}`])\n    const isCurrentHourExists = yield select(getIsCurrentHourExists)\n    if (isCurrentHourExists !== undefined) {\n      return\n    }\n    let heatmapData = yield call(fetchHeatmap, config)\n    if (heatmapData.data) {\n      heatmapData = yield call(convertHeatmapDataToLayer, heatmapData)\n      const storeData = {\n        [config.time]: heatmapData,\n      }\n      yield put(setHeatmapData(storeData))\n    }\n  } catch (err) {\n    yield put({ type: FETCH_FAILURE, payload: err })\n  }\n}\n\n/**\n * @func fetchSingleEventLayer - additional saga fn, that fetch each individual events data for one hour and put data into the store\n * @param {object} config - config object with parameters\n */\nfunction* fetchSingleEventLayer(config) {\n  try {\n    const getIsCurrentHourExists = state =>\n      state.getIn(['data', 'events', `${config.time}`])\n    const isCurrentHourExists = yield select(getIsCurrentHourExists)\n    if (isCurrentHourExists !== undefined) {\n      return\n    }\n    let eventsData = yield call(fetchEvents, config)\n    if (eventsData.data) {\n      eventsData = yield call(convertEventsToGeoJSON, eventsData)\n      const storeData = {\n        [config.time]: eventsData,\n      }\n      yield put(setEventsData(storeData))\n    }\n  } catch (err) {\n    yield put({ type: FETCH_FAILURE, payload: err })\n  }\n}\n\n/**\n * @func handleToggleAllEvents - saga fn, that fetches heatmap data for all hours from timeline, when TOGGLE_ALL_EVENTS action is fired\n */\nfunction* handleToggleAllEvents() {\n  const getToggleAllEvents = state => state.getIn(['ui', 'isShowAllEvents'])\n  const toggleActive = yield select(getToggleAllEvents)\n  if (toggleActive) {\n    try {\n      yield put({ type: LOADING_START })\n      const getChartData = state => state.getIn(['data', 'chartData'])\n      const hours = yield select(getChartData)\n      const getCity = state => state.getIn(['city', 'cityId'])\n      const city = yield select(getCity)\n      const getTopLeft = state => state.getIn(['city', 'topLeft'])\n      const topLeft = yield select(getTopLeft)\n      const getBottomRight = state => state.getIn(['city', 'bottomRight'])\n      const botRight = yield select(getBottomRight)\n      yield all(\n        hours.map(h => {\n          const config = {\n            city,\n            topLeft,\n            botRight,\n            time: h.time,\n          }\n          return call(fetchSingleHeatmap, config)\n        })\n      )\n      yield all(\n        hours.map(h => {\n          const config = {\n            city,\n            topLeft,\n            botRight,\n            time: h.time,\n          }\n          return call(fetchSingleEventLayer, config)\n        })\n      )\n      yield put({ type: LOADING_FINISH })\n    } catch (err) {\n      console.error(err)\n    }\n  }\n}\n\n/**\n * @func handleFetchData - saga fn, that handles fetching data when viewport settings changed\n * @param {Number} payload - time param\n */\nfunction* handleFetchData({ payload }) {\n  try {\n    const getIsCurrentHourExists = state =>\n      state.getIn(['data', 'events', `${payload}`])\n    const isCurrentHourExists = yield select(getIsCurrentHourExists)\n    if (isCurrentHourExists !== undefined) {\n      yield put({ type: FETCH_SUCCESS })\n      return\n    }\n    const getCity = state => state.getIn(['city', 'cityId'])\n    const city = yield select(getCity)\n    const getTopLeft = state => state.getIn(['city', 'topLeft'])\n    const topLeft = yield select(getTopLeft)\n    const getBottomRight = state => state.getIn(['city', 'bottomRight'])\n    const botRight = yield select(getBottomRight)\n    const time = payload\n    const config = {\n      city,\n      topLeft,\n      botRight,\n      time,\n    }\n    let mapData = yield call(fetchHeatmap, config)\n   \n    if (mapData.data) {\n      mapData = yield call(convertHeatmapDataToLayer, mapData)\n      yield put(setHeatmapData(mapData))\n    }\n    let eventsData = yield call(fetchEvents, config)\n    if (eventsData.data) {\n      eventsData = yield call(convertEventsToGeoJSON, eventsData)\n      yield put(setEventsData(eventsData))\n    }\n    yield put({ type: FETCH_SUCCESS })\n  } catch (err) {\n    console.error(err)\n    yield put({ type: FETCH_FAILURE, payload: err })\n  }\n}\n\n/**\n * @func handleFetchAllData - saga fn, that fetches all data for initial app setup\n * @param {Object} data - config object\n */\nfunction* handleFetchAllData(data) {\n  if (data.type) {\n    data = data.payload\n  }\n  try {\n    const getIsCurrentHourExists = state =>\n      state.getIn([\n        'data',\n        'heatmap',\n        `${data.selectedHour ? data.selectedHour : data.time}`,\n      ])\n    const isCurrentHourExists = yield select(getIsCurrentHourExists)\n    if (isCurrentHourExists === undefined) {\n      let mapData = yield call(fetchHeatmap, data)\n      if (mapData.data) {\n        mapData = yield call(convertHeatmapDataToLayer, mapData)\n        yield put(setHeatmapData(mapData))\n      }\n      let eventsData = yield call(fetchEvents, data)\n      if (eventsData.data) {\n        eventsData = yield call(convertEventsToGeoJSON, eventsData)\n        yield put(setEventsData(eventsData))\n      }\n    }\n    let finish\n    let start\n    if (data.setup) {\n      start = data.startDate\n      finish = Number(data.startDate) + 82800\n    } else {\n      start = Number(data.time)\n      finish = Number(data.time) + 82800\n    }\n    let chartData = yield call(fetchChartTimeData, data.city, start, finish)\n    chartData = yield call(convertChartData, chartData)\n    yield put(setChartData(chartData))\n    yield put({ type: FETCH_SUCCESS })\n  } catch (err) {\n    console.error(err)\n    yield put({ type: FETCH_FAILURE, payload: err })\n  }\n}\n\n/**\n * @func countUpDemoPlay - helper fn, that counting time for demo play\n * @param {Number} start - count start\n * @param {Number} end - count end\n * @param {Array} array\n */\nfunction countUpDemoPlay(start, end, array) {\n  return eventChannel(emitter => {\n    if (start === end) {\n      emitter(END)\n    }\n    const iv = setInterval(() => {\n      let time = array[start].time\n      if (start < end) {\n        start += 1\n        emitter(time)\n      }\n      if (start === end) {\n        emitter(END)\n      }\n    }, 1000)\n    return () => {\n      clearInterval(iv)\n    }\n  })\n}\n\n/**\n * @func handleDemoPlay - saga fn for playing timeline\n */\nfunction* handlePlayDemo() {\n  yield put({ type: LOADING_START })\n  const getChartData = state => state.getIn(['data', 'chartData'])\n  const chartData = yield select(getChartData)\n  const getSelectedHour = state => state.getIn(['data', 'selectedHour'])\n  const selectedHour = yield select(getSelectedHour)\n  let index = chartData.findIndex(h => h.time === Number(selectedHour)) + 1\n  let end = chartData.length\n  try {\n    let hours = chartData.slice(index)\n    const getCity = state => state.getIn(['city', 'cityId'])\n    const city = yield select(getCity)\n    const getTopLeft = state => state.getIn(['city', 'topLeft'])\n    const topLeft = yield select(getTopLeft)\n    const getBottomRight = state => state.getIn(['city', 'bottomRight'])\n    const botRight = yield select(getBottomRight)\n    yield all(\n      hours.map(h => {\n        const config = {\n          city,\n          topLeft,\n          botRight,\n          time: h.time,\n        }\n        return call(fetchSingleHeatmap, config)\n      })\n    )\n    yield all(\n      hours.map(h => {\n        const config = {\n          city,\n          topLeft,\n          botRight,\n          time: h.time,\n        }\n        return call(fetchSingleEventLayer, config)\n      })\n    )\n    const chan = yield call(countUpDemoPlay, index, end, chartData)\n    yield put({ type: LOADING_FINISH })\n    while (true) {\n      let seconds = yield take(chan)\n      yield put(setSelectedHour(seconds))\n    }\n  } finally {\n    yield put(stopDemo())\n    if (yield cancelled()) {\n      yield put(stopDemo())\n    }\n  }\n}\n\n/**\n * @func handleSetSelectedDate - saga fn, that set selected date && selected hour, and fethes data\n * @param {Object} payload - selected time\n */\nfunction* handleSetSelectedDate({ payload }) {\n  try {\n    yield put({ type: LOADING_START })\n    const date =\n      Object.prototype.toString.call(payload) === '[object Date]'\n        ? moment(payload).unix()\n        : payload\n    const getPrevSelectedHour = state => state.getIn(['data', 'selectedHour'])\n    const prevSelectedHour = yield select(getPrevSelectedHour)\n    const getPrevSelectedDate = state => state.getIn(['data', 'selectedDate'])\n    const prevSelectedDate = yield select(getPrevSelectedDate)\n    const nextSelectedHour = date + (prevSelectedHour - prevSelectedDate)\n\n    const getCity = state => state.getIn(['city', 'cityId'])\n    const city = yield select(getCity)\n    const getTopLeft = state => state.getIn(['city', 'topLeft'])\n    const topLeft = yield select(getTopLeft)\n    const getBottomRight = state => state.getIn(['city', 'bottomRight'])\n    const botRight = yield select(getBottomRight)\n    const getCurrentBottomRight = state =>\n      state.getIn(['map', 'bounds', 'bottomRight'])\n    const currentBotRight = yield select(getCurrentBottomRight)\n    const getCurrentTopLeft = state => state.getIn(['map', 'bounds', 'topLeft'])\n    const currentTopLeft = yield select(getCurrentTopLeft)\n\n    yield put(setSelectedDate(date))\n    yield put(setSelectedHour(nextSelectedHour))\n    const config = {\n      city,\n      topLeft,\n      botRight,\n      time: date,\n      selectedHour: nextSelectedHour,\n    }\n    const getIsShowAllEvents = state => state.getIn(['ui', 'isShowAllEvents'])\n    const isShowAllEvents = yield select(getIsShowAllEvents)\n\n    const getSearchQuery = state => state.getIn(['data', 'searchQuery'])\n    const searchQuery = yield select(getSearchQuery)\n\n    if (searchQuery) {\n      yield put(setSearchQuery(null))\n      yield put(setSearchParameters(null))\n    }\n\n    if (isShowAllEvents) {\n      const finish = date + 82800\n      let chartData = yield call(fetchChartTimeData, city, date, finish)\n      chartData = yield call(convertChartData, chartData)\n      yield put(setChartData(chartData))\n      yield call(handleToggleAllEvents)\n    } else {\n      yield call(handleFetchAllData, config)\n    }\n    yield put(\n      replace(\n        `/map/${city}/${currentTopLeft.join()}/${currentBotRight.join()}/${date}`\n      )\n    )\n  } catch (err) {\n    console.error(err)\n  }\n}\n\n/**\n * @func handleSetCityAndViewport - saga fn for SET_CURRENT_CITY_AND_VIEWPORT action; sets initial data when city is selected\n * @param {Object} payload - config object with city parameters\n */\nfunction* handleSetCityAndViewport({ payload }) {\n  // четверг, 9 мая 2019 г., 0:00:00 GMT+03:00\n  const date = 1557349200\n  // четверг, 9 мая 2019 г., 22:00:00 GMT+03:00\n  const selectedHour = 1557428400\n  if (typeof payload === 'string') {\n    const cityName = payload.split(',')[0]\n    payload = cities.find(c => c.city === cityName)\n  }\n  yield put(setSelectedDate(date))\n  yield put(setSelectedHour(selectedHour))\n  const city = {\n    id: payload.id,\n    city: payload.city,\n    country: payload.country,\n    topLeft: payload.topLeft,\n    bottomRight: payload.bottomRight,\n  }\n  const viewport = {\n    center: [payload.lat, payload.lng],\n    zoom: 13,\n  }\n  yield put(setCurrentCity(city))\n  yield put(setViewport(viewport))\n  const bounds = { topLeft: payload.topLeft, bottomRight: payload.bottomRight }\n  yield put(setBounds(bounds))\n  yield put(\n    push(`/map/${city.id}/${payload.topLeft}/${payload.bottomRight}/${date}`)\n  )\n  const config = {\n    city: payload.id,\n    topLeft: payload.topLeft,\n    botRight: payload.bottomRight,\n    time: selectedHour,\n    setup: true,\n    startDate: date,\n  }\n  yield call(handleFetchAllData, config)\n  yield put(toggleSidebar())\n}\n\n/**\n * @func setInitialBounds - saga fn; sets initial bounds when app initialized from url history\n * @param {Object} payload - config object with bounds parameters\n */\nfunction* setInitialBounds(payload) {\n  let historyTopLeft = payload.topLeft.split(',').map(d => parseFloat(d))\n  let historyBotRight = payload.botRight.split(',').map(d => parseFloat(d))\n\n  const corner1 = latLng(historyTopLeft[0], historyTopLeft[1])\n  const corner2 = latLng(historyBotRight[0], historyBotRight[1])\n  const center = latLngBounds(corner1, corner2).getCenter()\n  const newViewport = {\n    zoom: 11,\n    center: [center.lat, center.lng],\n  }\n  yield put(setViewport(newViewport))\n  const newBounds = { topLeft: historyTopLeft, bottomRight: historyBotRight }\n  yield put(setBounds(newBounds))\n}\n\n/**\n * @func handleSetupMapFromHistory - saga fn; fires when app is initialized from url history\n * @param {Object} payload - config object\n */\nfunction* handleSetupMapFromHistory({ payload }) {\n  try {\n    let currentHistoryCity = payload.city\n    const findCity = configCity => {\n      return configCity.id === currentHistoryCity\n    }\n    currentHistoryCity = cities.find(findCity)\n    if (currentHistoryCity === undefined) {\n      yield put(push('/'))\n    }\n    yield put(setCurrentCity(currentHistoryCity))\n    yield put(setSelectedDate(Number(payload.time)))\n    yield put(setSelectedHour(Number(payload.time)))\n    yield call(setInitialBounds, payload)\n    const config = {\n      ...payload,\n      topLeft: currentHistoryCity.topLeft,\n      botRight: currentHistoryCity.bottomRight,\n      time: Number(payload.time),\n    }\n    yield call(handleFetchAllData, config)\n    yield put(toggleSidebar())\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * @func handleChangeViewport - saga fn; fires when viewport of the map is changing\n * @param {Object} payload - config object with viewport settings\n */\nfunction* handleChangeViewport({ payload }) {\n  yield put(setViewport(payload.viewport))\n}\n\n/**\n * @func handleSearchEvents - saga fn; fires when SET_SEARCH_PARAMETERS is dispatched; calculates config object to fetch events data in certain time limits\n * @param {Object} payload - config object with search tags, startDate, endDate for searching\n */\nfunction* handleSearchEvents({ payload }) {\n  try {\n    yield put(startLoading())\n    const getCurrentCityId = state => state.getIn(['city', 'cityId'])\n    const currentCityId = yield select(getCurrentCityId)\n    const searchTags = payload.tags.map(tag => {\n      if (tag[0] === '@') {\n        return '%40'.concat(tag.slice(1))\n      } else {\n        return '%23'.concat(tag.slice(1))\n      }\n    })\n    const config = {\n      city: currentCityId,\n      tags: searchTags.join(),\n      start: payload.startDate,\n      finish: payload.endDate,\n    }\n    let eventsData = yield call(fetchSearchEventsData, config)\n    if (eventsData.data) {\n      eventsData = yield call(convertSearchQueryToGeoJSON, eventsData)\n      yield put(setSearchQuery(eventsData))\n    } else {\n      yield put(setSearchQuery(null))\n    }\n    yield put(finishLoading())\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * @func fetchSingleInstagramPost - saga fn; fetches single instagram post\n * @param {String} postcode - instagram post postcode\n */\nfunction* fetchSingleInstagramPost(postcode) {\n  try {\n    let postData = yield call(fetchPostData, postcode)\n    if (!postData) {\n      return\n    } else {\n      postData = yield call(\n        convertPostData,\n        postData.data.graphql.shortcode_media\n      )\n      return postData\n    }\n  } catch (err) {\n    yield put({ type: FETCH_FAILURE, payload: err })\n  }\n}\n\n/**\n * @func handleFetchPopupData - saga fn; fires when TOGGLE_POPUP action is dispatched; fetches instagram media for popup\n * @param {Array} payload - instagram postcodes\n */\nfunction* handleFetchPopupData({ payload }) {\n  const getIsPopupOpen = state => state.getIn(['ui', 'isPopupOpen'])\n  const isPopupOpen = yield select(getIsPopupOpen)\n  const getPopupData = state => state.getIn(['data', 'currentPopupData'])\n  const popupData = yield select(getPopupData)\n  if (popupData) {\n    yield put(setPopupData(null))\n  }\n  if (isPopupOpen) {\n    const data = yield all(\n      payload.map(p => {\n        return call(fetchSingleInstagramPost, p)\n      })\n    )\n    const filteredData = data.filter(d => d !== undefined)\n    yield put(setPopupData(filteredData))\n  }\n}\n\nconst delay = time => new Promise(resolve => setTimeout(resolve, time))\n\nfunction* handleInitSession({ payload }) {\n  try {\n    const res = yield call(requestSessionCookie, payload)\n    console.log('res', res\n    )\n    if (res.status === 200) {\n      yield put(setAuth())\n      yield put(replace(`/`))\n    }\n  } catch (error) {\n    yield put(setAuthError('Incorrect login / password, please try again'))\n    yield call(delay, 2000)\n    yield put(setAuthError(''))\n    console.error(error)\n  }\n}\n\n/******************************************************************************/\n/******************************* WATCHERS *************************************/\n/******************************************************************************/\n\nexport function* fetchDataSaga() {\n  yield takeLatest(FETCH_DATA, handleFetchData)\n}\nexport function* fetchAllDataSaga() {\n  yield takeLatest(FETCH_ALL_DATA, handleFetchAllData)\n}\nexport function* toggleAllEventsSaga() {\n  yield takeLatest(TOGGLE_ALL_EVENTS, handleToggleAllEvents)\n}\nexport function* setSelectedDateSaga() {\n  yield takeLatest(SET_NEW_DATE, handleSetSelectedDate)\n}\nexport function* setCityAndViewportSaga() {\n  yield takeLatest(SET_CURRENT_CITY_AND_VIEWPORT, handleSetCityAndViewport)\n}\nexport function* setupMapFromHistorySaga() {\n  yield takeLatest(SETUP_MAP_FROM_HISTORY, handleSetupMapFromHistory)\n}\nexport function* changeViewportSaga() {\n  yield takeLatest(CHANGE_VIEWPORT, handleChangeViewport)\n}\nexport function* searchEventsSaga() {\n  yield takeEvery(SET_SEARCH_PARAMETERS, handleSearchEvents)\n}\nexport function* fetchPopupDataSaga() {\n  yield takeLatest(TOGGLE_POPUP, handleFetchPopupData)\n}\nexport function* initSessionSaga() {\n  yield takeLatest(INIT_SESSION, handleInitSession)\n}\nexport function* timerSaga() {\n  while (yield take(PLAY_DEMO)) {\n    // starts the task in the background\n    const channel = yield fork(handlePlayDemo)\n    // wait for the user stop action\n    yield take(STOP_DEMO)\n    // user clicked stop. cancel the background task\n    // this will cause the forked bgSync task to jump into its finally block\n    yield cancel(channel)\n  }\n}\n","import { all } from 'redux-saga/effects'\nimport {\n  changeViewportSaga,\n  fetchDataSaga,\n  fetchAllDataSaga,\n  toggleAllEventsSaga,\n  setSelectedDateSaga,\n  setCityAndViewportSaga,\n  timerSaga,\n  setupMapFromHistorySaga,\n  searchEventsSaga,\n  fetchPopupDataSaga,\n  initSessionSaga,\n} from './apiSaga'\n\nfunction* rootSaga() {\n  yield all([\n    fetchDataSaga(),\n    fetchAllDataSaga(),\n    toggleAllEventsSaga(),\n    timerSaga(),\n    setSelectedDateSaga(),\n    setCityAndViewportSaga(),\n    setupMapFromHistorySaga(),\n    changeViewportSaga(),\n    searchEventsSaga(),\n    fetchPopupDataSaga(),\n    initSessionSaga(),\n  ])\n}\n\nexport default rootSaga\n","import { combineReducers } from 'redux-immutable'\nimport { connectRouter } from 'connected-react-router/immutable'\n\nimport dataReducer from './dataReducer'\nimport cityReducer from './cityReducer'\nimport mapReducer from './mapReducer'\nimport uiReducer from './uiReducer'\n\nconst createRootReducer = history =>\n  combineReducers({\n    router: connectRouter(history),\n    city: cityReducer,\n    ui: uiReducer,\n    map: mapReducer,\n    data: dataReducer,\n  })\nexport default createRootReducer\n","import 'normalize.css/normalize.css'\nimport { createGlobalStyle } from 'styled-components'\nimport {\n  fontSize,\n  darkGrey,\n  grey,\n  defaultBackground,\n  orange,\n} from '../../config/styles'\nimport openSansRegular from '../../assets/fonts/Open_Sans/OpenSans-Regular.ttf'\nimport openSansLight from '../../assets/fonts/Open_Sans/OpenSans-Light.ttf'\nimport openSansSemiBold from '../../assets/fonts/Open_Sans/OpenSans-SemiBold.ttf'\nimport openSansBold from '../../assets/fonts/Open_Sans/OpenSans-Bold.ttf'\n\nimport montserratRegular from '../../assets/fonts/Montserrat/Montserrat-Regular.ttf'\nimport montserratSemiBold from '../../assets/fonts/Montserrat/Montserrat-SemiBold.ttf'\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    \n\n    &::-webkit-scrollbar {\n      width: 0;\n    }\n\n    &::-webkit-scrollbar-track {\n      -webkit-box-shadow: none;\n      border-radius: 0;\n    }\n    ::-moz-scrollbar{\n      width: 0px;\n      height: 0px;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      border: transparent 1px solid;\n      border: transparent;\n      background-color: transparent;\n    }\n    h1, h2, h3, h4, h5, h6 {\n      margin: 0;\n      margin-block-start: 0.5rem;\n      margin-block-end: 0.5rem;\n    }\n    p {\n      margin-block-start: 0em;\n      margin-block-end: 0.5rem;\n    }\n  }\n\n\n  @font-face {\n    font-family: Open-Sans-Regular;\n    src:\n      url(${openSansRegular}) format('truetype');\n    font-weight: 400;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: Open-Sans-Light;\n    src:\n      url(${openSansLight}) format('truetype');\n    font-weight: 300;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: Open-Sans-SemiBold;\n    src:\n      url(${openSansSemiBold}) format('truetype');\n    font-weight: 700;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: Open-Sans-Bold;\n    src:\n      url(${openSansBold}) format('truetype');\n    font-weight: 800;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: Montserrat-Regular;\n    src:\n      url(${montserratRegular}) format('truetype');\n    font-weight: 400;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: Montserrat-SemiBold;\n    src:\n      url(${montserratSemiBold}) format('truetype');\n    font-weight: 700;\n    font-style: normal;\n  }\n\n  html {\n    font-size: ${fontSize};\n  }\n  body {\n    font-family: 'Monserrat-Regular', sans-serif;\n    color: ${darkGrey};\n    background-color: ${defaultBackground};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  a {\n    text-decoration: none;\n  }\n  input { border-style: none; background: transparent; outline: 0; font-family: 'Open-Sans-Regular', sans-serif; letter-spacing: 0.2px }\n  button { padding: 0; background: none; border: none; outline: 0; }\n\n  .title {\n    font-family: 'Montserrat-SemiBold', sans-serif;\n    color: ${darkGrey};\n  }\n  .title_light {\n    color: white;\n  }\n  .title_h1 {\n    font-size: 4.8rem;\n    letter-spacing: 2px;\n    @media (max-width: 1000px) {\n      font-size: 3.8rem;\n    }\n    @media (max-width: 400px) {\n      font-size: 2.5rem;\n    }\n  }\n  .title_h2 {\n    font-size: 2.7rem;\n    @media (max-width: 400px) {\n      font-size: 1.7rem;\n    }\n  }\n  .title_h3 {\n    font-size: 2.4rem;\n  }\n  .title_h4 {\n    font-size: 1.73rem;\n    @media (max-width: 400px) {\n      font-size: 1.5rem;\n    }\n  }\n  .title_h5 {\n    font-size: 1.5rem;\n  }\n  .title_light {\n    color: ${grey}\n  }\n  .text {\n    font-family: 'Open-Sans-Regular', sans-serif;\n    color: ${darkGrey};\n  }\n  .text_bold {\n    font-family: 'Open-Sans-Bold', sans-serif;\n  }\n  .text_light {\n    color: white;\n  }\n  .text_s1 {\n    font-size: 1.12rem;\n  }\n  .text_s2 {\n    font-size: 0.87rem;\n  }\n  .text_error {\n    color: #E32636;\n  }\n  .text_subheading {\n    font-size: 1.8rem;\n    line-height: 3.4rem;\n    @media (max-width: 1000px) {\n      font-size: 1.5rem;\n      line-height: 2.2rem;\n    }\n  }\n  .text_p1 {\n    font-size: 1.8rem;\n    @media (max-width: 1000px) {\n      font-size: 1.5rem;\n    }\n    @media (max-width: 400px) {\n      font-size: 1rem;\n    }\n  }\n  .text_p1-light {\n    font-family: 'Open-Sans-Light', sans-serif;\n    font-size: 1.4rem;\n  }\n  .text_p2-bold {\n    font-family: 'Open-Sans-Bold', sans-serif;\n    font-size: 1rem;\n  }\n  .text_p2 {\n    font-size: 1.1rem;\n  }\n  .text_p3 {\n    font-size: 1.5rem;\n  }\n  .text_subtitle {\n    font-family: 'Open-Sans-Semibold', sans-serif;\n    font-size: 1rem;\n  }\n  .text_input {\n    font-size: 1.4rem;\n  }\n  .text_crossed {\n    text-decoration: line-through;\n    color: ${grey}\n  }\n  .text_italic {\n    font-style: italic;\n  }\n  .text_link {\n    transition: 0.3s all;\n    &:hover {\n      color: ${orange}\n    }\n  }\n  .text_post {\n    font-size: 1.3rem;\n  }\n  .text_location {\n    margin-block-start: 0.5rem;\n  }\n  .ReactModal__Overlay--after-open {\n    z-index: 200;\n  }\n  .ReactModal__Content--after-open {\n    max-width: 44rem;\n  }\n`\n","import styled from 'styled-components'\n\nimport { lightGrey } from '../../config/styles'\n\nexport default styled.ul`\n  will-change: display;\n  display: ${({ showSuggestions }) =>\n    showSuggestions !== '' ? 'block' : 'hidden'};\n  position: absolute;\n  width: 100%;\n  left: 0;\n  top: 3.5rem;\n  box-shadow: 0px 5px 10px #bfc2c8;\n  border-top-width: 0;\n  list-style: none;\n  margin-top: 0;\n  max-height: 14.3rem;\n  overflow-y: auto;\n  padding-left: 0;\n  z-index: 1;\n  .suggestion-container {\n    border-bottom: 1px solid ${lightGrey};\n    border-left: 1px solid ${lightGrey};\n    border-right: 1px solid ${lightGrey};\n    padding: 1rem 1rem 0.5rem 1rem;\n    background-color: #fff;\n    p {\n      font-size: 1.5rem;\n      font-family: 'Montserrat-SemiBold', sans-serif;\n    }\n  }\n  .suggestion-container:last-of-type {\n    border-radius: 0 0 5px 5px;\n  }\n  .suggestion-active,\n  & .suggestion-container:hover {\n    background-color: ${lightGrey};\n    cursor: pointer;\n    font-weight: 700;\n  }\n`\n","import React, { useState, useEffect, memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { cities } from '../../config/cities'\n\n// images\nimport Magnifier from '../../assets/svg/Magnifier'\n\n// styled\nimport InputStyled from './Input.styled'\nimport InputButton from './InputButton'\nimport InputField from './InputField'\nimport Suggestions from './Suggestions'\n\nfunction AutocompleteInput({ type, defaultValue, handleClick }) {\n  const [activeSuggestion, setActiveSuggestion] = useState(0)\n  const [filteredSuggestions, setFilteredSuggestions] = useState([])\n  const [showSuggestions, setShowSuggestions] = useState(false)\n  const [userInput, setUserInput] = useState('')\n  const suggestions = cities.map(c => {\n    return {\n      city: `${c.city}, ${c.country}`,\n      avaliable: c.avaliable,\n    }\n  })\n\n  useEffect(() => {\n    if (defaultValue) {\n      setUserInput(defaultValue)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  const onChange = e => {\n    const userInput = e.currentTarget.value\n\n    const filteredSuggestions = suggestions.filter(\n      suggestion =>\n        suggestion.city.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    )\n    setActiveSuggestion(0)\n    setFilteredSuggestions(filteredSuggestions)\n    setShowSuggestions(true)\n    setUserInput(e.currentTarget.value)\n  }\n  const onClick = e => {\n    setActiveSuggestion(0)\n    setFilteredSuggestions([])\n    setShowSuggestions(false)\n    setUserInput(e.currentTarget.innerText)\n  }\n  const onKeyDown = e => {\n    // User pressed the enter key\n    if (e.keyCode === 13) {\n      setActiveSuggestion(0)\n      setShowSuggestions(false)\n      setUserInput(filteredSuggestions[activeSuggestion])\n    }\n    // User pressed the up arrow\n    else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return\n      }\n      setActiveSuggestion(activeSuggestion - 1)\n    }\n    // User pressed the down arrow\n    else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\n        return\n      }\n      setActiveSuggestion(activeSuggestion + 1)\n    }\n  }\n  const handleButtonClick = () => {\n    handleClick(userInput)\n  }\n\n  return (\n    <>\n      <InputStyled type={type} showSuggestions={showSuggestions}>\n        <InputField\n          placeholder=\"Search...\"\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          value={userInput}\n        />\n        <InputButton\n          style={{\n            cursor: userInput ? 'pointer' : 'not-allowed',\n          }}\n          onClick={handleButtonClick}\n        >\n          <Magnifier />\n        </InputButton>\n        <Suggestions showSuggestions={showSuggestions}>\n          {filteredSuggestions.map((suggestion, index) => {\n            let className\n            if (index === activeSuggestion) {\n              className = 'suggestion-active'\n            }\n            if (suggestion.avaliable) {\n              return (\n                <li\n                  className={className}\n                  key={suggestion.city}\n                  onClick={onClick}\n                >\n                  <div className=\"suggestion-container\">\n                    <p className=\"text\">{suggestion.city}</p>\n                  </div>\n                </li>\n              )\n            } else {\n              return (\n                <li className={className} key={suggestion.city}>\n                  <div\n                    className=\"suggestion-container\"\n                    style={{ cursor: 'not-allowed' }}\n                  >\n                    <p>\n                      <span className=\"text text_input text_crossed\">\n                        {suggestion.city}\n                      </span>{' '}\n                      <span className=\"text text_italic\">avaliable soon</span>\n                    </p>\n                  </div>\n                </li>\n              )\n            }\n          })}\n        </Suggestions>\n      </InputStyled>\n    </>\n  )\n}\nAutocompleteInput.propTypes = {\n  defaultValue: PropTypes.string,\n  type: PropTypes.string,\n  value: PropTypes.string,\n}\nexport default memo(AutocompleteInput)\n","import styled from 'styled-components'\nimport { darkGrey, lightGrey, orange } from '../../config/styles'\nexport default styled.div`\n  position: fixed;\n  margin: 0 auto;\n  width: 100%;\n  max-width: 100%;\n  z-index: 150;\n  background-color: #ffffff;\n  border-bottom: 1px solid ${lightGrey};\n\n  .navigation {\n    display: flex;\n    justify-content: space-between;\n    flex-direction: row;\n    align-items: center;\n    height: 7rem;\n    width: 97%;\n    margin: 0 auto;\n    @media (max-width: 700px) {\n      width: 93%;\n    }\n  }\n  .navigation__container {\n    flex-basis: 60%;\n    display: flex;\n    @media (max-width: 1180px) {\n      flex-basis: 80%;\n    }\n    @media (max-width: 700px) {\n      flex-basis: 100%;\n    }\n  }\n  .navigation__input {\n    width: 55%;\n    & input {\n      color: ${darkGrey};\n      font-size: 1.5rem;\n      font-family: 'Montserrat-SemiBold', sans-serif;\n    }\n    & svg {\n      width: 2rem;\n      height: 2rem;\n    }\n    @media (max-width: 1180px) {\n      flex-basis: 80%;\n    }\n    @media (max-width: 1180px) {\n      flex-basis: 100%;\n    }\n  }\n  .navigation__button {\n    cursor: pointer;\n    & svg {\n      transition: all 0.3s;\n      width: 3rem;\n      height: 3rem;\n      & path {\n        transition: all 0.3s;\n        fill: ${darkGrey};\n      }\n      :hover {\n        transform: translateX(-3px);\n        & path {\n          fill: ${orange};\n        }\n      }\n    }\n  }\n  & .navigation__links-container {\n    flex-basis: 40%;\n    list-style-type: none;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 15rem;\n    @media (max-width: 700px) {\n      flex-basis: 0%;\n      display: none;\n    }\n  }\n  & .navigation__link {\n    display: inline-block;\n    &:last-of-type {\n      margin-left: 3.5rem;\n    }\n  }\n  & a {\n    transition: all 0.3s;\n  }\n  & a:hover {\n    color: ${orange};\n  }\n  .navigation__logo {\n    margin-right: 4rem;\n\n    & svg {\n      width: 3.5rem;\n      height: 3.5rem;\n      & path {\n        transition: all 0.3s;\n      }\n    }\n    &:hover {\n      & svg path {\n        fill: ${darkGrey};\n      }\n    }\n    @media (max-width: 1180px) {\n      margin-right: 2rem;\n    }\n  }\n`\n","import React from 'react'\n\nexport function BackButton() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      width=\"1em\"\n      height=\"1em\"\n      preserveAspectRatio=\"xMidYMid meet\"\n      viewBox=\"0 0 1024 1024\"\n    >\n      <path\n        d=\"M872 474H286.9l350.2-304c5.6-4.9 2.2-14-5.2-14h-88.5c-3.9 0-7.6 1.4-10.5 3.9L155 487.8a31.96 31.96 0 0 0 0 48.3L535.1 866c1.5 1.3 3.3 2 5.2 2h91.5c7.4 0 10.8-9.2 5.2-14L286.9 550H872c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\"\n        fill=\"#626262\"\n      />\n    </svg>\n  )\n}\n","import React from 'react'\n\nfunction EMlogo() {\n  return (\n    <svg\n      width=\"512\"\n      height=\"512\"\n      viewBox=\"0 0 512 512\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0)\">\n        <path\n          d=\"M256.002 512C187.621 511.999 123.334 485.37 74.982 437.018C26.631 388.667 0.002 324.38 0 256C0.002 187.62 26.631 123.332 74.981 74.98C123.333 26.628 187.619 2.81659e-08 255.998 2.81659e-08C324.378 -0.000999972 388.665 26.626 437.018 74.976C442.876 80.834 442.876 90.331 437.018 96.189C431.161 102.047 421.663 102.047 415.805 96.189C373.119 53.506 316.365 29.999 255.998 30C131.385 30 30.003 131.383 30 256C30.003 380.614 131.387 481.997 256.002 482C380.618 482 482 380.616 482 255.998C482 247.714 488.716 240.998 497 240.998C505.284 240.998 512 247.714 512 255.998C512 324.378 485.371 388.666 437.019 437.019C388.667 485.371 324.381 512 256.002 512Z\"\n          fill=\"#E4E9F2\"\n        />\n        <path\n          d=\"M256.002 415.6C167.998 415.6 96.4019 344.004 96.4019 256C96.4019 167.996 167.998 96.4 256.002 96.4C298.629 96.4 338.706 112.999 368.851 143.139C374.709 148.996 374.71 158.494 368.853 164.352C362.996 170.21 353.498 170.211 347.64 164.354C323.161 139.879 290.617 126.4 256.002 126.4C184.54 126.4 126.402 184.538 126.402 256C126.402 327.462 184.54 385.6 256.002 385.6C327.463 385.6 385.601 327.462 385.601 256C385.601 247.716 392.317 241 400.601 241C408.885 241 415.601 247.716 415.601 256C415.601 344.003 344.005 415.6 256.002 415.6Z\"\n          fill=\"#E4E9F2\"\n        />\n        <path\n          d=\"M415.805 96.19C421.662 102.048 431.16 102.047 437.018 96.19C442.876 90.332 442.876 80.835 437.018 74.977C388.665 26.626 324.378 -0.000999972 255.998 2.81659e-08V30C316.365 29.999 373.119 53.506 415.805 96.19Z\"\n          fill=\"#E4E9F2\"\n        />\n        <path\n          d=\"M497 240.998C488.716 240.998 482 247.714 482 255.998C482 380.616 380.618 482 256.002 482C256.001 482 255.999 482 255.998 482V512C255.999 512 256.001 512 256.002 512C324.381 512 388.667 485.371 437.019 437.019C485.371 388.666 512 324.378 512 255.998C512 247.714 505.284 240.998 497 240.998Z\"\n          fill=\"#E4E9F2\"\n        />\n        <path\n          d=\"M256.002 126.4C290.616 126.4 323.16 139.879 347.64 164.354C353.498 170.211 362.995 170.211 368.853 164.352C374.711 158.494 374.71 148.996 368.851 143.139C338.706 112.999 298.629 96.4 256.002 96.4C256.001 96.4 255.999 96.4 255.998 96.4V126.4C255.999 126.4 256.001 126.4 256.002 126.4Z\"\n          fill=\"#E4E9F2\"\n        />\n        <path\n          d=\"M256.002 415.6C344.005 415.6 415.601 344.004 415.601 256C415.601 247.716 408.885 241 400.601 241C392.317 241 385.601 247.716 385.601 256C385.601 327.461 327.463 385.6 256.002 385.6C256.001 385.6 255.999 385.6 255.998 385.6V415.6C255.999 415.6 256.001 415.6 256.002 415.6Z\"\n          fill=\"#E4E9F2\"\n        />\n        <path\n          d=\"M437.018 74.98C431.161 69.123 421.663 69.123 415.805 74.98L288.818 201.97C279.027 195.998 267.759 192.8 255.998 192.801C221.151 192.801 192.801 221.152 192.801 256C192.801 290.848 221.153 319.199 256.001 319.199C290.849 319.199 319.201 290.848 319.201 256.001C319.201 244.24 316.002 232.975 310.031 223.184L437.018 96.194C442.876 90.335 442.876 80.838 437.018 74.98Z\"\n          fill=\"#E4E9F2\"\n        />\n        <path\n          d=\"M211.331 300.667C222.774 312.111 238.575 319.199 256 319.199C290.849 319.199 319.2 290.848 319.2 256.001C319.2 244.24 316.001 232.975 310.03 223.184L437.017 96.194C442.875 90.336 442.875 80.839 437.017 74.981L211.331 300.667Z\"\n          fill=\"#E4E9F2\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width=\"512\" height=\"512\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  )\n}\nexport default EMlogo\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, useLocation } from 'react-router-dom'\n\n// components\nimport AutocompleteInput from '../../components/Input/AutocompleteInput.jsx'\n\n// styled\nimport Container from './Navigation.styled'\n\n// images\nimport { BackButton } from '../../assets/svg/BackButton'\nimport EMlogo from '../../assets/svg/EMlogo'\n\nfunction Navigation({\n  bounds,\n  clearStore,\n  currentCityId,\n  currentCity,\n  currentCityCountry,\n  replace,\n  selectedDate,\n  setCurrentCityAndViewport,\n}) {\n  const location = useLocation()\n\n  const handleGoToMainClick = () => {\n    clearStore()\n  }\n  const onButtonClick = () => {\n    setCurrentCityAndViewport()\n  }\n  const handleGoBack = () => {\n    const topLeft = bounds.toJS().topLeft.join()\n    const bottomRight = bounds.toJS().bottomRight.join()\n    replace(`/map/${currentCityId}/${topLeft}/${bottomRight}/${selectedDate}`)\n  }\n  return (\n    <Container>\n      <nav className=\"navigation\">\n        {(location.pathname === '/about' || location.pathname === '/team') &&\n        currentCity ? (\n          <button className=\"navigation__button\" onClick={handleGoBack}>\n            <BackButton />\n          </button>\n        ) : (\n          <div className=\"navigation__container\">\n            <div className=\"navigation__logo\">\n              <Link\n                className=\"text text_p3 text_link\"\n                onClick={handleGoToMainClick}\n                to=\"/\"\n              >\n                <EMlogo />\n              </Link>\n            </div>\n            <div className=\"navigation__input\">\n              {currentCity && currentCityCountry && (\n                <AutocompleteInput\n                  defaultValue={`${currentCity}, ${currentCityCountry}`}\n                  type=\"sidebar\"\n                  handleClick={onButtonClick}\n                />\n              )}\n              {!currentCity && !currentCityCountry && (\n                <AutocompleteInput type=\"sidebar\" handleClick={onButtonClick} />\n              )}\n            </div>\n          </div>\n        )}\n\n        <div className=\"navigation__links\">\n          <ul className=\"navigation__links-container\">\n            <li className=\"navigation__link\">\n              <Link to=\"/team\" className=\"text text_p3\">\n                Team\n              </Link>\n            </li>\n            <li className=\"navigation__link\">\n              <Link to=\"/about\" className=\"text text_p3\">\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </Container>\n  )\n}\nNavigation.propTypes = {\n  bounds: PropTypes.object,\n  clearStore: PropTypes.func.isRequired,\n  currentCityId: PropTypes.string,\n  currentCity: PropTypes.string,\n  currentCityCountry: PropTypes.string,\n  replace: PropTypes.func.isRequired,\n  selectedDate: PropTypes.number,\n  setCurrentCityAndViewport: PropTypes.func.isRequired,\n}\nexport default Navigation\n","import createImmutableSelector from 'create-immutable-selector'\nimport { connect } from 'react-redux'\nimport { replace } from 'react-router-redux'\n\n// selectors\nimport {\n  currentCityIdSelector,\n  currentCitySelector,\n  currentCityCountrySelector,\n} from '../../reducers/cityReducer'\nimport { boundsSelector } from '../../reducers/mapReducer'\nimport { selectedDateSelector } from '../../reducers/dataReducer'\n\n// actions\nimport { setCurrentCityAndViewport } from '../../actions/dataActions'\n\n// actions\nimport { clearStore } from '../../actions/dataActions'\n\nimport Navigation from './Navigation.jsx'\n\nconst mapStateToProps = createImmutableSelector(\n  boundsSelector,\n  currentCityIdSelector,\n  currentCitySelector,\n  currentCityCountrySelector,\n  selectedDateSelector,\n  (bounds, currentCityId, currentCity, currentCityCountry, selectedDate) => ({\n    bounds,\n    currentCityId,\n    currentCity,\n    currentCityCountry,\n    selectedDate,\n  })\n)\nconst mapDispatchToProps = dispatch => ({\n  clearStore: () => dispatch(clearStore()),\n  setCurrentCityAndViewport: city => dispatch(setCurrentCityAndViewport(city)),\n  replace: path => dispatch(replace(path)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\n","import React, { Suspense, lazy } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nimport { GlobalStyle } from './globalStyles'\n\n// components\nimport Loading from '../../components/Loading/Loading'\n\n// containers\nimport Navigation from '../Navigation'\n\n// routes\nconst MapPage = lazy(() => import('../MapPage'))\nconst AboutPage = lazy(() => import('../../components/Pages/AboutPage.jsx'))\nconst TeamPage = lazy(() => import('../../components/Pages/TeamPage.jsx'))\nconst StartingPage = lazy(() => import('../StartingPage'))\nconst LoginPage = lazy(() => import('../LoginPage'))\n\nfunction App({ session, auth }) {\n  document.title = 'Event monitoring'\n  return (\n    <Suspense fallback={<Loading />}>\n      <GlobalStyle />\n      {auth ? (\n        <>\n          <Navigation />\n          <Switch>\n            <Route exact path=\"/\" component={StartingPage} />\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route\n              exact\n              path=\"/map/:city/:topLeft/:botRight/:time\"\n              component={MapPage}\n            />\n            <Route exact path=\"/about\" component={AboutPage} />\n            <Route exact path=\"/team\" component={TeamPage} />\n            <Route render={() => <Redirect to=\"/\" />} />\n          </Switch>\n        </>\n      ) : (\n        <Switch>\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route render={() => <Redirect to=\"/login\" />} />\n        </Switch>\n      )}\n    </Suspense>\n  )\n}\n\nexport default App\n","import { connect } from 'react-redux'\nimport createImmutableSelector from 'create-immutable-selector'\n\nimport { authSelector } from '../../reducers/dataReducer'\n\nimport App from './App'\n\nconst mapStateToProps = createImmutableSelector(authSelector, auth => ({\n  auth,\n}))\n\nconst mapDispatchToProps = dispatch => ({})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport { createBrowserHistory } from 'history'\nimport { routerMiddleware } from 'connected-react-router'\n// import { BrowserRouter as Router } from 'react-router-dom'\nimport { ConnectedRouter } from 'connected-react-router/immutable'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootSaga from './sagas/saga'\n\n// root reducer\nimport createRootReducer from './reducers'\n\nimport App from './containers/App'\n\nexport const history = createBrowserHistory()\n\nconst sagaMiddleware = createSagaMiddleware()\n\n// all middlewares with redux dev tools\n//const middlewares = [sagaMiddleware]\n\n// const composeEnhancers = composeWithDevTools(applyMiddleware(...middlewares))\n\nconst store = createStore(\n  createRootReducer(history),\n  composeWithDevTools(\n    applyMiddleware(\n      routerMiddleware(history), // for dispatching history actions\n      sagaMiddleware\n    )\n  )\n)\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n","import axios from 'axios'\nimport { fromJS, Set, List } from 'immutable'\nimport moment from 'moment'\nimport { uuid } from 'uuidv4'\nimport distance from '@turf/distance'\nimport { point } from '@turf/helpers'\n\nexport const convertEventsToGeoJSON = async ({ data }) => {\n  const events = await Promise.all(\n    data.map(async d => {\n      let lat = Number(d.Center.split(',')[0])\n      let lon = Number(d.Center.split(',')[1])\n      let postData\n      try {\n        postData = await axios.get(\n          `https://www.instagram.com/p/${d.PostCodes[0]}/?__a=1`\n        )\n        return fromJS({\n          properties: {\n            tags: d.Tags,\n            postcodes: d.PostCodes,\n            title: d.Title,\n            start: d.Start,\n            finish: d.Finish,\n            id: uuid(),\n            photoUrl: `${postData.data.graphql.shortcode_media.display_url}`,\n          },\n          geometry: {\n            coordinates: [lat, lon],\n          },\n        })\n      } catch (error) {\n        postData = await axios.get(\n          `https://www.instagram.com/p/${d.PostCodes[1]}/?__a=1`\n        )\n        return fromJS({\n          properties: {\n            tags: d.Tags,\n            postcodes: d.PostCodes,\n            title: d.Title,\n            start: d.Start,\n            finish: d.Finish,\n            id: uuid(),\n            photoUrl: `${postData.data.graphql.shortcode_media.display_url}`,\n          },\n          geometry: {\n            coordinates: [lat, lon],\n          },\n        })\n      }\n    })\n  )\n  return Set(events)\n}\nexport const convertSearchQueryToGeoJSON = ({ data }) => {\n  return List(\n    data.map(d => {\n      let lat = Number(d.Center.split(',')[0])\n      let lon = Number(d.Center.split(',')[1])\n      return fromJS({\n        type: 'Feature',\n        properties: {\n          cluster: false,\n          tags: d.Tags,\n          postcodes: d.PostCodes,\n          title: d.Title,\n          start: d.Start,\n          finish: d.Finish,\n          id: uuid(),\n          photoUrl: `https://instagram.com/p/${d.PostCodes[0]}/media/?size=m`,\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: [lat, lon],\n        },\n      })\n    })\n  )\n}\nexport const convertHeatmapDataToLayer = ({ data }) => {\n  return Set(\n    data.map(d => {\n      let coordinates = d.c.split(',')\n      return fromJS([Number(coordinates[0]), Number(coordinates[1]), `${d.n}`])\n    })\n  )\n}\nexport const convertChartData = ({ data }) => {\n  data.sort((a, b) => {\n    if (a.time > b.time) {\n      return 1\n    }\n    if (a.time < b.time) {\n      return -1\n    }\n    return 0\n  })\n  return data.map(d => {\n    return {\n      localTime: moment.unix(d.time).format('HH'),\n      posts: d.posts,\n      events: d.events,\n      time: d.time,\n    }\n  })\n}\nexport const convertPostData = post => {\n  return {\n    photoUrl: post.display_url,\n    caption: post.edge_media_to_caption.edges[0].node.text,\n    likes: post.edge_media_preview_like.count,\n    location: post.location.name,\n    profilePicUrl: post.owner.profile_pic_url,\n    username: post.owner.username,\n    profileLink: `https://www.instagram.com/${post.owner.username}`,\n    postLink: `https://www.instagram.com/p/${post.shortcode}/`,\n    id: post.id,\n  }\n}\nexport const calculateDistance = (\n  viewportCenterCoordinates,\n  eventCoordinates\n) => {\n  const from = point(viewportCenterCoordinates)\n  const to = point(eventCoordinates)\n  const kilometers = distance(from, to, { units: 'kilometers' })\n  return kilometers\n}\nexport const filterListByKeyword = (str, arr) => {\n  if (Set.isSet(arr)) {\n    return arr.toJS().filter(function(el) {\n      return str.split(/[-.,\\s!]+/).some(function(word) {\n        return (\n          el.properties.title.toLowerCase().indexOf(word.toLowerCase()) !==\n            -1 ||\n          el.properties.tags.some(tag => {\n            return tag.toLowerCase().indexOf(word.toLowerCase()) !== -1\n          })\n        )\n      })\n    })\n  } else {\n    return arr.filter(function(el) {\n      return str.split(/[-.,\\s!]+/).some(function(word) {\n        return (\n          el.properties.title.toLowerCase().indexOf(word.toLowerCase()) !==\n            -1 ||\n          el.properties.tags.some(tag => {\n            return tag.toLowerCase().indexOf(word.toLowerCase()) !== -1\n          })\n        )\n      })\n    })\n  }\n}\nexport const sortEvents = (filters, events, viewport) => {\n  if (filters.keyword) {\n    events = filterListByKeyword(filters.keyword, events)\n  }\n  switch (filters.sortBy) {\n    case 'A - Z':\n      return events.sort((a, b) => {\n        if (a.properties.title < b.properties.title) {\n          return -1\n        }\n        if (a.properties.title > b.properties.title) {\n          return 1\n        }\n        return 0\n      })\n    case 'Popular':\n      return events.sort((a, b) => {\n        if (a.properties.postcodes.length > b.properties.postcodes.length) {\n          return -1\n        }\n        if (a.properties.postcodes.length < b.properties.postcodes.length) {\n          return 1\n        }\n        return 0\n      })\n    case 'Nearby':\n      const location = [viewport.center[0], viewport.center[1]]\n      const eventsWithDistance = events.map(x => {\n        x.properties.distance = calculateDistance(\n          location,\n          x.geometry.coordinates\n        )\n        return x\n      })\n      return eventsWithDistance.sort((a, b) => {\n        if (a.properties.distance < b.properties.distance) {\n          return -1\n        }\n        if (a.properties.distance > b.properties.distance) {\n          return 1\n        }\n        return 0\n      })\n    case 'By time':\n      return events.sort((a, b) => {\n        if (a.properties.start < b.properties.start) {\n          return -1\n        }\n        if (a.properties.start < b.properties.start) {\n          return 1\n        }\n        return 0\n      })\n    default:\n      return events\n  }\n}\nexport const getColor = (\n  isSelected,\n  isSelectedStartOrEnd,\n  isWithinHoverRange,\n  isDisabled\n) => {\n  return ({\n    selectedFirstOrLastColor,\n    normalColor,\n    selectedColor,\n    rangeHoverColor,\n    disabledColor,\n  }) => {\n    if (isSelectedStartOrEnd) {\n      return selectedFirstOrLastColor\n    } else if (isSelected) {\n      return selectedColor\n    } else if (isWithinHoverRange) {\n      return rangeHoverColor\n    } else if (isDisabled) {\n      return disabledColor\n    } else {\n      return normalColor\n    }\n  }\n}\nexport const checkIfPhotoExists = async photoUrl => {\n  try {\n    let photo = await axios.get(`${photoUrl}`)\n    if (photo.data) {\n      return true\n    }\n    return false\n  } catch (err) {\n    console.error(err)\n  }\n}\n","import {\n  FETCH_ALL_DATA,\n  FETCH_DATA,\n  FETCH_DATA_AFTER_VIEWPORT_CHANGE,\n  FETCH_FAILURE,\n  FETCH_SUCCESS,\n  PLAY_DEMO,\n  SET_HIGHLIGHTED_HOUR,\n  SET_HIGHTLIGHTED_EVENT,\n  SET_SELECTED_EVENT,\n  STOP_DEMO,\n  TOGGLE_ALL_EVENTS,\n  TOGGLE_POPUP,\n  TOGGLE_SIDEBAR,\n  VIEWPORT_TRANSITION,\n  SEARCH_EVENTS,\n  LOADING_START,\n  LOADING_FINISH,\n  SET_AUTH_ERROR,\n} from './types'\n\nexport const toggleSidebar = () => ({ type: TOGGLE_SIDEBAR })\nexport const toggleAllEvents = () => ({ type: TOGGLE_ALL_EVENTS })\nexport const togglePopup = postcodes => ({\n  type: TOGGLE_POPUP,\n  payload: postcodes,\n})\nexport const playDemo = () => ({ type: PLAY_DEMO })\nexport const startLoading = () => ({ type: LOADING_START })\nexport const finishLoading = () => ({ type: LOADING_FINISH })\nexport const stopDemo = () => ({ type: STOP_DEMO })\nexport const fetchData = data => ({ type: FETCH_DATA, payload: data })\nexport const fetchAllData = data => ({ type: FETCH_ALL_DATA, payload: data })\nexport const fetchSuccess = () => ({ type: FETCH_SUCCESS })\nexport const fetchFailure = error => ({ type: FETCH_FAILURE, payload: error })\nexport const setSearchEvents = () => ({ type: SEARCH_EVENTS })\nexport const setAuthError = error => {\n  return { type: SET_AUTH_ERROR, payload: error }\n}\nexport const setHighlightedHour = hour => {\n  return {\n    type: SET_HIGHLIGHTED_HOUR,\n    payload: hour,\n  }\n}\nexport const setHighlightedEvent = id => {\n  return {\n    type: SET_HIGHTLIGHTED_EVENT,\n    payload: id,\n  }\n}\nexport const setSelectedEvent = id => {\n  return {\n    type: SET_SELECTED_EVENT,\n    payload: id,\n  }\n}\nexport const fetchDataAfterViewportChange = data => {\n  return {\n    type: FETCH_DATA_AFTER_VIEWPORT_CHANGE,\n    payload: data,\n  }\n}\nexport const viewportTransition = () => ({ type: VIEWPORT_TRANSITION })\n","import { fromJS, Set, List, Map } from 'immutable'\nimport createImmutableSelector from 'create-immutable-selector'\n\n/******************************************************************************/\n/******************************* TYPES ****************************************/\n/******************************************************************************/\n\nimport {\n  CLEAR_STORE,\n  SET_AUTH,\n  SET_SELECTED_HOUR,\n  SET_EVENTS_DATA,\n  SET_HEATMAP_DATA,\n  SET_CHART_DATA,\n  SET_NEW_DATE,\n  SET_CURRENT_CITY_AND_VIEWPORT,\n  SETUP_MAP_FROM_HISTORY,\n  SET_EVENT_FILTER,\n  SET_SEARCHQUERY_FILTER,\n  SET_SELECTED_DATE,\n  SET_SEARCH_PARAMETERS,\n  SET_SEARCH_QUERY,\n  SET_POPUP_DATA,\n} from '../actions/types'\n\n/******************************************************************************/\n/******************************* INITIAL STATE ********************************/\n/******************************************************************************/\n\nconst initialState = fromJS({\n  selectedHour: null,\n  selectedDate: null,\n  heatmap: {},\n  events: {},\n  searchQuery: null,\n  searchParameters: null,\n  chartData: null,\n  eventFilters: {\n    sortBy: null,\n    keyword: null,\n  },\n  searchQueryFilters: {\n    sortBy: null,\n    keyword: null,\n  },\n  currentPopupData: null,\n  auth: false,\n})\n\n/******************************************************************************/\n/******************************* SELECTORS ************************************/\n/******************************************************************************/\n\nconst dataSelector = createImmutableSelector(\n  state => state.get('data'),\n  data => data\n)\nexport const selectedHourSelector = createImmutableSelector(\n  dataSelector,\n  data => data.get('selectedHour')\n)\nexport const selectedDateSelector = createImmutableSelector(\n  dataSelector,\n  data => data.get('selectedDate')\n)\nexport const heatmapSelector = createImmutableSelector(dataSelector, data =>\n  data.get('heatmap')\n)\nexport const currentHeatmapSelector = createImmutableSelector(\n  selectedHourSelector,\n  dataSelector,\n  (selectedHour, data) => {\n    return data.getIn(['heatmap', selectedHour])\n  }\n)\nexport const eventsSelector = createImmutableSelector(dataSelector, data =>\n  data.get('events')\n)\nexport const currentEventsSelector = createImmutableSelector(\n  selectedHourSelector,\n  dataSelector,\n  (selectedHour, data) => {\n    return data.getIn(['events', selectedHour])\n  }\n)\nexport const chartDataSelector = createImmutableSelector(dataSelector, data =>\n  data.get('chartData')\n)\nexport const allChartEventsSelector = createImmutableSelector(\n  dataSelector,\n  data =>\n    data\n      .get('chartData')\n      .reduce((accum, data) => (accum += data.get('events')), 0)\n)\n\nexport const allHeatmapDataSelector = createImmutableSelector(\n  dataSelector,\n  data => {\n    return data.get('heatmap')\n  }\n)\nexport const allEventsDataSelector = createImmutableSelector(\n  dataSelector,\n  data => {\n    if (JSON.stringify(data.get('events')) !== '{}') {\n      return data\n        .get('events')\n        .valueSeq()\n        .flatten(1)\n    }\n  }\n)\nexport const filteredAllEventsDataSelector = createImmutableSelector(\n  dataSelector,\n  data => {\n    return data.get('events')\n  }\n)\nexport const eventFiltersSelector = createImmutableSelector(\n  dataSelector,\n  data => data.get('eventFilters')\n)\nexport const searchQueryFiltersSelector = createImmutableSelector(\n  dataSelector,\n  data => data.get('searchQueryFilters')\n)\nexport const searchQuerySelector = createImmutableSelector(dataSelector, data =>\n  data.get('searchQuery')\n)\nexport const searchParametersSelector = createImmutableSelector(\n  dataSelector,\n  data => data.get('searchParameters')\n)\nexport const searchParametersStartDateSelector = createImmutableSelector(\n  dataSelector,\n  data => data.getIn(['searchParameters', 'startDate'])\n)\nexport const searchParametersEndDateSelector = createImmutableSelector(\n  dataSelector,\n  data => data.getIn(['searchParameters', 'endDate'])\n)\nexport const currentPopupDataSelector = createImmutableSelector(\n  dataSelector,\n  data => data.get('currentPopupData')\n)\nexport const authSelector = createImmutableSelector(dataSelector, data =>\n  data.get('auth')\n)\n\n/******************************************************************************/\n/******************************* REDUCERS *************************************/\n/******************************************************************************/\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CLEAR_STORE:\n      return state\n        .set('events', Map())\n        .set('heatmap', Map())\n        .set('chartData', null)\n        .set('searchQuery', null)\n        .set('searchParameters', null)\n        .set(\n          'eventFilters',\n          fromJS({\n            sortBy: null,\n            keyword: null,\n          })\n        )\n        .set(\n          'searchQueryFilters',\n          fromJS({\n            sortBy: null,\n            keyword: null,\n          })\n        )\n    case SET_SELECTED_HOUR:\n      return state.set('selectedHour', payload.toString())\n    case SET_SELECTED_DATE:\n      return state.set('selectedDate', payload)\n    case SET_HEATMAP_DATA:\n      if (Set.isSet(payload)) {\n        const selectedHour = state.get('selectedHour')\n        if (state.getIn(['heatmap', selectedHour]) !== undefined) {\n          let prevHeatmap = state.getIn(['heatmap', selectedHour])\n          return state.setIn(\n            ['heatmap', selectedHour],\n            Set(prevHeatmap.union(payload))\n          )\n        } else {\n          return state.setIn(['heatmap', selectedHour], payload)\n        }\n      } else {\n        const selectedHour = Object.keys(payload)[0]\n        const data = payload[selectedHour]\n        if (state.getIn(['heatmap', selectedHour]) !== undefined) {\n          let prevHeatmap = state.getIn(['heatmap', selectedHour])\n          return state.setIn(\n            ['heatmap', selectedHour],\n            Set(prevHeatmap.union(data))\n          )\n        } else {\n          return state.setIn(['heatmap', selectedHour], data)\n        }\n      }\n    case SET_EVENTS_DATA:\n      if (Set.isSet(payload)) {\n        const selectedHour = state.get('selectedHour')\n        if (state.getIn(['events', selectedHour]) !== undefined) {\n          let prevEvents = state.getIn(['events', selectedHour])\n          return state.setIn(\n            ['events', selectedHour],\n            Set(prevEvents.union(payload))\n          )\n        } else {\n          return state.setIn(['events', selectedHour], payload)\n        }\n      } else {\n        const selectedHour = Object.keys(payload)[0]\n        const data = payload[selectedHour]\n        if (state.getIn(['events', selectedHour]) !== undefined) {\n          let prevEvents = state.getIn(['events', selectedHour])\n          return state.setIn(\n            ['events', selectedHour],\n            Set(prevEvents.union(data))\n          )\n        } else {\n          return state.setIn(['events', selectedHour], data)\n        }\n      }\n    case SET_SEARCH_QUERY:\n      if (payload === null) {\n        return state.set('searchQuery', null)\n      } else {\n        return state.set('searchQuery', List(payload))\n      }\n    case SET_CHART_DATA:\n      return state.set('chartData', payload)\n    case SET_POPUP_DATA:\n      return state.set('currentPopupData', payload)\n    case SET_CURRENT_CITY_AND_VIEWPORT:\n    case SETUP_MAP_FROM_HISTORY:\n    case SET_NEW_DATE:\n      return state\n    case SET_EVENT_FILTER:\n      if (payload.type === 'sort') {\n        return state.setIn(['eventFilters', 'sortBy'], payload.parameter)\n      } else if (payload.type === 'keyword') {\n        return state.setIn(['eventFilters', 'keyword'], payload.parameter)\n      }\n      break\n    case SET_SEARCHQUERY_FILTER:\n      if (payload.type === 'sort') {\n        return state.setIn(['searchQueryFilters', 'sortBy'], payload.parameter)\n      } else if (payload.type === 'keyword') {\n        return state.setIn(['searchQueryFilters', 'keyword'], payload.parameter)\n      }\n      break\n    case SET_SEARCH_PARAMETERS:\n      return state.set('searchParameters', payload)\n    case SET_AUTH: {\n      return state.set('auth', !state.get('auth'))\n    }\n    default:\n      return state\n  }\n}\n","import { fromJS } from 'immutable'\nimport createImmutableSelector from 'create-immutable-selector'\n\n/******************************************************************************/\n/******************************* TYPES ****************************************/\n/******************************************************************************/\n\nimport { CLEAR_STORE, SET_CITY } from '../actions/types'\n\n/******************************************************************************/\n/******************************* INITIAL STATE ********************************/\n/******************************************************************************/\n\nconst initialState = fromJS({\n  cityId: null,\n  city: null,\n  country: null,\n})\n\n/******************************************************************************/\n/******************************* SELECTORS ************************************/\n/******************************************************************************/\n\nconst citySelector = createImmutableSelector(\n  state => state.get('city'),\n  city => city\n)\nexport const currentCityIdSelector = createImmutableSelector(\n  citySelector,\n  city => city.get('cityId')\n)\nexport const currentCitySelector = createImmutableSelector(citySelector, city =>\n  city.get('city')\n)\nexport const currentCityCountrySelector = createImmutableSelector(\n  citySelector,\n  city => city.get('country')\n)\n\n/******************************************************************************/\n/******************************* REDUCERS *************************************/\n/******************************************************************************/\n\nexport default function(state = initialState, { type, payload }) {\n  switch (type) {\n    case CLEAR_STORE:\n      return state\n        .set('cityId', null)\n        .set('city', null)\n        .set('country', null)\n    case SET_CITY:\n      return state\n        .set('cityId', payload.id)\n        .set('city', payload.city)\n        .set('country', payload.country)\n        .set('topLeft', String(payload.topLeft))\n        .set('bottomRight', String(payload.bottomRight))\n    default:\n      return state\n  }\n}\n","// city actions\nexport const SET_CITY = 'SET_CITY'\n\n// data actions\nexport const CLEAR_STORE = 'CLEAR_STORE'\nexport const SET_AUTH = 'SET_AUTH'\nexport const SETUP_MAP_FROM_HISTORY = 'SETUP_MAP_FROM_HISTORY'\nexport const SET_CHART_DATA = 'SET_CHART_DATA'\nexport const SET_CURRENT_CITY_AND_VIEWPORT = 'SET_CURRENT_CITY_AND_VIEWPORT'\nexport const SET_EVENTS_DATA = 'SET_EVENTS_DATA'\nexport const SET_EVENT_FILTER = 'SET_EVENT_FILTER'\nexport const SET_HEATMAP_DATA = 'SET_HEATMAP_DATA'\nexport const SET_NEW_DATE = 'SET_NEW_DATE'\nexport const SET_SEARCHQUERY_FILTER = 'SET_SEARCHQUERY_FILTER'\nexport const SET_SELECTED_DATE = 'SET_SELECTED_DATE'\nexport const SET_SELECTED_HOUR = 'SET_SELECTED_HOUR'\nexport const SET_SEARCH_PARAMETERS = 'SET_SEARCH_PARAMETERS'\nexport const SET_SEARCH_QUERY = 'SET_SEARCH_QUERY'\nexport const SET_POPUP_DATA = 'SET_POPUP_DATA'\nexport const INIT_SESSION = 'INIT_SESSION'\n\n// map actions\nexport const CHANGE_VIEWPORT = 'CHANGE_VIEWPORT'\nexport const SET_BOUNDS = 'SET_BOUNDS'\nexport const SET_CURRENT_USER_LOCATION = 'SET_CURRENT_USER_LOCATION'\nexport const SET_VIEWPORT = 'SET_VIEWPORT'\n\n// ui actions\nexport const FETCH_ALL_DATA = 'FETCH_ALL_DATA'\nexport const FETCH_DATA = 'FETCH_DATA'\nexport const FETCH_DATA_AFTER_VIEWPORT_CHANGE =\n  'FETCH_DATA_AFTER_VIEWPORT_CHANGE'\nexport const FETCH_FAILURE = 'FETCH_FAILURE'\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS'\nexport const FETCH_TIMELINE_SUCCESS = 'FETCH_TIMELINE_SUCCESS'\nexport const FETCH_TIMELINE_START = 'FETCH_TIMELINE_START'\nexport const LOADING_FINISH = 'LOADING_FINISH'\nexport const LOADING_START = 'LOADING_START'\nexport const PLAY_DEMO = 'PLAY_DEMO'\nexport const SEARCH_EVENTS = 'SEARCH_EVENTS'\nexport const SET_AUTH_ERROR = 'SET_AUTH_ERROR'\nexport const SET_HIGHLIGHTED_HOUR = 'SET_HIGHLIGHTED_HOUR'\nexport const SET_HIGHTLIGHTED_EVENT = 'SET_HIGHTLIGHTED_EVENT'\nexport const SET_SELECTED_EVENT = 'SET_SELECTED_EVENT'\nexport const STOP_DEMO = 'STOP_DEMO'\nexport const TOGGLE_ALL_EVENTS = 'TOGGLE_ALL_EVENTS'\nexport const TOGGLE_POPUP = 'TOGGLE_POPUP'\nexport const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR'\nexport const VIEWPORT_TRANSITION = 'VIEWPORT_TRANSITION'\n","import {\n  CHANGE_VIEWPORT,\n  SET_BOUNDS,\n  SET_CURRENT_USER_LOCATION,\n  SET_VIEWPORT,\n} from './types'\n\nexport const changeViewport = config => ({\n  type: CHANGE_VIEWPORT,\n  payload: config,\n})\nexport const setBounds = bounds => ({\n  type: SET_BOUNDS,\n  payload: bounds,\n})\nexport const setCurrentUserLocation = location => ({\n  type: SET_CURRENT_USER_LOCATION,\n  payload: location,\n})\nexport const setViewport = newViewport => ({\n  type: SET_VIEWPORT,\n  payload: newViewport,\n})\n","import londonPic from '../assets/img/cityPictures/london.jpg'\nimport moscowPic from '../assets/img/cityPictures/moscow.jpg'\nimport newyorkPic from '../assets/img/cityPictures/newyork.jpg'\nimport saintPetersburgPic from '../assets/img/cityPictures/spb.jpg'\n\nexport const cities = [\n  {\n    id: 'spb',\n    city: 'Saint Petersburg',\n    country: 'Russia',\n    avaliable: true,\n    picture: saintPetersburgPic,\n    lng: 30.32315244950895,\n    lat: 59.9271516041233,\n    topLeft: [60.12, 30.11],\n    bottomRight: [59.84, 30.69],\n  },\n  {\n    id: 'nyc',\n    city: 'New York',\n    country: 'USA',\n    avaliable: false,\n    picture: newyorkPic,\n    lng: -73.99152387944392,\n    lat: 40.701733209232735,\n    topLeft: [40.8482826, -73.9873646],\n    bottomRight: [40.6185618, -74.0340492],\n  },\n  {\n    id: 'moscow',\n    city: 'Moscow',\n    country: 'Russia',\n    avaliable: false,\n    picture: moscowPic,\n    lng: 37.61296270571807,\n    lat: 55.73652849918221,\n  },\n  {\n    id: 'london',\n    city: 'London',\n    country: 'United Kingdom',\n    avaliable: false,\n    picture: londonPic,\n    lng: 0,\n    lat: 0,\n  },\n]\n","import { fromJS } from 'immutable'\nimport createImmutableSelector from 'create-immutable-selector'\n\n/******************************************************************************/\n/******************************* TYPES ****************************************/\n/******************************************************************************/\n\nimport {\n  SET_BOUNDS,\n  SET_CURRENT_USER_LOCATION,\n  SET_VIEWPORT,\n  SETUP_MAP_FROM_HISTORY,\n  CHANGE_VIEWPORT,\n} from '../actions/types'\n\n/******************************************************************************/\n/******************************* INITIAL STATE ********************************/\n/******************************************************************************/\n\nconst initialState = fromJS({\n  bounds: {\n    topLeft: [0, 0],\n    bottomRight: [0, 0],\n  },\n  viewport: {\n    center: [],\n    zoom: 13,\n  },\n  currentUserLocation: null,\n})\n\n/******************************************************************************/\n/******************************* SELECTORS ************************************/\n/******************************************************************************/\n\nconst mapSelector = createImmutableSelector(\n  state => state.get('map'),\n  map => map\n)\nexport const viewportSelector = createImmutableSelector(mapSelector, map =>\n  map.get('viewport')\n)\nexport const boundsSelector = createImmutableSelector(mapSelector, map =>\n  map.get('bounds')\n)\nexport const currentUserLocationSelector = createImmutableSelector(\n  mapSelector,\n  map => map.get('currentUserLocation')\n)\n\n/******************************************************************************/\n/******************************* REDUCERS *************************************/\n/******************************************************************************/\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_VIEWPORT:\n      return state.update('viewport', previousViewport =>\n        previousViewport.merge(payload)\n      )\n    case SET_BOUNDS:\n      return state.update('bounds', previousBounds =>\n        previousBounds.merge(payload)\n      )\n    case SET_CURRENT_USER_LOCATION:\n      return state.set('currentUserLocation', payload)\n    case SETUP_MAP_FROM_HISTORY:\n    case CHANGE_VIEWPORT:\n      return state\n    default:\n      return state\n  }\n}\n","import { fromJS } from 'immutable'\nimport createImmutableSelector from 'create-immutable-selector'\n\n/******************************************************************************/\n/******************************* TYPES ****************************************/\n/******************************************************************************/\n\nimport {\n  CLEAR_STORE,\n  TOGGLE_SIDEBAR,\n  TOGGLE_ALL_EVENTS,\n  PLAY_DEMO,\n  STOP_DEMO,\n  SET_HIGHLIGHTED_HOUR,\n  FETCH_DATA,\n  FETCH_ALL_DATA,\n  FETCH_TIMELINE_SUCCESS,\n  FETCH_SUCCESS,\n  FETCH_FAILURE,\n  SET_AUTH_ERROR,\n  SET_HIGHTLIGHTED_EVENT,\n  SET_SELECTED_EVENT,\n  TOGGLE_POPUP,\n  FETCH_TIMELINE_START,\n  VIEWPORT_TRANSITION,\n  SEARCH_EVENTS,\n  LOADING_START,\n  LOADING_FINISH,\n} from '../actions/types'\n\n/******************************************************************************/\n/******************************* INITIAL STATE ********************************/\n/******************************************************************************/\n\nexport const initialState = fromJS({\n  isLoading: false,\n  isTimelineLoading: false,\n  isSidebarOpen: false,\n  isDemoPlay: false,\n  isShowAllEvents: false,\n  isPopupOpen: false,\n  isViewportTransition: false,\n  highlightedHour: null,\n  highlightedEvent: null,\n  selectedEvent: null,\n  errors: null,\n  authError: null,\n  isSearchingEvents: false,\n  postcodes: null,\n})\n\n/******************************************************************************/\n/******************************* SELECTORS ************************************/\n/******************************************************************************/\n\nconst uiSelector = createImmutableSelector(\n  state => state.get('ui'),\n  ui => ui\n)\nexport const isSidebarOpenSelector = createImmutableSelector(uiSelector, ui =>\n  ui.get('isSidebarOpen')\n)\nexport const isDemoPlaySelector = createImmutableSelector(uiSelector, ui =>\n  ui.get('isDemoPlay')\n)\nexport const isShowAllEventsSelector = createImmutableSelector(uiSelector, ui =>\n  ui.get('isShowAllEvents')\n)\nexport const isLoadingSelector = createImmutableSelector(uiSelector, ui =>\n  ui.get('isLoading')\n)\nexport const errorSelector = createImmutableSelector(uiSelector, ui =>\n  ui.get('errors')\n)\nexport const isTimelineLoadingSelector = createImmutableSelector(\n  uiSelector,\n  ui => ui.get('isTimelineLoading')\n)\nexport const highlightedHourSelector = createImmutableSelector(uiSelector, ui =>\n  ui.get('highlightedHour')\n)\nexport const highlightedEventSelector = createImmutableSelector(\n  uiSelector,\n  ui => ui.get('highlightedEvent')\n)\nexport const selectedEventSelector = createImmutableSelector(uiSelector, ui =>\n  ui.get('selectedEvent')\n)\nexport const isPopupOpenSelector = createImmutableSelector(uiSelector, ui =>\n  ui.get('isPopupOpen')\n)\nexport const isViewportTransitionSelector = createImmutableSelector(\n  uiSelector,\n  ui => ui.get('isViewportTransition')\n)\nexport const postcodesSelector = createImmutableSelector(uiSelector, ui =>\n  ui.get('postcodes')\n)\nexport const isSearchingEventsSelector = createImmutableSelector(\n  uiSelector,\n  ui => ui.get('isSearchingEvents')\n)\nexport const authErrorSelector = createImmutableSelector(uiSelector, ui =>\n  ui.get('authError')\n)\n\n/******************************************************************************/\n/******************************* REDUCERS *************************************/\n/******************************************************************************/\n\nexport default function(state = initialState, { type, payload }) {\n  switch (type) {\n    case FETCH_DATA:\n    case FETCH_ALL_DATA:\n      return state.set('isLoading', true)\n    case FETCH_SUCCESS:\n      return state.set('isLoading', false)\n    case FETCH_TIMELINE_START:\n      return state.set('isTimelineLoading', true)\n    case FETCH_TIMELINE_SUCCESS:\n      return state.set('isTimelineLoading', false)\n    case FETCH_FAILURE:\n      return state.set('isLoading', false).set('errors', payload)\n    case TOGGLE_SIDEBAR:\n      return state.set('isSidebarOpen', !state.get('isSidebarOpen'))\n    case TOGGLE_POPUP:\n      return state\n        .set('isPopupOpen', !state.get('isPopupOpen'))\n        .set('postcodes', payload)\n    case PLAY_DEMO:\n    case STOP_DEMO:\n      return state\n        .set('isDemoPlay', !state.get('isDemoPlay'))\n        .set('isShowAllEvents', false)\n        .set('isLoading', false)\n    case TOGGLE_ALL_EVENTS:\n      return state\n        .set('isShowAllEvents', !state.get('isShowAllEvents'))\n        .set('isDemoPlay', false)\n    case SET_AUTH_ERROR:\n      return state.set('authError', payload)\n    case SET_HIGHLIGHTED_HOUR:\n      return state.set('highlightedHour', payload)\n    case SET_HIGHTLIGHTED_EVENT:\n      return state.set('highlightedEvent', payload)\n    case SET_SELECTED_EVENT:\n      return state.set('selectedEvent', payload)\n    case SEARCH_EVENTS:\n      return state.set('isSearchingEvents', !state.get('isSearchingEvents'))\n    case VIEWPORT_TRANSITION:\n      return state.set(\n        'isViewportTransition',\n        !state.get('isViewportTransition')\n      )\n    case LOADING_START:\n      return state.set('isLoading', true)\n    case LOADING_FINISH:\n      return state.set('isLoading', false)\n    case CLEAR_STORE:\n      return state\n        .set('isShowAllEvents', false)\n        .set('isDemoPlay', false)\n        .set('isSearchingEvents', false)\n        .set('errors', null)\n        .set('isPopupOpen', false)\n        .set('isSidebarOpen', false)\n        .set('selectedEvent', null)\n    default:\n      return state\n  }\n}\n","import styled from 'styled-components'\nimport { darkGrey, lightGrey } from '../../config/styles'\n\nexport default styled.div`\n  position: relative;\n  height: 3.5rem;\n  flex-basis: 100%;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  background: ${({ type }) =>\n    type === 'starting-page' || type === 'sidebar' ? '#fff' : `${lightGrey}`};\n  border: 1px solid ${lightGrey};\n  box-shadow: 0px 2px 4px #bfc2c8;\n  color: ${darkGrey};\n  border-radius: ${({ showSuggestions }) =>\n    showSuggestions ? '5px 5px 0 0' : `5px`};\n  padding: 0.5rem 1rem 0.5rem;\n  & input {\n    width: 100%;\n  }\n  input::placeholder {\n    padding-left: 0.5rem;\n  }\n`\n","import styled from 'styled-components'\n\nimport { darkGrey, grey } from '../../config/styles'\n\nexport default styled.button`\n  cursor: pointer;\n  & svg path {\n    transition: fill 0.25s;\n    fill: ${grey};\n  }\n  font-size: 1rem;\n  line-height: 1rem;\n  vertical-align: middle;\n  &:hover {\n    & svg path {\n      fill: ${darkGrey};\n    }\n  }\n`\n","import styled from 'styled-components'\n\nimport { darkGrey, lightGreyTransparent } from '../../config/styles'\n\nexport default styled.input`\n  color: ${darkGrey};\n  font-size: 1rem;\n  line-height: 2rem;\n  vertical-align: middle;\n  &::placeholder {\n    margin-right: -1rem;\n  }\n  &::-webkit-input-placeholder {\n    color: ${lightGreyTransparent};\n  }\n`\n","import styled from 'styled-components'\nimport { darkGrey, transparentBackground } from '../../config/styles'\n\nexport default styled.div`\n  position: absolute;\n  width: 70%;\n  height: 50%;\n  top: 50%;\n  right: -20%;\n  transform: translate(-50%, -50%);\n  background: ${transparentBackground};\n  border-radius: 1rem;\n  z-index: 20;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  & .text {\n    color: ${darkGrey};\n    font-weight: 700;\n    font-size: 1.4rem;\n  }\n  .spinner-container {\n    margin-top: 3rem;\n  }\n  .spinner {\n    background-color: transparent;\n    width: 1rem;\n    height: 1rem;\n    border-radius: 100%;\n    box-shadow: 12px -12px 0 hsla(208, 16%, 35%, 0.125),\n      17px 0 0 -1px hsla(208, 16%, 35%, 0.25),\n      12px 12px 0 -2px hsla(208, 16%, 35%, 0.375),\n      0 17px 0 -3px hsla(208, 16%, 35%, 0.5),\n      -12px 12px 0 -4px hsla(208, 16%, 35%, 0.625),\n      -17px 0 0 -5px hsla(208, 16%, 35%, 0.75),\n      -12px -12px 0 -6px hsla(208, 16%, 35%, 0.875),\n      0 -17px 0 -7px hsla(208, 16%, 35%, 1);\n    animation: clockwise 0.75s steps(8, end) infinite;\n  }\n  @keyframes clockwise {\n    to {\n      transform: rotate(360deg) translatez(0);\n    }\n  }\n`\n","import React from 'react'\n\n// styled\nimport Container from './Loading.styled'\n\nfunction Loading() {\n  return (\n    <Container>\n      <p className=\"text text_p1\">Loading...</p>\n      <div className=\"spinner-container\">\n        <div className=\"spinner\"></div>\n      </div>\n    </Container>\n  )\n}\nexport default Loading\n","import React from 'react'\n\nfunction Magnifier() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      id=\"Capa_1\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 512 512\"\n      width=\"16px\"\n      height=\"16px\"\n    >\n      <g>\n        <path\n          d=\"M225.474,0C101.151,0,0,101.151,0,225.474c0,124.33,101.151,225.474,225.474,225.474    c124.33,0,225.474-101.144,225.474-225.474C450.948,101.151,349.804,0,225.474,0z M225.474,409.323    c-101.373,0-183.848-82.475-183.848-183.848S124.101,41.626,225.474,41.626s183.848,82.475,183.848,183.848    S326.847,409.323,225.474,409.323z\"\n          data-original=\"#000000\"\n          className=\"active-path\"\n          data-old_color=\"#000000\"\n          fill=\"#1F1F1F\"\n        />\n      </g>\n      <g>\n        <path\n          d=\"M505.902,476.472L386.574,357.144c-8.131-8.131-21.299-8.131-29.43,0c-8.131,8.124-8.131,21.306,0,29.43l119.328,119.328    c4.065,4.065,9.387,6.098,14.715,6.098c5.321,0,10.649-2.033,14.715-6.098C514.033,497.778,514.033,484.596,505.902,476.472z\"\n          data-original=\"#000000\"\n          className=\"active-path\"\n          data-old_color=\"#000000\"\n          fill=\"#1F1F1F\"\n        />\n      </g>\n    </svg>\n  )\n}\nexport default Magnifier\n","module.exports = __webpack_public_path__ + \"static/media/london.48a974e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/moscow.08b55faf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/newyork.55acac5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spb.717b9795.jpg\";","export const fontSize = '10px'\nexport const darkGrey = '#4C5B68'\nexport const lightGreyTransparent = 'rgba(143, 155, 179, 0.4)'\n\nexport const lightGrey = '#F1F3F6'\nexport const grey = '#C5CDD9'\nexport const chartLightGrey = '#E4E6E9'\nexport const chartDarkGrey = '#D0D2D5'\nexport const defaultBackground = '#ffffff'\nexport const orange = '#F7542E'\nexport const lightOrange = '#FF8C69'\nexport const badgeOrange = '#FEEFEC'\nexport const calendarOrangeLight = '#fbab98'\nexport const calendarOrangeMedium = '#f97c5f'\nexport const calendarOrangeDark = '#f86847'\nexport const violet = '#4a69da'\nexport const lightViolet = '#F1F4FF'\nexport const errorRed = '#F8D0C8'\nexport const textError = '#FF0000'\nexport const transparentBackground = 'rgba(234, 237, 239, 0.85)'\n\nexport const margin = {\n  top: 5,\n  right: 25,\n  bottom: 50,\n  left: 15,\n}\nexport const modalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    position: 'relative',\n    padding: '0',\n    paddingTop: '40px',\n    maxWidth: '520px',\n    width: '100%',\n  },\n}\nexport const geolocateControlStyle = {\n  position: 'absolute',\n  top: '21%',\n  right: '3rem',\n  margin: '1rem 0 0',\n}\nexport const datepickerStyles = {\n  breakpoints: ['48em', '48em', '64em'],\n  reactDatepicker: {\n    daySize: [30, 36],\n    fontFamily: 'Open-Sans-Regular',\n    colors: {\n      accessibility: `${orange}`,\n      selectedDay: `${calendarOrangeLight}`,\n      selectedDayHover: `${calendarOrangeMedium}`,\n      primaryColor: `${calendarOrangeDark}`,\n    },\n    datepickerPadding: '1.7rem',\n    dateSingleDatepickerWrapperLeft: 'unset',\n    dateSingleDatepickerWrapperRight: '0',\n\n    datepickerCloseWrapperRight: '19px',\n    dayHoverRangeBorderColor: `${orange}`,\n    closeFontSize: '0px',\n    closeMargin: '0px',\n    dayFontSize: '1.1rem',\n    inputLabelBorder: '1px solid rgba(143,155,179,0.23)',\n    inputLabelBorderRadius: '10px',\n    inputBackground: 'transparent',\n    inputFontSize: '1.1rem',\n    inputFontWeight: '400',\n    inputMinHeight: '3.5rem',\n    inputCalendarWrapperTop: '12px',\n    inputCalendarWrapperLeft: '12px',\n    datepickerResetDatesWrapperMargin: '18px 0 0',\n    dateRangeStartDateInputPadding: '0 35px',\n    dateSingleInputPadding: '0 35px',\n    inputPadding: '0 32px',\n  },\n}\nexport const xsDatepickerStyles = {\n  breakpoints: ['48em', '48em', '64em'],\n  reactDatepicker: {\n    daySize: [30, 36],\n    fontFamily: 'Open-Sans-Regular',\n    colors: {\n      accessibility: `${orange}`,\n      selectedDay: `${calendarOrangeLight}`,\n      selectedDayHover: `${calendarOrangeMedium}`,\n      primaryColor: `${calendarOrangeDark}`,\n    },\n    datepickerPadding: '1.7rem',\n    dateSingleDatepickerWrapperLeft: 'unset',\n    dateSingleDatepickerWrapperRight: '0',\n\n    datepickerCloseWrapperRight: '19px',\n    dayHoverRangeBorderColor: `${orange}`,\n    closeFontSize: '0px',\n    closeMargin: '0px',\n    dayFontSize: '1.1rem',\n    inputLabelBorder: '1px solid rgba(143,155,179,0.23)',\n    inputLabelBorderRadius: '10px',\n    inputBackground: 'transparent',\n    inputFontSize: '1.1rem',\n    inputFontWeight: '400',\n    inputMinHeight: '3.5rem',\n    inputCalendarWrapperTop: '12px',\n    inputCalendarWrapperLeft: '12px',\n    datepickerResetDatesWrapperMargin: '18px 0 0',\n    dateRangeStartDateInputPadding: '0 35px',\n    dateSingleInputPadding: '0 35px',\n    inputPadding: '0 27px',\n  },\n}\nexport const heatmapGradient = {\n  0.1: 'royalblue',\n  0.2: 'royalblue',\n  0.4: 'cyan',\n  0.6: 'yellow',\n  0.8: 'orange',\n  1.0: 'red',\n}\n","module.exports = __webpack_public_path__ + \"static/media/OpenSans-Regular.3ed9575d.ttf\";","module.exports = __webpack_public_path__ + \"static/media/OpenSans-Light.2d0bdc8d.ttf\";","module.exports = __webpack_public_path__ + \"static/media/OpenSans-SemiBold.ba5cde21.ttf\";","module.exports = __webpack_public_path__ + \"static/media/OpenSans-Bold.1025a6e0.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Montserrat-Regular.ee653992.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Montserrat-SemiBold.c641dbee.ttf\";"],"sourceRoot":""}