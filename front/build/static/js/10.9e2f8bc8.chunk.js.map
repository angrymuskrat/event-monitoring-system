{"version":3,"sources":["components/Sidebar/SidebarEventsList/SidebarCard.styled.js","components/Sidebar/SidebarEventsList/SidebarCard.jsx","components/Sidebar/SidebarEventsList/SidebarEventsList.styled.js","components/Sidebar/SidebarEventsList/SidebarEventsList.jsx"],"names":["styled","div","lightGrey","orange","SidebarCard","event","handleEventHover","handleEventClick","handlePostsClick","properties","title","tags","start","finish","photoUrl","id","postcodes","handleClick","key","onMouseEnter","onMouseLeave","className","style","background","backgroundSize","onClick","moment","unix","format","map","tag","i","SidebarEventsList","chartData","currentEvents","eventFilters","events","isSearchingEvents","isShowAllEvents","isSidebarOpen","isLoading","searchQuery","searchQueryFilters","searchParameters","onCardClick","sidebarHeight","viewport","top","minHeight","window","innerHeight","maxWidth","innerWidth","toJS","get","sortEvents","acc","forEach","data","undefined","time","d","push","sort","a","b","length","renderEventsList"],"mappings":"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","file":"static/js/10.9e2f8bc8.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { lightGrey, orange } from '../../../config/styles'\n\nexport default styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: left;\n  align-items: center;\n  background-color: #fff;\n  border: 1px solid ${lightGrey};\n  box-sizing: border-box;\n  box-shadow: 0px 3px 3px ${lightGrey};\n  border-radius: 10px;\n  padding: 0 1rem 0 0;\n  margin: 1.1rem 0;\n  width: 100%;\n  transition: all 0.3s;\n  overflow: hidden;\n  &:hover {\n    background-color: rgba(247, 248, 249, 0.95);\n  }\n  @media (max-width: 1130px) {\n    flex-direction: column;\n    padding: 0;\n  }\n  @media (max-width: 650px) {\n    flex-direction: row;\n  }\n  @media (max-width: 450px) {\n    flex-direction: column;\n  }\n  .event-card__image {\n    position: relative;\n    min-width: 14rem;\n    min-height: 14rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n    @media (max-width: 1130px) {\n      flex-basis: 100%;\n      min-width: 100%;\n      min-height: 20rem;\n    }\n    @media (max-width: 650px) {\n      flex-basis: 30%;\n      min-width: 12rem;\n      min-height: 12rem;\n      max-width: 10rem;\n      max-height: 10rem;\n    }\n    @media (max-width: 450px) {\n      flex-basis: 100%;\n      min-width: 100%;\n      min-height: 15rem;\n    }\n  }\n  .event-card__content {\n    @media (max-width: 1130px) {\n      align-self: flex-start;\n      flex-basis: 100%;\n      width: 100%;\n    }\n    margin-left: 1.5rem;\n    flex-basis: 65%;\n    width: 65%;\n    overflow: hidden;\n  }\n  .event-card__title {\n    cursor: pointer;\n    text-overflow: ellipsis;\n  }\n  .event-card__tag {\n    display: inline-block;\n    background-color: ${lightGrey};\n    border-radius: 5px;\n    padding: 0.3rem;\n    margin: 0.3rem;\n    &:first-of-type {\n      margin-left: 0;\n    }\n  }\n  .event-card__button {\n    color: ${orange};\n    text-decoration: underline;\n    margin: 1rem 0;\n    cursor: pointer;\n  }\n  .text__events {\n    margin-top: 1rem;\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\n\n// styled\nimport Container from './SidebarCard.styled'\n\n// styles\nimport { lightGrey } from '../../../config/styles'\n\nfunction SidebarCard({\n  event,\n  handleEventHover,\n  handleEventClick,\n  handlePostsClick,\n}) {\n  const {\n    title,\n    tags,\n    start,\n    finish,\n    photoUrl,\n    id,\n    postcodes,\n  } = event.properties\n  const handleMouseEnter = () => {\n    handleEventHover(id)\n  }\n  const handleMouseLeave = () => {\n    handleEventHover(null)\n  }\n  const handleClick = () => {\n    handleEventClick(id)\n  }\n  const handleLinkClick = () => {\n    handlePostsClick(id, postcodes)\n  }\n  return (\n    <Container\n      key={title}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div\n        className=\"event-card__image\"\n        style={{\n          background: `url(${photoUrl}) ${lightGrey}  no-repeat center center`,\n          backgroundSize: 'cover',\n        }}\n        onClick={handleClick}\n      />\n      <div className=\"event-card__content\">\n        <h4 className=\"title title_h4 event-card__title\" onClick={handleClick}>\n          {title}\n        </h4>\n        <p>Start: {moment.unix(start).format('HH:mm, DD.MM.YYYY')}</p>\n        <p>Finish: {moment.unix(finish).format('HH:mm, DD.MM.YYYY')}</p>\n        {tags.map((tag, i) => (\n          <div className=\"event-card__tag\" key={`${tag + i}`}>\n            {tag}\n          </div>\n        ))}\n        <br />\n        <button className=\"event-card__button\" onClick={handleLinkClick}>\n          View all posts\n        </button>\n      </div>\n    </Container>\n  )\n}\nSidebarCard.propTypes = {\n  event: PropTypes.object,\n  handleEventClick: PropTypes.func.isRequired,\n  handleEventHover: PropTypes.func.isRequired,\n  handlePostsClick: PropTypes.func.isRequired,\n}\nexport default SidebarCard\n","import styled from 'styled-components'\n\nexport default styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: left;\n  flex-wrap: wrap;\n  position: relative;\n  padding: 0 3rem 10rem 3rem;\n  background-color: #fff;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// components\nimport SidebarCard from './SidebarCard.jsx'\n\n// styled\nimport Container from './SidebarEventsList.styled'\n\n// utils\nimport { sortEvents } from '../../../utils/utils'\n\nfunction SidebarEventsList({\n  chartData,\n  currentEvents,\n  eventFilters,\n  events,\n  isSearchingEvents,\n  isSidebarOpen,\n  isShowAllEvents,\n  isLoading,\n  searchQuery,\n  searchQueryFilters,\n  searchParameters,\n  handleEventClick,\n  handleEventHover,\n  onCardClick,\n  sidebarHeight,\n  viewport,\n}) {\n  const renderEventsList = () => {\n    if (isLoading) {\n      return <p className=\"text text_p2 text__events\">Loading...</p>\n    }\n    if (isSearchingEvents) {\n      if (searchQuery && !isLoading) {\n        searchQuery = searchQuery.toJS()\n        if (\n          searchQueryFilters.get('sortBy') ||\n          searchQueryFilters.get('keyword')\n        ) {\n          searchQuery = sortEvents(\n            searchQueryFilters.toJS(),\n            searchQuery,\n            viewport.toJS()\n          )\n        }\n\n        return searchQuery.map((event, i) => (\n          <SidebarCard\n            key={i}\n            event={event}\n            handleEventHover={handleEventHover}\n            handleEventClick={handleEventClick}\n            handlePostsClick={onCardClick}\n          />\n        ))\n      } else if (searchParameters) {\n        return (\n          <p className=\"text text_p2 text__events\">\n            No events found, try another search parameters\n          </p>\n        )\n      } else {\n        return (\n          <p className=\"text text_p2 text__events\">Enter search parameters</p>\n        )\n      }\n    }\n    if (isShowAllEvents) {\n      let acc = []\n      if (chartData && events) {\n        chartData.forEach(data => {\n          if (events.get(`${data.time}`) !== undefined) {\n            events\n              .get(`${data.time}`)\n              .toJS()\n              .forEach(d => acc.push(d))\n          }\n        })\n      }\n      if (eventFilters.get('sortBy') || eventFilters.get('keyword')) {\n        acc = sortEvents(eventFilters.toJS(), acc, viewport.toJS())\n        return acc.map((event, i) => (\n          <SidebarCard\n            key={i}\n            event={event}\n            handleEventHover={handleEventHover}\n            handleEventClick={handleEventClick}\n            handlePostsClick={onCardClick}\n          />\n        ))\n      }\n      return acc\n        .sort((a, b) => {\n          if (a.properties.start < b.properties.start) {\n            return -1\n          }\n          if (a.properties.start < b.properties.start) {\n            return 1\n          }\n          return 0\n        })\n        .map((event, i) => (\n          <SidebarCard\n            key={i}\n            event={event}\n            handleEventHover={handleEventHover}\n            handleEventClick={handleEventClick}\n            handlePostsClick={onCardClick}\n          />\n        ))\n    }\n    if (currentEvents && !isShowAllEvents && !isSearchingEvents) {\n      currentEvents = currentEvents.toJS()\n      if (eventFilters.get('sortBy') || eventFilters.get('keyword')) {\n        currentEvents = sortEvents(\n          eventFilters.toJS(),\n          currentEvents,\n          viewport.toJS()\n        )\n        if (currentEvents.length === 0) {\n          return <p>No events found, try another search parameters</p>\n        }\n        return currentEvents.map((event, i) => (\n          <SidebarCard\n            key={i}\n            event={event}\n            handleEventHover={handleEventHover}\n            handleEventClick={handleEventClick}\n            handlePostsClick={onCardClick}\n          />\n        ))\n      } else {\n        return currentEvents\n          .sort((a, b) => {\n            if (a.properties.start < b.properties.start) {\n              return -1\n            }\n            if (a.properties.start < b.properties.start) {\n              return 1\n            }\n            return 0\n          })\n          .map((event, i) => (\n            <SidebarCard\n              key={i}\n              event={event}\n              handleEventHover={handleEventHover}\n              handleEventClick={handleEventClick}\n              handlePostsClick={onCardClick}\n            />\n          ))\n      }\n    } else {\n      return <p className=\"text text_p2 text__events\">No events found</p>\n    }\n  }\n  return (\n    <Container\n      style={{\n        top: `${sidebarHeight - 60}px`,\n        minHeight: `${window.innerHeight - sidebarHeight}px`,\n        maxWidth: `${window.innerWidth}px`,\n      }}\n    >\n      {renderEventsList()}\n    </Container>\n  )\n}\nSidebarEventsList.propTypes = {\n  chartData: PropTypes.array,\n  currentevents: PropTypes.array,\n  currentUserLocation: PropTypes.object,\n  eventFilters: PropTypes.object,\n  events: PropTypes.object,\n  isSearchingEvents: PropTypes.bool.isRequired,\n  isShowAllEvents: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  searchQuery: PropTypes.object,\n  searchQueryFilters: PropTypes.object,\n  searchParameters: PropTypes.object,\n  handleEventClick: PropTypes.func.isRequired,\n  handleEventHover: PropTypes.func.isRequired,\n  onCardClick: PropTypes.func.isRequired,\n  sidebarHeight: PropTypes.number,\n  viewport: PropTypes.object,\n}\nexport default SidebarEventsList\n"],"sourceRoot":""}