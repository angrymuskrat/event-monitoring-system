{"version":3,"sources":["components/Post/Post.styled.js","components/Post/Post.jsx","assets/svg/SliderButton.js","components/Popup/Popup.styled.js","components/Popup/Modal.styled.js","components/Popup/Popup.jsx"],"names":["styled","div","Post","post","key","id","className","href","profileLink","target","rel","style","background","profilePicUrl","backgroundPosition","backgroundRepeat","backgroundSize","username","location","src","photoUrl","alt","caption","likes","SliderButton","version","xmlns","x","y","viewBox","d","lightGrey","darkGrey","lightGreyTransparent","Modal","setAppElement","Popup","isPopupOpen","closePopup","data","sliderRef","useRef","useState","currentSlide","setCurrentSlide","slickSettings","dots","infinite","speed","slidesToShow","slidesToScroll","beforeChange","current","next","isOpen","onRequestClose","modalStyles","contentLabel","onClick","Cross","ref","map","p","undefined","length","slickNext","slickPrev"],"mappings":"+qDACeA,UAAOC,IAAtB,KCuEeC,MAlEf,YAAyB,IAATC,EAAQ,EAARA,KACd,OACE,kBAAC,EAAD,CAAWC,IAAKD,EAAKE,IACnB,yBAAKC,UAAU,gBACb,uBAAGC,KAAMJ,EAAKK,YAAaC,OAAO,SAASC,IAAI,uBAC7C,yBACEJ,UAAU,oBACVK,MAAO,CACLC,WAAW,OAAD,OAAST,EAAKU,cAAd,KACVC,mBAAoB,SACpBC,iBAAkB,YAClBC,eAAgB,YAKtB,yBAAKV,UAAU,sBACb,uBACEA,UAAU,2BACVC,KAAMJ,EAAKK,YACXC,OAAO,SACPC,IAAI,uBAEHP,EAAKc,UAGR,uBAAGX,UAAU,8BAA8BH,EAAKe,WAElD,uBACEX,KAAMJ,EAAKK,YACXC,OAAO,SACPC,IAAI,sBACJJ,UAAU,gBAEV,4BAAQA,UAAU,wBAAlB,kBAGJ,yBAAKA,UAAU,iBAIb,yBAAKa,IAAKhB,EAAKiB,SAAUC,IAAKlB,EAAKmB,WAErC,yBAAKhB,UAAU,eACb,uBAAGA,UAAU,kBAAb,UACKH,EAAKoB,MADV,IACiC,IAAfpB,EAAKoB,MAAc,OAAS,UAGhD,yBAAKjB,UAAU,qBACb,uBACEC,KAAMJ,EAAKK,YACXC,OAAO,SACPC,IAAI,sBACJJ,UAAU,4BAETH,EAAKc,UAER,uBAAGX,UAAU,kBAAkBH,EAAKmB,YCxB7BE,MArCf,WACE,OACE,yBACEC,QAAQ,MACRpB,GAAG,UACHqB,MAAM,6BACNC,EAAE,MACFC,EAAE,MACFC,QAAQ,uBAER,2BACE,2BACE,0BACEC,EAAE,ySAMR,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,8B,62HCjCS9B,UAAOC,IAAtB,IAgB4B8B,IAmBbC,K,2WCnCAhC,UAAOC,IAAtB,IAUcgC,IAIED,KCIhBE,IAAMC,cAAc,SAgFLC,UA9Ef,YAAmD,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,WAAYC,EAAQ,EAARA,KAClCC,EAAYC,mBAD8B,EAERC,mBAAS,GAFD,mBAEzCC,EAFyC,KAE3BC,EAF2B,KAG1CC,EAAgB,CACpBC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,aAAc,SAACC,EAASC,GAAV,OAAmBT,EAAgBS,KAYnD,OACE,kBAAC,IAAD,CACEC,OAAQjB,EACRkB,eAAgBjB,EAChB3B,MAAO6C,IACPC,aAAa,SAEb,kBAAC,EAAD,KACE,4BAAQnD,UAAU,gBAAgBoD,QAASpB,GACzC,kBAACqB,EAAA,EAAD,OAEF,kBAAC,EAAD,KACE,kBAAC,IAAD,iBAAYd,EAAZ,CAA2Be,IAAKpB,IAC7BD,EACCA,EAAKsB,KAAI,SAAAC,GACP,YAAaC,IAAND,GAAmB,kBAAC,EAAD,CAAM1D,IAAK0D,EAAEzD,GAAIF,KAAM2D,OAGnD,yBAAKxD,UAAU,kBACb,yCACA,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,eAKvB,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,wBACViC,GAAQI,EAAe,EAAI,IAAMJ,EAAKyB,SAG3C,4BACE1D,UAAU,qCACVoD,QA3CK,WACTlB,EAAUY,SACZZ,EAAUY,QAAQa,cA2CZ,8BACE,kBAAC,EAAD,QAGJ,4BACE3D,UAAU,qCACVoD,QA9CK,WACTlB,EAAUY,SACZZ,EAAUY,QAAQc,cA8CZ,8BACE,kBAAC,EAAD","file":"static/js/9.31f48040.chunk.js","sourcesContent":["import styled from 'styled-components'\nexport default styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 520px;\n  width: 100%;\n  margin: 0 auto;\n\n  .post__header {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1.5rem;\n  }\n  .post__profile-pic {\n    background-color: #fff;\n    background-size: cover;\n    width: 100%;\n    height: 100%;\n    width: 4rem;\n    height: 4rem;\n    border-radius: 50%;\n  }\n  .post__profile-info {\n    flex-basis: 65%;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n  .post__profile-button {\n    cursor: pointer;\n    background-color: #3897f0;\n    color: #fff;\n    padding: 0.8rem;\n    transition: all 0.3s;\n    font-size: 1.3rem;\n    &:hover {\n      background-color: #1372cc;\n    }\n    @media (max-width: 375px) {\n      font-size: 0.8rem;\n    }\n  }\n  .post__likes {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n  .post__picture {\n    background-color: #fff;\n    margin-bottom: 1rem;\n    & img {\n      width: 100%;\n      height: auto;\n    }\n  }\n  .post__description {\n    max-width: 52rem;\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n    padding-bottom: 2.5rem;\n    a {\n      display: inline-block;\n      padding-bottom: 0.4rem;\n    }\n    .text {\n      text-overflow: ellipsis;\n      word-wrap: break-word;\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// styled\nimport Container from './Post.styled'\n\nfunction Post({ post }) {\n  return (\n    <Container key={post.id}>\n      <div className=\"post__header\">\n        <a href={post.profileLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          <div\n            className=\"post__profile-pic\"\n            style={{\n              background: `url(${post.profilePicUrl})`,\n              backgroundPosition: 'center',\n              backgroundRepeat: 'no-repeat',\n              backgroundSize: 'cover',\n            }}\n          ></div>\n        </a>\n\n        <div className=\"post__profile-info\">\n          <a\n            className=\"text text_bold text_post\"\n            href={post.profileLink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {post.username}\n          </a>\n\n          <p className=\"text text_p2 text_location\">{post.location}</p>\n        </div>\n        <a\n          href={post.profileLink}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text text_p2\"\n        >\n          <button className=\"post__profile-button\">View profile</button>\n        </a>\n      </div>\n      <div className=\"post__picture\">\n        {/* <a href={post.postLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={post.photoUrl} alt={post.caption} />\n        </a> */}\n        <img src={post.photoUrl} alt={post.caption} />\n      </div>\n      <div className=\"post__likes\">\n        <p className=\"text text_post\">\n          â™¡ {post.likes} {post.likes === 1 ? 'like' : 'likes'}\n        </p>\n      </div>\n      <div className=\"post__description\">\n        <a\n          href={post.profileLink}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text text_bold text_post\"\n        >\n          {post.username}\n        </a>\n        <p className=\"text text_post\">{post.caption}</p>\n      </div>\n    </Container>\n  )\n}\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n}\n\nexport default Post\n","import React from 'react'\n\nfunction SliderButton() {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Layer_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 512.005 512.005\"\n    >\n      <g>\n        <g>\n          <path\n            d=\"M388.418,240.923L153.751,6.256c-8.341-8.341-21.824-8.341-30.165,0s-8.341,21.824,0,30.165L343.17,256.005\n\t\t\tL123.586,475.589c-8.341,8.341-8.341,21.824,0,30.165c4.16,4.16,9.621,6.251,15.083,6.251c5.461,0,10.923-2.091,15.083-6.251\n\t\t\tl234.667-234.667C396.759,262.747,396.759,249.264,388.418,240.923z\"\n          />\n        </g>\n      </g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n    </svg>\n  )\n}\nexport default SliderButton\n","import styled from 'styled-components'\nimport { darkGrey, lightGrey } from '../../config/styles'\nexport default styled.div`\n  max-width: 520px;\n  max-height: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  position: relative;\n  overflow: hidden;\n  @media (max-width: 650px) {\n    height: 100%;\n  }\n  .popup__counter {\n    width: 100%;\n    z-index: 150;\n    background-color: #ffffff;\n    border-top: 1px solid ${lightGrey};\n    display: flex;\n    justify-content: center;\n    box-shadow: 0px -6px 8px -1px rgba(0, 0, 0, 0.01);\n    margin-top: -2rem;\n    & .text {\n      display: block;\n      margin-top: 2rem;\n      margin-bottom: 2rem;\n    }\n  }\n  .popup__loading {\n    min-height: 70rem;\n    display: flex !important;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    & p {\n      display: block;\n      color: ${darkGrey};\n      font-weight: 700;\n      font-size: 1.4rem;\n    }\n    .spinner-container {\n      margin-top: 3rem;\n    }\n    .spinner {\n      background-color: transparent;\n      width: 1rem;\n      height: 1rem;\n      border-radius: 100%;\n      box-shadow: 12px -12px 0 hsla(208, 16%, 35%, 0.125),\n        17px 0 0 -1px hsla(208, 16%, 35%, 0.25),\n        12px 12px 0 -2px hsla(208, 16%, 35%, 0.375),\n        0 17px 0 -3px hsla(208, 16%, 35%, 0.5),\n        -12px 12px 0 -4px hsla(208, 16%, 35%, 0.625),\n        -17px 0 0 -5px hsla(208, 16%, 35%, 0.75),\n        -12px -12px 0 -6px hsla(208, 16%, 35%, 0.875),\n        0 -17px 0 -7px hsla(208, 16%, 35%, 1);\n      animation: clockwise 0.75s steps(8, end) infinite;\n    }\n    @keyframes clockwise {\n      to {\n        transform: rotate(360deg) translatez(0);\n      }\n    }\n  }\n  .slick-slider {\n    max-width: 52rem;\n    width: 100%;\n    scrollbar-width: none;\n    @media (max-width: 650px) {\n      max-width: 100vw;\n      max-height: 75vh;\n    }\n  }\n  .slick-slide {\n    max-height: 70rem;\n    overflow: scroll;\n    display: flex;\n    justify-content: center;\n    overflow: scroll;\n    scrollbar-color: white;\n    scrollbar-width: none;\n    @media (max-width: 650px) {\n      height: 90%;\n    }\n  }\n  .slick-list {\n    overflow: hidden;\n    max-width: 52rem;\n    margin: 0 auto;\n    @media (max-width: 650px) {\n      max-width: 100%;\n    }\n  }\n  .slick-track {\n    display: flex;\n    align-items: center;\n  }\n  .slider__button {\n    position: absolute;\n    top: 45%;\n    display: inline-flex;\n    color: rgb(34, 34, 34);\n    background-color: rgba(255, 255, 255, 0.9);\n    cursor: pointer;\n    align-items: center;\n    justify-content: center;\n    background-clip: padding-box;\n    box-shadow: transparent 0px 0px 0px 1px, transparent 0px 0px 0px 4px,\n      rgba(0, 0, 0, 0.18) 0px 2px 4px;\n    width: 3.2rem;\n    height: 3.2rem;\n    border-radius: 50%;\n    border-image: initial;\n    outline: 0;\n    margin: 0;\n    padding: 0;\n    border-style: solid;\n    border-width: 1px;\n    border-color: rgba(0, 0, 0, 0.08);\n    transition: box-shadow 0.2s ease 0s, -ms-transform 0.25s ease 0s,\n      -webkit-transform 0.25s ease 0s, transform 0.25s ease 0s;\n    &:active {\n      background-color: rgb(255, 255, 255);\n      color: rgb(0, 0, 0);\n      box-shadow: none;\n      transform: scale(1);\n      border-color: rgba(0, 0, 0, 0.08);\n    }\n    &:hover {\n      background-color: rgb(255, 255, 255);\n      color: rgb(0, 0, 0);\n      box-shadow: transparent 0px 0px 0px 1px, transparent 0px 0px 0px 4px,\n        rgba(0, 0, 0, 0.12) 0px 6px 16px;\n      transform: scale(1.04);\n      border-color: rgba(0, 0, 0, 0.08);\n    }\n    & svg {\n      width: 1rem;\n      height: 1rem;\n    }\n  }\n  .slider__button_next {\n    right: 3px;\n  }\n  .slider__button_prev {\n    left: 3px;\n    & svg {\n      transform: scale(-1, 1);\n    }\n  }\n  .slick-prev {\n    display: none !important;\n  }\n  .slick-next {\n    display: none !important;\n  }\n`\n","import styled from 'styled-components'\nimport { darkGrey, lightGreyTransparent } from '../../config/styles'\nexport default styled.div`\n  & .modal__button {\n    position: absolute;\n    top: 1.2rem;\n    right: 1rem;\n    width: 2rem;\n    height: 2rem;\n    cursor: pointer;\n    & svg path {\n      transition: fill 0.25s;\n      fill: ${lightGreyTransparent};\n    }\n    &:hover {\n      & svg path {\n        fill: ${darkGrey};\n      }\n    }\n  }\n`\n","import React, { useState, useRef } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Modal from 'react-modal'\nimport Slider from 'react-slick'\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\n\n// components\nimport { Cross } from '../../assets/svg/Cross'\nimport Post from '../Post/Post.jsx'\nimport SliderButton from '../../assets/svg/SliderButton'\n\n// styled\nimport Container from './Popup.styled'\nimport ModalContainer from './Modal.styled'\n\n// styles config\nimport { modalStyles } from '../../config/styles'\n\nModal.setAppElement('#root')\n\nfunction Popup({ isPopupOpen, closePopup, data }) {\n  const sliderRef = useRef()\n  const [currentSlide, setCurrentSlide] = useState(0)\n  const slickSettings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    beforeChange: (current, next) => setCurrentSlide(next),\n  }\n  const goNext = () => {\n    if (sliderRef.current) {\n      sliderRef.current.slickNext()\n    }\n  }\n  const goPrev = () => {\n    if (sliderRef.current) {\n      sliderRef.current.slickPrev()\n    }\n  }\n  return (\n    <Modal\n      isOpen={isPopupOpen}\n      onRequestClose={closePopup}\n      style={modalStyles}\n      contentLabel=\"Modal\"\n    >\n      <ModalContainer>\n        <button className=\"modal__button\" onClick={closePopup}>\n          <Cross />\n        </button>\n        <Container>\n          <Slider {...slickSettings} ref={sliderRef}>\n            {data ? (\n              data.map(p => {\n                return p !== undefined && <Post key={p.id} post={p} />\n              })\n            ) : (\n              <div className=\"popup__loading\">\n                <p>Loading...</p>\n                <div className=\"spinner-container\">\n                  <div className=\"spinner\"></div>\n                </div>\n              </div>\n            )}\n          </Slider>\n          <div className=\"popup__counter\">\n            <p className=\"text text_subheading\">\n              {data && currentSlide + 1 + '/' + data.length}\n            </p>\n          </div>\n          <button\n            className=\"slider__button slider__button_next\"\n            onClick={goNext}\n          >\n            <span>\n              <SliderButton />\n            </span>\n          </button>\n          <button\n            className=\"slider__button slider__button_prev\"\n            onClick={goPrev}\n          >\n            <span>\n              <SliderButton />\n            </span>\n          </button>\n        </Container>\n      </ModalContainer>\n    </Modal>\n  )\n}\nPopup.propTypes = {\n  isPopupOpen: PropTypes.bool.isRequired,\n  closePopup: PropTypes.func.isRequired,\n  postcodes: PropTypes.array,\n}\nexport default Popup\n"],"sourceRoot":""}