{"version":3,"sources":["assets/svg/Cross.js","components/Input/Input.jsx","utils/hooks.js","components/Select/SelectInput.styled.js","assets/svg/Chevron.js","components/Select/SelectInput.jsx","components/Marker/Marker.jsx","components/Map/EventsLayer.jsx","components/Map/Map.jsx","components/Sidebar/SidebarNav/SidebarNav.styled.js","components/Sidebar/SidebarNav/SidebarNav.jsx","components/ChartStat/ChartStat.styled.js","components/Button/ChartStatButton.styled.js","components/Button/ChartStatButton.jsx","components/ChartStat/ChartStat.jsx","containers/Chart/Chart.styled.js","components/CustomTooltip/CustomTooltip.styled.js","components/CustomTooltip/CustomTooltip.jsx","containers/Chart/Chart.jsx","containers/Chart/index.js","containers/RangeSlider/RangeSlider.styled.js","containers/RangeSlider/RangeSlider.jsx","containers/RangeSlider/index.js","components/Button/ChartNavigationButton.styled.js","components/Button/ChartNavigationButton.jsx","components/DatePicker/SingleDatePicker.jsx","components/Sidebar/SidebarTitle/SidebarTitle.styled.js","components/Sidebar/SidebarTitle/SidebarTitle.jsx","components/Sidebar/SidebarBody/SidebarBody.styled.js","components/Sidebar/SidebarBody/SidebarBody.jsx","assets/svg/ToggleMenu.styled.js","assets/svg/ToggleMenu.js","containers/Sidebar/SidebarContainer.styled.js","containers/Sidebar/Sidebar.styled.js","components/ToggleButton/ToggleButton.js","containers/Sidebar/Sidebar.jsx","containers/Sidebar/index.js","containers/MapPage/MapPage.styled.js","containers/MapPage/MapPage.jsx","containers/MapPage/index.js"],"names":["Cross","width","height","viewBox","fill","xmlns","d","Input","submitValue","type","value","useState","inputValue","changeInputValue","useEffect","in","placeholder","onChange","e","target","onKeyDown","key","onClick","useWindowWidth","window","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","datepickerReducer","state","action","focusedInput","payload","Error","styled","div","darkGrey","lightGrey","ChevronUp","transform","ChevronDown","SelectInput","options","handleSelectOption","values","setValues","focusedValue","setFocusedValue","isOpen","setIsOpen","onHoverOption","currentTarget","dataset","index","findIndex","option","onClickOption","indexOf","newValues","splice","renderOption","className","includes","length","data-value","onMouseOver","tabIndex","onBlur","currentFocusedValue","preventDefault","map","MarkerContainer","props","properties","center","onEventClick","Marker","icon","iconMarkup","photoUrl","title","divIcon","html","createIcon","position","id","postcodes","EventsLayer","events","Markers","p","geometry","coordinates","iconCreateFunction","cluster","firstChildHtml","getAllChildMarkers","coverPictureUrl","substring","firstChildTitle","count","getChildCount","L","replace","showCoverageOnHover","spiderfyOnMaxZoom","spiderLegPolylineOptions","weight","opacity","removeOutsideVisibleBounds","MapContainer","isShowAllEvents","isSearchingEvents","isLoading","chartData","allHeatmapData","currentHeatmap","currentEvents","mapRef","searchQuery","selectedHour","handleViewportChangeEnd","viewport","heatmapData","setHeatmapData","eventsData","setEventsData","innerViewport","setInnerViewport","currentZoom","setCurrentZoom","toJS","calculateHeatmap","calculateEventsData","current","acc","forEach","data","undefined","get","time","push","Map","ref","animate","onViewportChanged","onViewportChange","zoom","TileLayer","attribution","url","Loading","points","longitudeExtractor","m","latitudeExtractor","gradient","heatmapGradient","minOpacity","intensityExtractor","parseFloat","radius","blur","max","nav","lightGreyTransparent","orange","SidebarNav","handleCheckboxChange","toggleSidebar","badgeOrange","button","isDemoPlay","ChartStatButton","children","ChartStat","handleDemoPlay","handleDemoStop","handleSelectAll","moment","unix","format","chartLightGrey","CustomTooltip","active","label","Chart","fetchData","highlightedHour","playDemo","selectedDate","setHighlightedHour","setSelectedHour","stopDemo","toggleAllEvents","handleEnter","handleClick","calculateHeight","margin","top","right","left","bottom","onMouseLeave","cursor","content","dataKey","stroke","grey","tickLine","interval","tickFormatter","tick","stackId","onMouseEnter","chartDarkGrey","Number","lightOrange","mapStateToProps","createImmutableSelector","chartDataSelector","isDemoPlaySelector","isShowAllEventsSelector","selectedDateSelector","selectedHourSelector","connect","dispatch","hour","bounds","RangeSlider","sliderPosition","setSliderPosition","min","step","tooltip","onChangeComplete","isLoadingSelector","transparentBackground","SingleDatepicker","setSelectedDate","stateDate","date","setDate","showDatepicker","setShowDatepicker","setPosition","datepickerStyles","styles","setStyles","xsDatepickerStyles","Date","theme","onDateChange","handleDateChange","onFocusChange","displayFormat","minBookingDate","initialVisibleMonth","placement","SidebarTitle","SidebarSearch","lazy","SidebarBody","currentTab","setCurrentTab","eventFilters","handleSubmitValue","handleSearchSubmit","handleSelectSearchQueryOption","handleSubmitSearchQueryValue","searchQueryFilters","searchParametersStartDate","searchParametersEndDate","reduce","accum","currentEventsNumber","find","calculateEvents","prevDay","parseInt","nextDay","fallback","display","ToggleMenu","version","x","y","data-original","data-old_color","EventsList","Sidebar","allEventsData","currentUserLocation","isPopupOpen","isSidebarOpen","searchParameters","setNewDate","setHighlightedEvent","setSelectedEvent","setSearchParameters","setSearchEvents","onCardClick","setEventFilter","setSearchQueryFilter","fixedSidebarRef","useRef","sidebarHeight","setSidebarHeight","offsetHeight","ToggleButton","toString","startDate","params","parameter","handleEventClick","eventCoordinates","obj","getIn","leafletElement","flyTo","handleEventHover","allEventsDataSelector","currentEventsSelector","currentUserLocationSelector","eventsSelector","isPopupOpenSelector","isSidebarOpenSelector","eventFiltersSelector","isSearchingEventsSelector","searchQuerySelector","searchParametersSelector","viewportSelector","errorSelector","searchQueryFiltersSelector","searchParametersStartDateSelector","searchParametersEndDateSelector","errors","filter","Popup","MapPage","setViewport","currentCityId","currentPopupData","setupMapFromHistory","setBounds","setCurrentUserLocation","togglePopup","useParams","city","topLeft","botRight","isMapStoreLoaded","setIsMapStoreLoaded","pos","locate","_renderer","location","_center","bottomRight","getBounds","_southWest","lat","toFixed","lng","_northEast","closePopup","allHeatmapDataSelector","currentCityIdSelector","currentHeatmapSelector","currentPopupDataSelector","fetchAllData","config","path"],"mappings":"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","file":"static/js/7.1458076d.chunk.js","sourcesContent":["import React from 'react'\n\nexport function Cross() {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M18.3602 19.78L12.0002 13.41L5.64021 19.78L4.22021 18.36L10.5902 12L4.22021 5.63997L5.64021 4.21997L12.0002 10.59L18.3602 4.22997L19.7702 5.63997L13.4102 12L19.7702 18.36L18.3602 19.78Z\"\n        fill=\"black\"\n      />\n    </svg>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\n// images\nimport Magnifier from '../../assets/svg/Magnifier'\n\n// styled\nimport Container from './Input.styled'\nimport InputButton from './InputButton'\nimport InputField from './InputField'\n\nfunction Input({ submitValue, type, value }) {\n  const [inputValue, changeInputValue] = useState('')\n  useEffect(() => {\n    if (value) {\n      changeInputValue(value)\n    }\n  }, [value])\n  const handleChange = e => {\n    changeInputValue(e.target.value)\n  }\n  const handleKeyDown = e => {\n    switch (e.key) {\n      case 'Enter':\n        submitValue(inputValue)\n        break\n      default:\n        break\n    }\n  }\n  const handleButtonClick = () => {\n    submitValue(inputValue)\n  }\n  return (\n    <Container type={type} in={type}>\n      <InputField\n        placeholder=\"Search...\"\n        value={inputValue}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n      <InputButton onClick={handleButtonClick}>\n        <Magnifier />\n      </InputButton>\n    </Container>\n  )\n}\nInput.propTypes = {\n  value: PropTypes.string,\n  submitValue: PropTypes.func.isRequired,\n  type: PropTypes.string,\n}\nexport default Input\n","import { useState, useEffect } from 'react'\n\nexport const useWindowWidth = () => {\n  const [width, setWidth] = useState(window.innerWidth)\n  useEffect(() => {\n    const handleResize = () => setWidth(window.innerWidth)\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  })\n  return width\n}\nexport function datepickerReducer(state, action) {\n  switch (action.type) {\n    case 'focusChange':\n      return { ...state, focusedInput: action.payload }\n    case 'dateChange':\n      return action.payload\n    default:\n      throw new Error()\n  }\n}\n","import styled from 'styled-components'\nimport { lightGrey, darkGrey } from '../../config/styles'\n\nexport default styled.div`\n  flex-basis: 50%;\n  margin-right: 1rem;\n  svg {\n    display: block;\n    width: 1em;\n    height: 1em;\n    fill: currentColor;\n  }\n  .select {\n    position: relative;\n    display: inline-block;\n    min-width: 11rem;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n      &__input {\n        box-shadow: 0 0 1px 1px #00a9e0;\n      }\n    }\n  }\n  .select__input {\n    position: relative;\n    padding: 0.7rem;\n    border: 1px solid rgba(143, 155, 179, 0.23);\n    border-radius: 1rem;\n    background: #fff;\n  }\n  .select__input_open {\n    border-radius: 1rem 1rem 0px 0px;\n  }\n  .select__value {\n    position: relative;\n    display: inline-block;\n    padding: 0.5rem 1rem;\n  }\n  .select__placeholder {\n    padding: 0.5rem 1rem;\n    color: ${darkGrey};\n  }\n  .select__arrow {\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    display: block;\n    padding: 1rem;\n    font-size: 1rem;\n    color: ${darkGrey};\n  }\n  .select__options {\n    position: absolute;\n    z-index: 200;\n    top: 100%;\n    left: 0;\n    right: 0;\n    border-width: 0 1px;\n  }\n  .select__option {\n    padding: 1rem 1.5rem;\n    border-bottom: 1px solid rgba(143, 155, 179, 0.23);\n    border-left: 1px solid rgba(143, 155, 179, 0.23);\n    border-right: 1px solid rgba(143, 155, 179, 0.23);\n    background-color: #ffffff;\n    cursor: pointer;\n    &_selected {\n      border: 1px solid #00a9e0;\n      margin: -1px -1px 0;\n      background: #d9f2fb;\n      pointer-events: none;\n    }\n    &_focused {\n      background: ${lightGrey};\n    }\n    &_last {\n      border-radius: 0px 0px 10px 10px;\n    }\n  }\n`\n","import React from 'react'\n\nexport const ChevronUp = () => (\n  <svg viewBox=\"0 0 10 8\">\n    <path\n      d=\"M2.08578644,7.29289322 C1.69526215,7.68341751 1.69526215,8.31658249 2.08578644,8.70710678 C2.47631073,9.09763107 3.10947571,9.09763107 3.5,8.70710678 L8.20710678,4 L3.5,-0.707106781 C3.10947571,-1.09763107 2.47631073,-1.09763107 2.08578644,-0.707106781 C1.69526215,-0.316582489 1.69526215,0.316582489 2.08578644,0.707106781 L5.37867966,4 L2.08578644,7.29289322 Z\"\n      transform=\"translate(5.000000, 4.000000) rotate(-90.000000) translate(-5.000000, -4.000000) \"\n    />\n  </svg>\n)\nexport const ChevronDown = () => (\n  <svg viewBox=\"0 0 10 7\">\n    <path\n      d=\"M2.08578644,6.5 C1.69526215,6.89052429 1.69526215,7.52368927 2.08578644,7.91421356 C2.47631073,8.30473785 3.10947571,8.30473785 3.5,7.91421356 L8.20710678,3.20710678 L3.5,-1.5 C3.10947571,-1.89052429 2.47631073,-1.89052429 2.08578644,-1.5 C1.69526215,-1.10947571 1.69526215,-0.476310729 2.08578644,-0.0857864376 L5.37867966,3.20710678 L2.08578644,6.5 Z\"\n      transform=\"translate(5.000000, 3.207107) rotate(90.000000) translate(-5.000000, -3.207107) \"\n    />\n  </svg>\n)\n","import React, { useState, useEffect } from 'react'\nimport PropTypes, { object } from 'prop-types'\n\n// styled\nimport Container from './SelectInput.styled'\n\n// images\nimport { ChevronDown, ChevronUp } from '../../assets/svg/Chevron'\n\nfunction SelectInput({ options, placeholder, handleSelectOption, value }) {\n  const [values, setValues] = useState([])\n  const [focusedValue, setFocusedValue] = useState(-1)\n  const [isOpen, setIsOpen] = useState(false)\n\n  useEffect(() => {\n    if (value) {\n      setValues(value)\n    }\n  }, [value])\n\n  const onBlur = () => {\n    const value = values[0]\n    let currentFocusedValue = -1\n\n    if (value) {\n      currentFocusedValue = options.findIndex(option => option.value === value)\n    }\n    setFocusedValue(currentFocusedValue)\n    setIsOpen(false)\n  }\n\n  const onKeyDown = e => {\n    let currentFocusedValue = focusedValue\n    switch (e.key) {\n      case ' ':\n        e.preventDefault()\n        if (isOpen) {\n          setIsOpen(true)\n        }\n        break\n      case 'Escape':\n      case 'Tab':\n        if (isOpen) {\n          e.preventDefault()\n          setIsOpen(false)\n        }\n        break\n      case 'Enter':\n        setIsOpen(!isOpen)\n        break\n      case 'ArrowDown':\n        e.preventDefault()\n        currentFocusedValue = focusedValue\n        if (focusedValue < options.length - 1) {\n          currentFocusedValue++\n          setValues([options[currentFocusedValue].value])\n          setFocusedValue(currentFocusedValue)\n        }\n        break\n      case 'ArrowUp':\n        e.preventDefault()\n        currentFocusedValue = focusedValue\n        if (focusedValue > 0) {\n          currentFocusedValue--\n          setValues([options[currentFocusedValue].value])\n          setFocusedValue(currentFocusedValue)\n        }\n        break\n      default:\n        break\n    }\n  }\n\n  const onClick = () => {\n    setIsOpen(!isOpen)\n  }\n\n  const onHoverOption = e => {\n    const { value } = e.currentTarget.dataset\n    const index = options.findIndex(option => option.value === value)\n    setFocusedValue(index)\n  }\n\n  const onClickOption = e => {\n    const { value } = e.currentTarget.dataset\n    const index = values.indexOf(value)\n    if (index === -1) {\n      setValues(value)\n      handleSelectOption(value)\n      setIsOpen(false)\n    } else {\n      const newValues = values.splice(index, 1)\n      setValues(newValues)\n      setIsOpen(false)\n    }\n  }\n\n  const renderValues = () => {\n    if (values.length === 0) {\n      return <div className=\"select__placeholder text_p2\">{placeholder}</div>\n    }\n\n    return <div className=\"select__value\">{values}</div>\n  }\n\n  const renderOptions = () => {\n    if (!isOpen) {\n      return null\n    }\n    return <div className=\"select__options\">{options.map(renderOption)}</div>\n  }\n\n  const renderOption = (option, index) => {\n    const { value } = option\n    const selected = values.includes(value)\n\n    let className = 'select__option'\n    if (selected) className += ' select__option_selected'\n    if (index === focusedValue) className += ' select__option_focused'\n    if (index === options.length - 1) className += ' select__option_last'\n    return (\n      <div\n        key={value}\n        data-value={value}\n        className={className}\n        onMouseOver={onHoverOption}\n        onClick={onClickOption}\n      >\n        {value}\n      </div>\n    )\n  }\n\n  return (\n    <Container>\n      <div\n        className=\"select\"\n        tabIndex=\"0\"\n        onBlur={onBlur}\n        onKeyDown={onKeyDown}\n      >\n        <div\n          className={\n            isOpen ? 'select__input select__input_open' : 'select__input'\n          }\n          onClick={onClick}\n        >\n          {renderValues()}\n          <span className=\"select__arrow\">\n            {isOpen ? <ChevronUp /> : <ChevronDown />}\n          </span>\n        </div>\n        {renderOptions()}\n      </div>\n    </Container>\n  )\n}\n\nSelectInput.propTypes = {\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  options: PropTypes.arrayOf(object).isRequired,\n  handleSelectOption: PropTypes.func.isRequired,\n}\n\nexport default SelectInput\n","import React from 'react'\nimport { divIcon } from 'leaflet'\nimport { Marker } from 'react-leaflet'\n\nfunction MarkerContainer(props) {\n  const { properties, center, onEventClick } = props\n  const handleClick = () => {\n    onEventClick(properties.id, properties.postcodes)\n  }\n  const createIcon = () => {\n    const iconMarkup = `\n      <div data-photoUrl=\"${properties.photoUrl}\"\n          class=\"marker-inner\" \n          style=\"\n            background: url(${properties.photoUrl}) no-repeat center center;\n            background-color: #fff;\n            background-size: cover;\n          \"\n          >\n          <div class=\"marker__description\" style=\"width:${25 +\n            properties.title.length * 6}px\">\n            <span class=\"text\">${properties.title}</span>\n          </div>\n      </div>\n    `\n    return divIcon({\n      className: 'marker',\n      html: iconMarkup,\n    })\n  }\n  return (\n    <Marker\n      className=\"circle\"\n      icon={createIcon()}\n      position={center}\n      onClick={handleClick}\n    />\n  )\n}\n\nexport default MarkerContainer\n","import React from 'react'\nimport L from 'leaflet'\nimport MarkerClusterGroup from 'react-leaflet-markercluster'\nimport 'react-leaflet-markercluster/dist/styles.min.css'\nimport MarkerContainer from '../Marker/Marker.jsx'\n\nfunction EventsLayer(props) {\n  const { events, onEventClick } = props\n  const createClusterCustomIcon = cluster => {\n    const children = cluster.getAllChildMarkers()\n    const firstChildHtml = children[0].options.icon.options.html\n    const coverPictureUrl = firstChildHtml.substring(\n      firstChildHtml.indexOf('data-photoUrl=\"') + 15,\n      firstChildHtml.indexOf('class=\"marker-inner\"')\n    )\n    const firstChildTitle = firstChildHtml.substring(\n      firstChildHtml.indexOf('<span class=\"text\">') + 19,\n      firstChildHtml.indexOf('</span>')\n    )\n    const count = cluster.getChildCount()\n\n    return L.divIcon({\n      html: `<div class=\"marker-inner\" \n                style=\"\n                  background: url(${coverPictureUrl.replace(\n                    '\"',\n                    ''\n                  )}) no-repeat center center;\n                  background-color: #fff;\n                  background-size: cover;\n                \"\n                >\n                  <div class=\"marker__description\" style=\"width:${30 +\n                    firstChildTitle.length * 6}px\">\n                    <span class=\"text\">${firstChildTitle} + ${count} events</span>\n                  </div>\n              </div>`,\n      className: `marker`,\n    })\n  }\n\n  const Markers = events\n    ? events.map(p => (\n        <MarkerContainer\n          key={`${p.properties.id}`}\n          center={p.geometry.coordinates}\n          onEventClick={onEventClick}\n          {...p}\n        />\n      ))\n    : null\n\n  return (\n    <MarkerClusterGroup\n      iconCreateFunction={createClusterCustomIcon}\n      showCoverageOnHover={false}\n      spiderfyOnMaxZoom={true}\n      spiderLegPolylineOptions={{\n        weight: 0,\n        opacity: 0,\n      }}\n      removeOutsideVisibleBounds={true}\n    >\n      {Markers}\n    </MarkerClusterGroup>\n  )\n}\n\nexport default EventsLayer\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n// leaflet\nimport { Map, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport HeatmapLayer from 'react-leaflet-heatmap-layer'\n\n// styles\nimport { heatmapGradient } from '../../config/styles'\n\n// components\nimport EventsLayer from './EventsLayer'\nimport Loading from '../Loading/Loading.jsx'\n\nfunction MapContainer(props) {\n  const {\n    isShowAllEvents,\n    isSearchingEvents,\n    isLoading,\n    chartData,\n    allHeatmapData,\n    currentHeatmap,\n    currentEvents,\n    events,\n    mapRef,\n    searchQuery,\n    selectedHour,\n    handleViewportChangeEnd,\n    viewport,\n    onEventClick,\n  } = props\n  const [heatmapData, setHeatmapData] = useState(null)\n  const [eventsData, setEventsData] = useState(null)\n  const [innerViewport, setInnerViewport] = useState(null)\n  const [currentZoom, setCurrentZoom] = useState()\n\n  useEffect(() => {\n    setInnerViewport(viewport.toJS())\n  }, [viewport])\n  const handleViewportChanged = viewport => {\n    if (mapRef.current) {\n      handleViewportChangeEnd(viewport)\n    }\n  }\n  const handleViewportChange = e => {\n    setCurrentZoom(e.zoom)\n  }\n  useEffect(() => {\n    setHeatmapData(calculateHeatmap())\n    setEventsData(calculateEventsData())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    currentHeatmap,\n    currentEvents,\n    events,\n    searchQuery,\n    allHeatmapData,\n    isShowAllEvents,\n    isSearchingEvents,\n    selectedHour,\n  ])\n\n  useEffect(() => {\n    setHeatmapData(calculateHeatmap())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentZoom])\n\n  const calculateHeatmap = () => {\n    if (\n      mapRef.current &&\n      (currentHeatmap || (isShowAllEvents && allHeatmapData)) &&\n      selectedHour &&\n      !isSearchingEvents\n    ) {\n      let acc = []\n      if (isShowAllEvents && chartData && allHeatmapData) {\n        chartData.forEach(data => {\n          if (allHeatmapData.get(`${data.time}`) !== undefined) {\n            allHeatmapData\n              .get(`${data.time}`)\n              .toJS()\n              .forEach(d => acc.push(d))\n          }\n        })\n      }\n      return isShowAllEvents\n        ? acc\n        : currentHeatmap\n        ? currentHeatmap.toJS()\n        : null\n    } else {\n      return null\n    }\n  }\n  const calculateEventsData = () => {\n    if (isSearchingEvents && searchQuery) {\n      return searchQuery.toJS()\n    }\n    if (\n      mapRef.current &&\n      (currentEvents || (isShowAllEvents && events)) &&\n      selectedHour &&\n      !isSearchingEvents\n    ) {\n      let acc = []\n      if (isShowAllEvents && chartData && events) {\n        chartData.forEach(data => {\n          if (events.get(`${data.time}`) !== undefined) {\n            events\n              .get(`${data.time}`)\n              .toJS()\n              .forEach(d => acc.push(d))\n          }\n        })\n      }\n      return isShowAllEvents ? acc : currentEvents ? currentEvents.toJS() : null\n    } else {\n      return null\n    }\n  }\n  return (\n    <>\n      {innerViewport ? (\n        <Map\n          id=\"mapId\"\n          ref={mapRef}\n          animate={true}\n          viewport={innerViewport}\n          onViewportChanged={handleViewportChanged}\n          onViewportChange={handleViewportChange}\n        >\n          <TileLayer\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.basemaps.cartocdn.com/rastertiles/light_all/{z}/{x}/{y}.png\"\n          />\n          {isLoading ? (\n            <Loading />\n          ) : (\n            <>\n              {!isSearchingEvents && (\n                <HeatmapLayer\n                  points={heatmapData}\n                  longitudeExtractor={m => m[1]}\n                  latitudeExtractor={m => m[0]}\n                  gradient={heatmapGradient}\n                  minOpacity={0.25}\n                  intensityExtractor={m => parseFloat(m[2] / 3)}\n                  radius={30}\n                  blur={10}\n                  max={3}\n                />\n              )}\n\n              <EventsLayer events={eventsData} onEventClick={onEventClick} />\n            </>\n          )}\n        </Map>\n      ) : (\n        <Loading />\n      )}\n    </>\n  )\n}\nMapContainer.propTypes = {\n  isShowAllEvents: PropTypes.bool.isRequired,\n  isSearchingEvents: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  chartData: PropTypes.array,\n  allHeatmapData: PropTypes.object,\n  currentHeatmap: PropTypes.object,\n  currentEvents: PropTypes.object,\n  events: PropTypes.object,\n  mapRef: PropTypes.object,\n  searchQuery: PropTypes.object,\n  selectedHour: PropTypes.string.isRequired,\n  handleViewportChangeEnd: PropTypes.func.isRequired,\n  viewport: PropTypes.object,\n  onEventClick: PropTypes.func.isRequired,\n}\nexport default MapContainer\n","import styled from 'styled-components'\nimport {\n  darkGrey,\n  lightGreyTransparent,\n  lightGrey,\n  orange,\n} from '../../../config/styles'\nexport default styled.nav`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  @media (max-width: 650px) {\n    padding-top: 0;\n  }\n  .sidebar__close-button {\n    position: absolute;\n    top: 8rem;\n    cursor: pointer;\n    display: none;\n    align-self: flex-end;\n    width: 4rem;\n    height: 4rem;\n    margin-bottom: 2rem;\n    font-size: 1rem;\n    line-height: 1rem;\n    vertical-align: middle;\n    & svg path {\n      transition: fill 0.25s;\n      fill: ${lightGreyTransparent};\n    }\n    &:hover {\n      & svg path {\n        fill: ${darkGrey};\n      }\n    }\n    @media (max-width: 650px) {\n      display: block;\n    }\n  }\n  .sidebar__filters-toggle {\n    display: flex;\n    justify-content: flex-end;\n    align-items: flex-end;\n    height: 11rem;\n    @media (max-width: 650px) {\n      height: 15rem;\n    }\n  }\n  /* Toggle button styles */\n  .sidebar__toggle-active {\n    position: relative;\n    display: inline-block;\n    width: 4rem;\n    height: 2.2rem;\n    margin-left: 2rem;\n  }\n  .sidebar__toggle-active input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n  .slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: ${lightGreyTransparent};\n    box-shadow: 0px 2px 4px #bfc2c8;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n  }\n  .slider:before {\n    position: absolute;\n    content: '';\n    height: 1.5rem;\n    width: 1.5rem;\n    left: 0.3rem;\n    bottom: 0.4rem;\n    background-color: ${lightGrey};\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n  }\n  input:checked + .slider {\n    background-color: ${orange};\n  }\n  input:focus + .slider {\n    box-shadow: 0px 2px 4px #bfc2c8;\n  }\n  input:checked + .slider:before {\n    -webkit-transform: translateX(1.9rem);\n    -ms-transform: translateX(1.9rem);\n    transform: translateX(1.9rem);\n  }\n  /* Rounded slider */\n  .slider.round {\n    border-radius: 3.4rem;\n  }\n  .slider.round:before {\n    border-radius: 50%;\n  }\n  & .text_link {\n    padding-bottom: 1rem;\n    padding-left: 0.5rem;\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// images\nimport { Cross } from '../../../assets/svg/Cross'\n\n// styled\nimport Container from './SidebarNav.styled'\n\nfunction SidebarNav({ handleCheckboxChange, toggleSidebar }) {\n  return (\n    <>\n      <Container>\n        <button\n          className=\"sidebar__close-button\"\n          onClick={() => toggleSidebar()}\n        >\n          <Cross />\n        </button>\n        <div className=\"sidebar__filters-toggle\">\n          <p className=\"text text_p2\">Advanced Search</p>\n          <label className=\"sidebar__toggle-active\">\n            <input type=\"checkbox\" onChange={handleCheckboxChange} />\n            <span className=\"slider round\"></span>\n          </label>\n        </div>\n      </Container>\n    </>\n  )\n}\nSidebarNav.propTypes = {\n  handleCheckboxChange: PropTypes.func.isRequired,\n  toggleSidebar: PropTypes.func.isRequired,\n}\n\nexport default SidebarNav\n","import { badgeOrange, orange } from '../../config/styles'\n\nimport styled from 'styled-components'\n\nexport default styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  & .chartstat__nav {\n    display: flex;\n    justify-content: space-between;\n  }\n  & .chartstat__label {\n    display: inline-block;\n    padding: 4px;\n    border-radius: 0.5rem;\n    color: ${orange};\n    background-color: ${badgeOrange};\n  }\n`\n","import { badgeOrange, orange, lightGrey } from '../../config/styles'\n\nimport styled from 'styled-components'\n\nexport default styled.button`\n  display: block;\n  margin-left: 1rem;\n  background-color: ${orange};\n  border-radius: 2rem;\n  color: #fff;\n  font-weight: 600;\n  letter-spacing: 0.5px;\n  padding: 0.4rem 0.8rem;\n  box-shadow: 0px 4px 3px ${lightGrey};\n  cursor: pointer;\n  transition-duration: 0.25s;\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.08), 0 2px 8px rgba(0, 0, 0, 0.06),\n      0 0 16px rgba(0, 0, 0, 0.18);\n  }\n  background-color: ${({ type, isDemoPlay }) =>\n    type === 'period' && isDemoPlay ? `${badgeOrange}` : `${orange}`};\n  pointer-events: ${({ type, isDemoPlay }) =>\n    type === 'period' && isDemoPlay ? 'none' : `inherit`};\n  & .text {\n    color: ${({ type, isDemoPlay }) =>\n      type === 'period' && isDemoPlay ? '#C5CDD9' : `#fff`};\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n//styled\nimport Button from './ChartStatButton.styled'\n\nexport default function ChartStatButton({\n  isDemoPlay,\n  onClick,\n  type,\n  children,\n}) {\n  return (\n    <Button type={type} onClick={onClick} isDemoPlay={isDemoPlay}>\n      <span className=\"text text_light text_s2\">{children}</span>\n    </Button>\n  )\n}\nChartStatButton.propTypes = {\n  isDemoPlay: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  children: PropTypes.string.isRequired,\n}\n","import ChartStatStyled from './ChartStat.styled'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport moment from 'moment'\n\n// components\nimport ChartStatButton from '../../components/Button/ChartStatButton.jsx'\n\nfunction ChartStat({\n  isDemoPlay,\n  handleDemoPlay,\n  handleDemoStop,\n  handleSelectAll,\n  selectedHour,\n}) {\n  return (\n    <ChartStatStyled>\n      <div>\n        <p className=\"title title_h5\">Timeline</p>\n      </div>\n      <div className=\"chartstat__nav\">\n        <button className=\"chartstat__nav-item\">\n          Selected time:{' '}\n          <span className=\"chartstat__label\">\n            {selectedHour ? moment.unix(selectedHour).format('HH:mm') : `none`}\n          </span>\n        </button>\n        {isDemoPlay ? (\n          <ChartStatButton type=\"play\" onClick={handleDemoStop}>\n            Stop timeline\n          </ChartStatButton>\n        ) : (\n          <ChartStatButton onClick={handleDemoPlay}>\n            Play timeline\n          </ChartStatButton>\n        )}\n        <ChartStatButton\n          type=\"period\"\n          isDemoPlay={isDemoPlay}\n          onClick={handleSelectAll}\n        >\n          All period\n        </ChartStatButton>\n      </div>\n    </ChartStatStyled>\n  )\n}\nChartStat.propTypes = {\n  isDemoPlay: PropTypes.bool,\n  handleDemoPlay: PropTypes.func,\n  handleDemoStop: PropTypes.func,\n  handleSelectAll: PropTypes.func,\n  selectedHour: PropTypes.string,\n}\nexport default ChartStat\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: white;\n  z-index: 100;\n  @media (max-width: 1175px) {\n    display: none;\n  }\n`\n","import styled from 'styled-components'\nimport {\n  lightGrey,\n  chartLightGrey,\n  badgeOrange,\n  orange,\n} from '../../config/styles'\n\nexport default styled.div`\n  box-sizing: border-box;\n  padding: 1.5rem;\n  background-color: #fff;\n  border: 1px solid ${lightGrey};\n  border-radius: 0.5rem;\n  & .chart__tooltip-text_main {\n    font-family: 'Open-Sans-Bold', sans-serif;\n    margin-bottom: 1rem;\n  }\n  & .chart__tooltip-label {\n    display: inline-block;\n    padding: 4px;\n    border-radius: 0.5rem;\n  }\n  & .chart__tooltip-label_events {\n    background-color: ${badgeOrange};\n    color: ${orange};\n  }\n  & .chart__tooltip-label_posts {\n    background-color: ${chartLightGrey};\n  }\n`\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport moment from 'moment'\n\n// styled\nimport Container from './CustomTooltip.styled'\n\nconst CustomTooltip = ({ active, label, payload }) => {\n  if (active) {\n    return (\n      <Container>\n        <p className=\"text text_p1 chart__tooltip-text_main\">{`Time: ${moment\n          .unix(label)\n          .format('HH:mm')}`}</p>\n        <p className=\"text text_p2 chart__tooltip-text\">\n          Events for hour:{'  '}\n          <span className=\"text_p2-bold chart__tooltip-label chart__tooltip-label_events\">{`${payload[1].value}`}</span>\n        </p>\n        <p className=\"text text_p2 chart__tooltip-text\">\n          Posts for hour:{'  '}\n          <span className=\"text_p2-bold chart__tooltip-label chart__tooltip-label_posts\">{`${payload[0].value}`}</span>\n        </p>\n      </Container>\n    )\n  }\n  return null\n}\nCustomTooltip.propTypes = {\n  active: PropTypes.bool,\n  label: PropTypes.number,\n  payload: PropTypes.array,\n}\nexport default CustomTooltip\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport {\n  Bar,\n  BarChart,\n  Cell,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n} from 'recharts'\n\n// components\nimport ChartStat from '../../components/ChartStat/ChartStat.jsx'\nimport Container from './Chart.styled'\nimport CustomTooltip from '../../components/CustomTooltip/CustomTooltip.jsx'\n\n// styles\nimport {\n  chartDarkGrey,\n  chartLightGrey,\n  grey,\n  lightOrange,\n  orange,\n} from '../../config/styles'\n\nfunction Chart({\n  chartData,\n  fetchData,\n  isDemoPlay,\n  isShowAllEvents,\n  highlightedHour,\n  playDemo,\n  selectedDate,\n  selectedHour,\n  setHighlightedHour,\n  setSelectedHour,\n  stopDemo,\n  toggleAllEvents,\n}) {\n  const handleEnter = d => {\n    setHighlightedHour(d.time)\n  }\n  const handleMouseLeave = d => {\n    setHighlightedHour(null)\n  }\n  const handleClick = d => {\n    if (isDemoPlay) {\n      stopDemo()\n    }\n    setSelectedHour(d.time === selectedHour ? null : d.time)\n    fetchData(d.time)\n  }\n  const handleDemoPlay = () => {\n    playDemo()\n  }\n  const handleDemoStop = () => {\n    stopDemo()\n  }\n  const handleSelectAll = () => {\n    toggleAllEvents(chartData)\n  }\n  const calculateHeight = e => {\n    if (e > 0) {\n      return e * 0.5\n    }\n  }\n  return (\n    <Container>\n      {chartData ? (\n        <>\n          <ChartStat\n            chartData={chartData}\n            selectedHour={selectedHour}\n            selectedDate={selectedDate}\n            handleDemoStop={handleDemoStop}\n            handleDemoPlay={handleDemoPlay}\n            handleSelectAll={handleSelectAll}\n            isDemoPlay={isDemoPlay}\n          />\n          <ResponsiveContainer width=\"100%\" height={210}>\n            <BarChart\n              data={chartData}\n              margin={{\n                top: 20,\n                right: 0,\n                left: 0,\n                bottom: 5,\n              }}\n              onMouseLeave={handleMouseLeave}\n            >\n              <Tooltip cursor={false} content={<CustomTooltip />} />\n              <XAxis\n                dataKey=\"time\"\n                stroke={grey}\n                tickLine={false}\n                interval={2}\n                tickFormatter={tick => `${moment.unix(tick).format('HH')}`}\n              />\n              <Bar\n                dataKey=\"posts\"\n                stackId=\"a\"\n                onMouseEnter={handleEnter}\n                onClick={handleClick}\n              >\n                {chartData.map((d, index) => (\n                  <Cell\n                    cursor=\"pointer\"\n                    width={10}\n                    fill={\n                      isShowAllEvents\n                        ? chartDarkGrey\n                        : d.time === highlightedHour\n                        ? chartDarkGrey\n                        : d.time === Number(selectedHour)\n                        ? chartDarkGrey\n                        : chartLightGrey\n                    }\n                    key={`cell-${index}`}\n                  />\n                ))}\n              </Bar>\n              <Bar\n                dataKey=\"events\"\n                stackId=\"a\"\n                onMouseEnter={handleEnter}\n                onClick={handleClick}\n                radius={[0, 0, 0, 0]}\n              >\n                {chartData.map((d, index) => (\n                  <Cell\n                    width={10}\n                    height={calculateHeight(d.events)}\n                    cursor=\"pointer\"\n                    fill={\n                      isShowAllEvents\n                        ? orange\n                        : d.time === highlightedHour\n                        ? orange\n                        : d.time === Number(selectedHour)\n                        ? orange\n                        : lightOrange\n                    }\n                    key={`cell-${index}`}\n                  />\n                ))}\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </>\n      ) : null}\n    </Container>\n  )\n}\nChart.propTypes = {\n  chartData: PropTypes.array,\n  fetchData: PropTypes.func,\n  isDemoPlay: PropTypes.bool,\n  isShowAllEvents: PropTypes.bool,\n  playDemo: PropTypes.func,\n  setHighlightedHour: PropTypes.func,\n  setSelectedHour: PropTypes.func,\n  selectedDate: PropTypes.number,\n  selectedHour: PropTypes.string,\n  stopDemo: PropTypes.func,\n  toggleAllEvents: PropTypes.func,\n}\nexport default Chart\n","import createImmutableSelector from 'create-immutable-selector'\nimport { connect } from 'react-redux'\n\n// selectors\nimport {\n  chartDataSelector,\n  selectedHourSelector,\n  selectedDateSelector,\n} from '../../reducers/dataReducer'\nimport {\n  isDemoPlaySelector,\n  isShowAllEventsSelector,\n} from '../../reducers/uiReducer'\n\n// actions\nimport {\n  toggleAllEvents,\n  playDemo,\n  stopDemo,\n  setHighlightedHour,\n  fetchData,\n} from '../../actions/uiActions'\nimport { setSelectedHour } from '../../actions/dataActions'\n\nimport Chart from './Chart.jsx'\n\nconst mapStateToProps = createImmutableSelector(\n  chartDataSelector,\n  isDemoPlaySelector,\n  isShowAllEventsSelector,\n  selectedDateSelector,\n  selectedHourSelector,\n  (chartData, isDemoPlay, isShowAllEvents, selectedDate, selectedHour) => ({\n    chartData,\n    isDemoPlay,\n    isShowAllEvents,\n    selectedDate,\n    selectedHour,\n  })\n)\nconst mapDispatchToProps = dispatch => ({\n  fetchData: hour => dispatch(fetchData(hour)),\n  setHighlightedHour: hour => dispatch(setHighlightedHour(hour)),\n  setSelectedHour: hour => dispatch(setSelectedHour(hour)),\n  playDemo: () => dispatch(playDemo()),\n  stopDemo: () => dispatch(stopDemo()),\n  toggleAllEvents: (chartData, bounds) =>\n    dispatch(toggleAllEvents(chartData, bounds)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart)\n","import styled from 'styled-components'\nimport { darkGrey, orange } from '../../config/styles'\nexport default styled.div`\n  @media (min-width: 1175px) {\n    display: none;\n  }\n  .rangeslider-horizontal {\n    height: 1rem;\n    outline: 0;\n  }\n  .rangeslider,\n  .rangeslider .rangeslider__fill {\n    display: block;\n    box-shadow: none;\n    outline: 0;\n  }\n  .rangeslider-horizontal .rangeslider__fill {\n    height: 100%;\n    background-color: ${orange};\n    outline: 0;\n  }\n  .rangeslider-horizontal .rangeslider__handle:after {\n    content: ' ';\n    position: absolute;\n    width: 0;\n    height: 0;\n    box-shadow: 0;\n    outline: 0;\n  }\n  .rangeslider .rangeslider__handle {\n    box-shadow: none;\n  }\n  .rangeslider__handle-label {\n    position: relative;\n  }\n  .rangeslider-horizontal .rangeslider__handle {\n    width: 1.5rem;\n    height: 1.5rem;\n    border-radius: 50%;\n    top: 50%;\n    transform: translate3d(-50%, -50%, 0);\n    outline: 0;\n  }\n  .rangeslider-horizontal .rangeslider__handle-tooltip {\n    top: -3.5rem;\n    background-color: transparent;\n    color: ${darkGrey};\n  }\n  .rangeslider-horizontal .rangeslider__handle-tooltip {\n    background-color: none !important;\n    &:after {\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 8px solid transparent !important;\n      left: 50%;\n      bottom: -7px;\n      transform: translate3d(-50%, 0, 0);\n    }\n  }\n  .rangeslider__placeholder {\n    display: block;\n    box-shadow: none;\n    outline: 0;\n    width: 100%;\n    height: 10px;\n    border-radius: 10px;\n    margin: 2rem 0;\n    position: relative;\n    background: #e6e6e6;\n    touch-action: none;\n    animation-duration: 1.5s;\n    animation-fill-mode: forwards;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n    animation-name: placeholderAnimate;\n    background: linear-gradient(to right, #feefec 2%, #ff8c69 18%, #feefec 33%);\n    background-size: 1300px; /* Animation Area */\n  }\n  @keyframes placeholderAnimate {\n    0% {\n      background-position: -650px 0;\n    }\n    100% {\n      background-position: 650px 0;\n    }\n  }\n`\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport Slider from 'react-rangeslider'\nimport 'react-rangeslider/lib/index.css'\n\n// styled\nimport Container from './RangeSlider.styled'\n\nfunction RangeSlider({\n  chartData,\n  isLoading,\n  setSelectedHour,\n  selectedHour,\n  fetchData,\n}) {\n  const [sliderPosition, setSliderPosition] = useState(selectedHour)\n\n  useEffect(() => {\n    setSliderPosition(selectedHour)\n  }, [selectedHour])\n\n  const handleChangeComplete = () => {\n    setSliderPosition(sliderPosition)\n    setSelectedHour(sliderPosition)\n    fetchData(sliderPosition)\n  }\n  const handleChangeHorizontal = value => {\n    setSliderPosition(value)\n  }\n  const formatTime = value => moment.unix(value).format('HH')\n\n  if (isLoading) {\n    return (\n      <Container>\n        <div className=\"rangeslider__placeholder\" />\n      </Container>\n    )\n  }\n\n  return (\n    <Container>\n      <Slider\n        min={chartData[0].time}\n        max={chartData[23].time}\n        step={3600}\n        value={Number(sliderPosition)}\n        format={formatTime}\n        tooltip={true}\n        onChange={handleChangeHorizontal}\n        onChangeComplete={handleChangeComplete}\n      />\n    </Container>\n  )\n}\nRangeSlider.propTypes = {\n  chartData: PropTypes.array.isRequired,\n  setSelectedHour: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n}\n\nexport default RangeSlider\n","import createImmutableSelector from 'create-immutable-selector'\nimport { connect } from 'react-redux'\n\n// selectors\nimport {\n  chartDataSelector,\n  selectedHourSelector,\n} from '../../reducers/dataReducer'\nimport { isLoadingSelector } from '../../reducers/uiReducer'\n\n// actions\nimport { fetchData } from '../../actions/uiActions'\nimport { setSelectedHour } from '../../actions/dataActions'\n\nimport RangeSlider from './RangeSlider.jsx'\n\nconst mapStateToProps = createImmutableSelector(\n  chartDataSelector,\n  isLoadingSelector,\n  selectedHourSelector,\n  (chartData, isLoading, selectedHour) => ({\n    chartData,\n    isLoading,\n    selectedHour,\n  })\n)\nconst mapDispatchToProps = dispatch => ({\n  fetchData: hour => dispatch(fetchData(hour)),\n  setSelectedHour: hour => dispatch(setSelectedHour(hour)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RangeSlider)\n","import styled from 'styled-components'\nimport { darkGrey, transparentBackground } from '../../config/styles'\n\nexport default styled.button`\n  display: block;\n  border-radius: 2rem;\n  letter-spacing: 0.5px;\n  padding: 0.4rem 0.8rem;\n  background: ${transparentBackground};\n  cursor: pointer;\n  transition-duration: 0.25s;\n  &:hover {\n    transform: translateY(-1.5px);\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.02), 0 2px 2px rgba(0, 0, 0, 0.0015),\n      0 0 4px rgba(0, 0, 0, 0.045);\n  }\n  .text {\n    color: ${darkGrey};\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n//styled\nimport Button from './ChartNavigationButton.styled'\n\nexport default function ChartStatButton({ onClick, type, children }) {\n  return (\n    <Button type={type} onClick={onClick}>\n      <span className=\"text text_s1\">{children}</span>\n    </Button>\n  )\n}\nChartStatButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  children: PropTypes.string.isRequired,\n}\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { DateSingleInput } from '@datepicker-react/styled'\nimport { ThemeProvider } from 'styled-components'\n\n// styles\nimport { datepickerStyles, xsDatepickerStyles } from '../../config/styles'\n\nfunction SingleDatepicker({ selectedDate, setSelectedDate, stateDate }) {\n  const [date, setDate] = useState(null)\n  const [showDatepicker, setShowDatepicker] = useState(false)\n  const [position, setPosition] = useState('top')\n  const [styles, setStyles] = useState(datepickerStyles)\n\n  useEffect(() => {\n    if (window.innerWidth < 1180) {\n      setPosition('bottom')\n    }\n    if (window.innerWidth < 500) {\n      setStyles(xsDatepickerStyles)\n    }\n  }, [])\n  useEffect(() => {\n    if (stateDate) {\n      setDate(new Date(stateDate * 1000))\n    }\n  }, [stateDate])\n\n  const handleDateChange = ({ date, showDatepicker }) => {\n    setDate(date)\n    setShowDatepicker(showDatepicker)\n    setSelectedDate(date)\n  }\n  return (\n    <ThemeProvider theme={styles}>\n      <DateSingleInput\n        onDateChange={data => handleDateChange(data)}\n        onFocusChange={focusedInput => {\n          setShowDatepicker(focusedInput)\n        }}\n        date={date}\n        showDatepicker={showDatepicker}\n        displayFormat=\"dd.MM.yyyy\"\n        minBookingDate={new Date('January 01, 2019 00:00:00')}\n        initialVisibleMonth={new Date(selectedDate * 1000)}\n        placement={position}\n      />\n    </ThemeProvider>\n  )\n}\nSingleDatepicker.propTypes = {\n  selectedDate: PropTypes.number,\n  setSelectedDates: PropTypes.func,\n  stateDate: PropTypes.number,\n}\nexport default SingleDatepicker\n","import styled from 'styled-components'\nexport default styled.div`\n  padding: 3rem 0 2rem 0;\n  background-color: #ffffff;\n  .title_sidebar {\n    font-size: 2.3rem;\n    letter-spacing: 0;\n  }\n  @media (max-width: 800px) {\n    font-size: 2.1rem;\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// styled\nimport Container from './SidebarTitle.styled'\n\nfunction SidebarTitle({ time, events }) {\n  return (\n    <Container>\n      <h2 className=\"title title_h2 title_sidebar\">\n        {`${events === null ? 0 : events} ${events === 1 ? 'event' : 'events'}`}{' '}\n        <span className=\"title title_h2 title_light title_sidebar\">\n          for {time}\n        </span>\n      </h2>\n    </Container>\n  )\n}\nSidebarTitle.propTypes = {\n  time: PropTypes.string,\n  events: PropTypes.number,\n}\nexport default SidebarTitle\n","import styled from 'styled-components'\nimport { lightGrey } from '../../../config/styles'\n\nexport default styled.div`\n  .sidebar__filters {\n    display: flex;\n    padding-bottom: 2rem;\n    border-bottom: 1px solid ${lightGrey};\n    padding-top: 2rem;\n    & > div {\n      flex-basis: 50%;\n    }\n  }\n  .sidebar__button-container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: row;\n    width: 100%;\n    padding-bottom: 1.5rem;\n  }\n`\n","import React, { Suspense, lazy } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\n\n// containers\nimport Chart from '../../../containers/Chart'\nimport RangeSlider from '../../../containers/RangeSlider'\n\n// components\nimport Button from '../../Button/ChartNavigationButton.jsx'\nimport Datepicker from '../../DatePicker/SingleDatePicker.jsx'\nimport Input from '../../Input/Input.jsx'\nimport SidebarTitle from '../SidebarTitle/SidebarTitle.jsx'\nimport SelectInput from '../../Select/SelectInput.jsx'\n\n// styled\nimport Container from './SidebarBody.styled'\n\n// lazy\nconst SidebarSearch = lazy(() => import('../SidebarSearch/SidebarSearch.jsx'))\n\nfunction SidebarBody({\n  chartData,\n  currentTab,\n  setCurrentTab,\n  eventFilters,\n  isSearchingEvents,\n  isShowAllEvents,\n  handleDateChange,\n  handleSubmitValue,\n  handleSearchSubmit,\n  handleSelectOption,\n  handleSelectSearchQueryOption,\n  handleSubmitSearchQueryValue,\n  selectedDate,\n  selectedHour,\n  searchQueryFilters,\n  searchParametersStartDate,\n  searchParametersEndDate,\n}) {\n  const calculateEvents = () => {\n    if (chartData) {\n      if (isShowAllEvents) {\n        return chartData.reduce((accum, data) => (accum += data.events), 0)\n      } else {\n        const currentEventsNumber = chartData.find(\n          d => d.time === Number(selectedHour)\n        )\n        if (!currentEventsNumber) {\n          return null\n        } else {\n          return currentEventsNumber.events\n        }\n      }\n    } else {\n      return null\n    }\n  }\n  const handleBackClick = () => {\n    const prevDay = Number(parseInt(selectedDate) - 86400)\n    handleDateChange(prevDay)\n  }\n  const handleNextClick = () => {\n    const nextDay = Number(parseInt(selectedDate) + 86400)\n    handleDateChange(nextDay)\n  }\n  return (\n    <Container>\n      {!isSearchingEvents && chartData !== null && (\n        <>\n          <SidebarTitle\n            time={\n              isShowAllEvents\n                ? moment.unix(selectedDate).format('DD.MM.YYYY')\n                : moment.unix(selectedHour).format('HH:mm, DD.MM.YYYY')\n            }\n            events={calculateEvents()}\n          />\n          {window.innerWidth > 1175 ? <Chart /> : <RangeSlider />}\n          <div className=\"sidebar__button-container\">\n            <Button onClick={handleBackClick} type=\"back\">\n              {`<  ${moment\n                .unix(Number(selectedDate) - 86400)\n                .format('DD.MM')}`}\n            </Button>\n            <Button onClick={handleNextClick} type=\"back\">\n              {`${moment\n                .unix(Number(selectedDate) + 86400)\n                .format('DD.MM')}  >`}\n            </Button>\n          </div>\n          <Input\n            value={eventFilters.get('keyword')}\n            type=\"multiply\"\n            submitValue={handleSubmitValue}\n          />\n          <div className=\"sidebar__filters\">\n            <SelectInput\n              placeholder=\"Sort by:\"\n              value={eventFilters.get('sortBy')}\n              options={[\n                { value: 'A - Z' },\n                { value: 'Popular' },\n                { value: 'Nearby' },\n                { value: 'By time' },\n              ]}\n              handleSelectOption={handleSelectOption}\n            />\n            <Datepicker\n              stateDate={selectedDate}\n              selectedDate={selectedDate}\n              setSelectedDate={handleDateChange}\n            />\n          </div>\n        </>\n      )}\n      <Suspense fallback={<div>Loading...</div>}>\n        <SidebarSearch\n          currentTab={currentTab}\n          setCurrentTab={setCurrentTab}\n          display={isSearchingEvents}\n          selectedDate={selectedDate}\n          handleSearchSubmit={handleSearchSubmit}\n          handleSelectSearchQueryOption={handleSelectSearchQueryOption}\n          handleSubmitSearchQueryValue={handleSubmitSearchQueryValue}\n          searchQueryFilters={searchQueryFilters}\n          searchParametersStartDate={searchParametersStartDate}\n          searchParametersEndDate={searchParametersEndDate}\n        />\n      </Suspense>\n    </Container>\n  )\n}\nSidebarBody.propTypes = {\n  chartData: PropTypes.array,\n  currentTab: PropTypes.string.isRequired,\n  setCurrentTab: PropTypes.func.isRequired,\n  eventFilters: PropTypes.object,\n  isSearchingEvents: PropTypes.bool.isRequired,\n  isShowAllEvents: PropTypes.bool.isRequired,\n  handleDateChange: PropTypes.func.isRequired,\n  handleSubmitValue: PropTypes.func.isRequired,\n  handleSearchSubmit: PropTypes.func.isRequired,\n  handleSelectOption: PropTypes.func.isRequired,\n  handleSelectSearchQueryOption: PropTypes.func.isRequired,\n  handleSubmitSearchQueryValue: PropTypes.func.isRequired,\n  selectedDate: PropTypes.number,\n  selectedHour: PropTypes.number,\n  searchQueryFilters: PropTypes.object.isRequired,\n  searchParametersStartDate: PropTypes.number,\n  searchParametersEndDate: PropTypes.number,\n}\nexport default SidebarBody\n","import styled from 'styled-components'\nexport default styled.div`\n  .arrow {\n    display: block;\n  }\n  .menu {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    .arrow {\n      display: none !important;\n    }\n    .menu {\n      display: block;\n    }\n  }\n`\n","import React from 'react'\n// styled\nimport ToggleMenuStyled from './ToggleMenu.styled'\nexport function ToggleMenu() {\n  return (\n    <ToggleMenuStyled>\n      <svg\n        className=\"arrow\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 492 492\"\n        width=\"16px\"\n        height=\"18px\"\n      >\n        <g>\n          <g>\n            <g>\n              <path\n                d=\"M198.608,246.104L382.664,62.04c5.068-5.056,7.856-11.816,7.856-19.024c0-7.212-2.788-13.968-7.856-19.032l-16.128-16.12    C361.476,2.792,354.712,0,347.504,0s-13.964,2.792-19.028,7.864L109.328,227.008c-5.084,5.08-7.868,11.868-7.848,19.084    c-0.02,7.248,2.76,14.028,7.848,19.112l218.944,218.932c5.064,5.072,11.82,7.864,19.032,7.864c7.208,0,13.964-2.792,19.032-7.864    l16.124-16.12c10.492-10.492,10.492-27.572,0-38.06L198.608,246.104z\"\n                data-original=\"#000000\"\n                className=\"active-path\"\n                data-old_color=\"#000000\"\n                fill=\"#8F9BB3\"\n              />\n            </g>\n          </g>\n        </g>{' '}\n      </svg>\n      <svg\n        width=\"18\"\n        height=\"12\"\n        viewBox=\"0 0 18 12\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"menu\"\n      >\n        <path d=\"M0 12H18V10H0V12ZM0 7H18V5H0V7ZM0 0V2H18V0H0Z\" fill=\"black\" />\n      </svg>\n    </ToggleMenuStyled>\n  )\n}\n","import styled from 'styled-components'\n\nexport default styled.div`\n  position: relative;\n  transition: all 0.3s;\n  flex-basis: 30%;\n  min-width: 30%;\n  margin-top: 7rem;\n  /* Sidebar container styles */\n  &.sidebar-container_active {\n    margin-left: 0;\n  }\n  &.sidebar-container_closed {\n    margin-left: -30%;\n  }\n  @media (max-width: 1300px) {\n    flex-basis: 40%;\n    min-width: 40%;\n    &.sidebar-container_active {\n      margin-left: 0;\n    }\n    &.sidebar-container_closed {\n      margin-left: -40%;\n    }\n  }\n  @media (max-width: 880px) {\n    flex-basis: 50%;\n    min-width: 50%;\n    &.sidebar-container_active {\n      margin-left: 0;\n    }\n    &.sidebar-container_closed {\n      margin-left: -50%;\n    }\n  }\n  @media (max-width: 650px) {\n    position: fixed;\n    flex-basis: 100%;\n    min-width: 100%;\n    z-index: 2;\n    &.sidebar-container_active {\n      margin-left: 0;\n    }\n    &.sidebar-container_closed {\n      margin-left: -100%;\n    }\n  }\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  transition: all 0.3s;\n  min-height: 35%;\n  height: 100vh;\n  overflow: scroll;\n  .sidebar-fixed {\n    position: fixed;\n    top: 1rem;\n    left: 0;\n    background-color: #ffffff;\n    z-index: 1;\n    width: 30%;\n    padding: 3rem;\n    padding-top: 0;\n    transition: all 0.3s;\n\n    &.sidebar-fixed_active {\n      left: 0;\n    }\n    &.sidebar-fixed_closed {\n      left: -30%;\n    }\n    @media (max-width: 1300px) {\n      width: 40%;\n      &.sidebar-fixed_active {\n        left: 0;\n      }\n      &.sidebar-fixed_closed {\n        left: -40%;\n      }\n    }\n    @media (max-width: 880px) {\n      width: 50%;\n      &.sidebar-fixed_active {\n        left: 0;\n      }\n      &.sidebar-fixed_closed {\n        left: -50%;\n      }\n    }\n    @media (max-width: 880px) {\n      width: 50%;\n      &.sidebar-fixed_active {\n        left: 0;\n      }\n      &.sidebar-fixed_closed {\n        left: -50%;\n      }\n    }\n    @media (max-width: 650px) {\n      width: 100%;\n      &.sidebar-fixed_active {\n        left: 0;\n      }\n      &.sidebar-fixed_closed {\n        left: -100%;\n      }\n    }\n  }\n`\n","import styled from 'styled-components'\nimport { lightGrey } from '../../config/styles'\nexport default styled.button`\n  position: absolute;\n  cursor: pointer;\n  top: 50%;\n  right: -3rem;\n  z-index: 2;\n  width: 3rem;\n  height: 8rem;\n  border-radius: 0px 10px 10px 0px;\n  padding: 0;\n  border: none;\n  font: inherit;\n  color: inherit;\n  outline: 0;\n  background-color: #ffffff;\n  transition: all 0.3s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-left: 1px solid ${lightGrey};\n  & svg {\n    width: 1.8rem;\n    height: 1.8rem;\n    padding-right: 2px;\n  }\n  &.toggle-button_closed {\n    & svg {\n      transform: scale(-1, 1);\n    }\n  }\n  @media (max-width: 650px) {\n    display: none;\n    justify-content: center;\n    align-items: center;\n    top: 2.5%;\n    right: -7.5rem;\n    width: 5rem;\n    height: 5rem;\n    border-radius: 50%;\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.12), 0 2px 8px rgba(0, 0, 0, 0.06),\n      0 0 16px rgba(0, 0, 0, 0.24);\n    &.toggle-button_closed {\n      display: flex;\n    }\n  }\n`\n","import React, { Suspense, lazy, useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\n\n// components\nimport SidebarNav from '../../components/Sidebar/SidebarNav/SidebarNav.jsx'\nimport SidebarBody from '../../components/Sidebar/SidebarBody/SidebarBody.jsx'\n\n// images\nimport { ToggleMenu } from '../../assets/svg/ToggleMenu'\n\n// styled\nimport SidebarContainer from './SidebarContainer.styled'\nimport Container from './Sidebar.styled'\nimport ToggleButton from '../../components/ToggleButton/ToggleButton'\n\n// utils\nimport { useWindowWidth } from '../../utils/hooks'\n\n// lazy\nconst EventsList = lazy(() =>\n  import('../../components/Sidebar/SidebarEventsList/SidebarEventsList.jsx')\n)\n\nfunction Sidebar({\n  allEventsData,\n  chartData,\n  currentEvents,\n  currentUserLocation,\n  events,\n  isLoading,\n  isPopupOpen,\n  isSearchingEvents,\n  isSidebarOpen,\n  isShowAllEvents,\n  toggleSidebar,\n  searchQuery,\n  searchQueryFilters,\n  searchParameters,\n  searchParametersStartDate,\n  searchParametersEndDate,\n  selectedHour,\n  selectedDate,\n  setNewDate,\n  setHighlightedEvent,\n  setSelectedEvent,\n  setSearchParameters,\n  setSearchEvents,\n  onCardClick,\n  setEventFilter,\n  setSearchQueryFilter,\n  eventFilters,\n  viewport,\n  mapRef,\n}) {\n  const [currentTab, setCurrentTab] = useState('Search')\n  const fixedSidebarRef = useRef()\n  const [sidebarHeight, setSidebarHeight] = useState()\n  const width = useWindowWidth()\n  useEffect(() => {\n    if (fixedSidebarRef.current) {\n      setSidebarHeight(fixedSidebarRef.current.offsetHeight)\n    }\n  }, [chartData, currentTab, isSearchingEvents, searchParameters, width])\n\n  const handleDateChange = data => {\n    if (data.startDate) {\n      setNewDate(moment(data.startDate).unix())\n    } else {\n      setNewDate(data)\n    }\n  }\n  const handleCheckboxChange = () => {\n    setSearchEvents()\n  }\n  const handleEventHover = id => {\n    setHighlightedEvent(id)\n  }\n  const handleEventClick = id => {\n    let event\n    if (isShowAllEvents) {\n      event = allEventsData.find(obj => {\n        return obj.getIn(['properties', 'id']) === id\n      })\n    } else if (isSearchingEvents) {\n      event = searchQuery.find(obj => {\n        return obj.getIn(['properties', 'id']) === id\n      })\n    } else {\n      event = currentEvents.find(obj => {\n        return obj.getIn(['properties', 'id']) === id\n      })\n    }\n    const eventCoordinates = event.getIn(['geometry', 'coordinates']).toJS()\n    mapRef.current.leafletElement.flyTo(\n      [eventCoordinates[0], eventCoordinates[1]],\n      16\n    )\n    if (window.innerWidth < 600) {\n      toggleSidebar()\n    }\n    setSelectedEvent(id)\n  }\n  const handleSelectOption = option => {\n    const parameter = {\n      type: 'sort',\n      parameter: option,\n    }\n    setEventFilter(parameter)\n  }\n  const handleSubmitValue = value => {\n    const parameter = {\n      type: 'keyword',\n      parameter: value,\n    }\n    setEventFilter(parameter)\n  }\n  const handleSelectSearchQueryOption = option => {\n    const parameter = {\n      type: 'sort',\n      parameter: option,\n    }\n    setSearchQueryFilter(parameter)\n  }\n  const handleSubmitSearchQueryValue = value => {\n    const parameter = {\n      type: 'keyword',\n      parameter: value,\n    }\n    setSearchQueryFilter(parameter)\n  }\n  const handleSearchSubmit = params => {\n    setSearchParameters(params)\n  }\n  return (\n    <SidebarContainer\n      className={\n        isSidebarOpen ? 'sidebar-container_active' : 'sidebar-container_closed'\n      }\n    >\n      <Container>\n        {window.innerWidth < 600 && isPopupOpen ? null : (\n          <ToggleButton\n            className={\n              isSidebarOpen ? 'toggle-button_active' : 'toggle-button_closed'\n            }\n            in={isSidebarOpen.toString()}\n            onClick={() => toggleSidebar()}\n          >\n            <ToggleMenu />\n          </ToggleButton>\n        )}\n        <div\n          className={\n            isSidebarOpen\n              ? 'sidebar-fixed sidebar-fixed_active'\n              : 'sidebar-fixed sidebar-fixed_closed'\n          }\n          ref={fixedSidebarRef}\n        >\n          <SidebarNav\n            toggleSidebar={toggleSidebar}\n            handleCheckboxChange={handleCheckboxChange}\n          />\n          <SidebarBody\n            chartData={chartData}\n            currentTab={currentTab}\n            setCurrentTab={setCurrentTab}\n            eventFilters={eventFilters}\n            isSearchingEvents={isSearchingEvents}\n            isShowAllEvents={isShowAllEvents}\n            handleDateChange={handleDateChange}\n            handleSearchSubmit={handleSearchSubmit}\n            handleSubmitValue={handleSubmitValue}\n            handleSelectOption={handleSelectOption}\n            handleSelectSearchQueryOption={handleSelectSearchQueryOption}\n            handleSubmitSearchQueryValue={handleSubmitSearchQueryValue}\n            selectedDate={Number(selectedDate)}\n            selectedHour={Number(selectedHour)}\n            searchQueryFilters={searchQueryFilters}\n            searchParametersStartDate={searchParametersStartDate}\n            searchParametersEndDate={searchParametersEndDate}\n          />\n        </div>\n\n        {fixedSidebarRef.current && (\n          <Suspense fallback={<div>Loading...</div>}>\n            <EventsList\n              chartData={chartData}\n              currentEvents={currentEvents}\n              currentUserLocation={currentUserLocation}\n              events={events}\n              eventFilters={eventFilters}\n              isSearchingEvents={isSearchingEvents}\n              isSidebarOpen={isSidebarOpen}\n              isShowAllEvents={isShowAllEvents}\n              isLoading={isLoading}\n              searchQuery={searchQuery}\n              searchQueryFilters={searchQueryFilters}\n              searchParameters={searchParameters}\n              handleEventClick={handleEventClick}\n              handleEventHover={handleEventHover}\n              onCardClick={onCardClick}\n              mapRef={mapRef}\n              sidebarHeight={sidebarHeight}\n              viewport={viewport}\n            />\n          </Suspense>\n        )}\n      </Container>\n    </SidebarContainer>\n  )\n}\n\nSidebar.propTypes = {\n  allEventsData: PropTypes.object,\n  chartData: PropTypes.array,\n  currentEvents: PropTypes.object,\n  currentUserLocation: PropTypes.object,\n  events: PropTypes.object,\n  isLoading: PropTypes.bool.isRequired,\n  isPopupOpen: PropTypes.bool.isRequired,\n  isSearchingEvents: PropTypes.bool.isRequired,\n  isSidebarOpen: PropTypes.bool.isRequired,\n  isShowAllEvents: PropTypes.bool.isRequired,\n  toggleSidebar: PropTypes.func.isRequired,\n  searchQuery: PropTypes.object,\n  searchQueryFilters: PropTypes.object,\n  searchParameters: PropTypes.object,\n  setSearchParameters: PropTypes.func.isRequired,\n  searchParametersStartDate: PropTypes.number,\n  searchParametersEndDate: PropTypes.number,\n  selectedHour: PropTypes.string,\n  selectedDate: PropTypes.number,\n  setNewDate: PropTypes.func.isRequired,\n  setHighlightedEvent: PropTypes.func.isRequired,\n  setSelectedEvent: PropTypes.func.isRequired,\n  setSearchEvents: PropTypes.func.isRequired,\n  onCardClick: PropTypes.func.isRequired,\n  setEventFilter: PropTypes.func.isRequired,\n  setSearchQueryFilter: PropTypes.func.isRequired,\n  eventFilters: PropTypes.object,\n  viewport: PropTypes.object,\n  mapRef: PropTypes.object,\n}\n\nexport default Sidebar\n","import createImmutableSelector from 'create-immutable-selector'\nimport { connect } from 'react-redux'\n\nimport {\n  isPopupOpenSelector,\n  isSidebarOpenSelector,\n  isShowAllEventsSelector,\n  isSearchingEventsSelector,\n  isLoadingSelector,\n  errorSelector,\n} from '../../reducers/uiReducer'\nimport {\n  allEventsDataSelector,\n  chartDataSelector,\n  currentEventsSelector,\n  eventsSelector,\n  selectedHourSelector,\n  selectedDateSelector,\n  eventFiltersSelector,\n  searchQueryFiltersSelector,\n  searchQuerySelector,\n  searchParametersSelector,\n  searchParametersStartDateSelector,\n  searchParametersEndDateSelector,\n} from '../../reducers/dataReducer'\nimport {\n  currentUserLocationSelector,\n  viewportSelector,\n} from '../../reducers/mapReducer'\n\n// action\nimport {\n  toggleSidebar,\n  setHighlightedEvent,\n  setSelectedEvent,\n  setSearchEvents,\n} from '../../actions/uiActions'\nimport {\n  setEventFilter,\n  setNewDate,\n  setSearchParameters,\n  setSearchQueryFilter,\n} from '../../actions/dataActions'\n\nimport Sidebar from './Sidebar.jsx'\n\nconst mapStateToProps = createImmutableSelector(\n  allEventsDataSelector,\n  chartDataSelector,\n  currentEventsSelector,\n  currentUserLocationSelector,\n  eventsSelector,\n  isPopupOpenSelector,\n  isSidebarOpenSelector,\n  isShowAllEventsSelector,\n  selectedHourSelector,\n  selectedDateSelector,\n  eventFiltersSelector,\n  isSearchingEventsSelector,\n  searchQuerySelector,\n  searchParametersSelector,\n  isLoadingSelector,\n  viewportSelector,\n  errorSelector,\n  searchQueryFiltersSelector,\n  searchParametersStartDateSelector,\n  searchParametersEndDateSelector,\n  (\n    allEventsData,\n    chartData,\n    currentEvents,\n    currentUserLocation,\n    events,\n    isPopupOpen,\n    isSidebarOpen,\n    isShowAllEvents,\n    selectedHour,\n    selectedDate,\n    eventFilters,\n    isSearchingEvents,\n    searchQuery,\n    searchParameters,\n    isLoading,\n    viewport,\n    errors,\n    searchQueryFilters,\n    searchParametersStartDate,\n    searchParametersEndDate\n  ) => ({\n    allEventsData,\n    chartData,\n    currentEvents,\n    currentUserLocation,\n    events,\n    isPopupOpen,\n    isSidebarOpen,\n    isShowAllEvents,\n    selectedHour,\n    selectedDate,\n    eventFilters,\n    isSearchingEvents,\n    searchQuery,\n    searchParameters,\n    isLoading,\n    viewport,\n    errors,\n    searchQueryFilters,\n    searchParametersStartDate,\n    searchParametersEndDate,\n  })\n)\nconst mapDispatchToProps = dispatch => ({\n  toggleSidebar: () => dispatch(toggleSidebar()),\n  setNewDate: date => dispatch(setNewDate(date)),\n  setHighlightedEvent: id => dispatch(setHighlightedEvent(id)),\n  setSelectedEvent: id => dispatch(setSelectedEvent(id)),\n  setEventFilter: filter => dispatch(setEventFilter(filter)),\n  setSearchQueryFilter: filter => dispatch(setSearchQueryFilter(filter)),\n  setSearchParameters: params => dispatch(setSearchParameters(params)),\n  setSearchEvents: () => dispatch(setSearchEvents()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)\n","import styled from 'styled-components'\n\nexport default styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  overflow: hidden;\n  height: 100vh;\n  #mapId {\n    height: calc(100vh - 72px);\n    margin-top: 72px;\n    width: 100vw;\n    z-index: 1;\n  }\n  .marker {\n    width: 3rem !important;\n    height: 3rem !important;\n    will-change: transform, opacity, background;\n    animation: marker 0.3s cubic-bezier(0.62, 0.2, 0.87, 1.47);\n  }\n  .marker-inner {\n    position: relative;\n    width: 5rem !important;\n    height: 5rem !important;\n    border: 3px solid white;\n    border-radius: 50%;\n  }\n  .marker__description {\n    position: absolute;\n    top: 13%;\n    left: 84%;\n    z-index: -1;\n    background-color: hsla(0, 0%, 100%, 0.95);\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.12), 0 2px 8px rgba(0, 0, 0, 0.06),\n      0 0 16px rgba(0, 0, 0, 0.24);\n    border-radius: 0px 5px 5px 0px;\n    max-width: 15rem;\n    min-width: 7.5rem;\n    max-height: 3.7rem;\n    overflow: hidden;\n    padding: 0.8rem 0 0.8rem 1.3rem;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-align-items: center;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    -webkit-transition: 0.2s cubic-bezier(0.7, 0.2, 0.47, 0.2);\n    transition: 0.2s cubic-bezier(0.7, 0.2, 0.47, 0.2);\n    z-index: -10;\n    font-size: 1rem;\n    :hover {\n      background-color: rgba(247, 248, 249, 0.95);\n    }\n  }\n  @keyframes marker {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  .leaflet-overlay-pane {\n    z-index: 1 !important;\n  }\n  .leaflet-pane {\n    z-index: 0 !important;\n  }\n  .leaflet-top,\n  .leaflet-bottom {\n    z-index: 2 !important;\n  }\n  .leaflet-control {\n    z-index: 3 !important;\n  }\n  .leaflet-left {\n    left: unset !important;\n    right: 2rem !important;\n  }\n  .leaflet-top {\n    top: 1rem !important;\n  }\n`\n","import React, { useEffect, useRef, useState, lazy, Suspense } from 'react'\nimport PropTypes from 'prop-types'\nimport { useParams } from 'react-router-dom'\n\n// containers\nimport MapContainer from '../../components/Map/Map.jsx'\nimport Sidebar from '../Sidebar'\n\n// components\nimport Loading from '../../components/Loading/Loading.jsx'\n\n// styled\nimport Container from './MapPage.styled'\n\n// lazy\nconst Popup = lazy(() => import('../../components/Popup/Popup.jsx'))\n\nfunction MapPage(props) {\n  const {\n    setViewport,\n    currentCityId,\n    currentPopupData,\n    currentUserLocation,\n    isSidebarOpen,\n    isPopupOpen,\n    replace,\n    selectedDate,\n    setupMapFromHistory,\n    setBounds,\n    setCurrentUserLocation,\n    setSelectedEvent,\n    togglePopup,\n    toggleSidebar,\n    viewport,\n  } = props\n  // use refs to get mapbox bounds\n  const mapRef = useRef()\n  // react router hooks\n  let { city, topLeft, botRight, time } = useParams()\n\n  const [isMapStoreLoaded, setIsMapStoreLoaded] = useState(false)\n\n  useEffect(() => {\n    const config = { city, topLeft, botRight, time }\n    if (currentCityId === null) {\n      setupMapFromHistory(config)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  useEffect(() => {\n    if (viewport.toJS().center.length > 0) {\n      setIsMapStoreLoaded(true)\n    }\n    if (mapRef.current && !currentUserLocation) {\n      const pos = mapRef.current.leafletElement.locate()._renderer\n      const location = pos && pos._center\n      setCurrentUserLocation(location)\n    }\n  }, [currentUserLocation, setCurrentUserLocation, viewport])\n\n  const handleViewportChangeEnd = viewport => {\n    let bottomRight = [\n      Number(\n        mapRef.current.leafletElement.getBounds()._southWest.lat.toFixed(3)\n      ),\n      Number(\n        mapRef.current.leafletElement.getBounds()._southWest.lng.toFixed(3)\n      ),\n    ]\n    let topLeft = [\n      Number(\n        mapRef.current.leafletElement.getBounds()._northEast.lat.toFixed(3)\n      ),\n      Number(\n        mapRef.current.leafletElement.getBounds()._northEast.lng.toFixed(3)\n      ),\n    ]\n    setViewport(viewport)\n    setBounds({ topLeft, bottomRight })\n    replace(`/map/${currentCityId}/${topLeft}/${bottomRight}/${selectedDate}`)\n  }\n  const onEventClick = (id, postcodes) => {\n    if (window.innerWidth < 600) {\n      isSidebarOpen && toggleSidebar()\n    }\n    setSelectedEvent(id)\n    togglePopup(postcodes)\n  }\n  const closePopup = () => {\n    togglePopup()\n  }\n  return (\n    <Container>\n      {isMapStoreLoaded ? (\n        <>\n          <Sidebar\n            onCardClick={onEventClick}\n            viewport={viewport}\n            mapRef={mapRef}\n          />\n          <MapContainer\n            {...props}\n            mapRef={mapRef}\n            handleViewportChangeEnd={handleViewportChangeEnd}\n            onEventClick={onEventClick}\n          />\n        </>\n      ) : (\n        <Loading />\n      )}\n      {isPopupOpen ? (\n        <Suspense fallback={<Loading />}>\n          <Popup\n            isPopupOpen={isPopupOpen}\n            closePopup={closePopup}\n            data={currentPopupData}\n          />\n        </Suspense>\n      ) : null}\n    </Container>\n  )\n}\nMapPage.propTypes = {\n  allHeatmapData: PropTypes.object,\n  currentCityId: PropTypes.any,\n  currentHeatmap: PropTypes.object,\n  currentEvents: PropTypes.object,\n  currentPopupData: PropTypes.array,\n  events: PropTypes.object,\n  isSidebarOpen: PropTypes.bool.isRequired,\n  isShowAllEvents: PropTypes.bool.isRequired,\n  isPopupOpen: PropTypes.bool.isRequired,\n  isSearchingEvents: PropTypes.bool.isRequired,\n  replace: PropTypes.func.isRequired,\n  searchQuery: PropTypes.object,\n  selectedDate: PropTypes.any,\n  selectedHour: PropTypes.any,\n  selectedEvent: PropTypes.string,\n  setupMapFromHistory: PropTypes.func.isRequired,\n  setBounds: PropTypes.func.isRequired,\n  setSelectedEvent: PropTypes.func.isRequired,\n  togglePopup: PropTypes.func.isRequired,\n  toggleSidebar: PropTypes.func.isRequired,\n  viewport: PropTypes.object,\n}\n\nexport default MapPage\n","import createImmutableSelector from 'create-immutable-selector'\nimport { connect } from 'react-redux'\nimport { replace } from 'connected-react-router'\n\n// selectors\nimport {\n  isLoadingSelector,\n  isPopupOpenSelector,\n  isShowAllEventsSelector,\n  isSidebarOpenSelector,\n  isSearchingEventsSelector,\n} from '../../reducers/uiReducer'\nimport { viewportSelector } from '../../reducers/mapReducer'\nimport {\n  allHeatmapDataSelector,\n  chartDataSelector,\n  currentHeatmapSelector,\n  currentEventsSelector,\n  currentPopupDataSelector,\n  eventsSelector,\n  selectedHourSelector,\n  selectedDateSelector,\n  searchQuerySelector,\n} from '../../reducers/dataReducer'\nimport { currentCityIdSelector } from '../../reducers/cityReducer'\n\n// actions\nimport {\n  setViewport,\n  setBounds,\n  setCurrentUserLocation,\n} from '../../actions/mapActions'\nimport { setupMapFromHistory } from '../../actions/dataActions'\nimport {\n  fetchAllData,\n  togglePopup,\n  toggleSidebar,\n  setSelectedEvent,\n} from '../../actions/uiActions'\n\nimport MapPage from './MapPage.jsx'\n\nconst mapStateToProps = createImmutableSelector(\n  allHeatmapDataSelector,\n  chartDataSelector,\n  currentCityIdSelector,\n  currentHeatmapSelector,\n  currentEventsSelector,\n  eventsSelector,\n  isLoadingSelector,\n  isShowAllEventsSelector,\n  isSidebarOpenSelector,\n  selectedHourSelector,\n  selectedDateSelector,\n  viewportSelector,\n  isPopupOpenSelector,\n  isSearchingEventsSelector,\n  searchQuerySelector,\n  currentPopupDataSelector,\n  (\n    allHeatmapData,\n    chartData,\n    currentCityId,\n    currentHeatmap,\n    currentEvents,\n    events,\n    isLoading,\n    isShowAllEvents,\n    isSidebarOpen,\n    selectedHour,\n    selectedDate,\n    viewport,\n    isPopupOpen,\n    isSearchingEvents,\n    searchQuery,\n    currentPopupData\n  ) => ({\n    allHeatmapData,\n    chartData,\n    currentCityId,\n    currentHeatmap,\n    currentEvents,\n    events,\n    isLoading,\n    isShowAllEvents,\n    isSidebarOpen,\n    selectedHour,\n    selectedDate,\n    viewport,\n    isPopupOpen,\n    isSearchingEvents,\n    searchQuery,\n    currentPopupData,\n  })\n)\nconst mapDispatchToProps = dispatch => ({\n  fetchAllData: time => dispatch(fetchAllData(time)),\n  setupMapFromHistory: config => dispatch(setupMapFromHistory(config)),\n  replace: path => dispatch(replace(path)),\n  togglePopup: postcodes => dispatch(togglePopup(postcodes)),\n  toggleSidebar: () => dispatch(toggleSidebar()),\n  setBounds: bounds => dispatch(setBounds(bounds)),\n  setCurrentUserLocation: location =>\n    dispatch(setCurrentUserLocation(location)),\n  setSelectedEvent: id => dispatch(setSelectedEvent(id)),\n  setViewport: viewport => dispatch(setViewport(viewport)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapPage)\n"],"sourceRoot":""}