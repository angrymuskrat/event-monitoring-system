// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: data-storage/proto/data-storage.proto

package proto

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
	proto1 "github.com/angrymuskrat/event-monitoring-system/services/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// messages for push and select posts
type PushPostsRequest struct {
	Posts                []proto1.Post `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts"`
	CityId               string        `protobuf:"bytes,2,opt,name=cityId,proto3" json:"cityId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PushPostsRequest) Reset()         { *m = PushPostsRequest{} }
func (m *PushPostsRequest) String() string { return proto.CompactTextString(m) }
func (*PushPostsRequest) ProtoMessage()    {}
func (*PushPostsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{0}
}
func (m *PushPostsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PushPostsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PushPostsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PushPostsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPostsRequest.Merge(m, src)
}
func (m *PushPostsRequest) XXX_Size() int {
	return m.Size()
}
func (m *PushPostsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPostsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushPostsRequest proto.InternalMessageInfo

func (m *PushPostsRequest) GetPosts() []proto1.Post {
	if m != nil {
		return m.Posts
	}
	return nil
}

func (m *PushPostsRequest) GetCityId() string {
	if m != nil {
		return m.CityId
	}
	return ""
}

type PushPostsReply struct {
	Ids                  []int32  `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushPostsReply) Reset()         { *m = PushPostsReply{} }
func (m *PushPostsReply) String() string { return proto.CompactTextString(m) }
func (*PushPostsReply) ProtoMessage()    {}
func (*PushPostsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{1}
}
func (m *PushPostsReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PushPostsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PushPostsReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PushPostsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushPostsReply.Merge(m, src)
}
func (m *PushPostsReply) XXX_Size() int {
	return m.Size()
}
func (m *PushPostsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PushPostsReply.DiscardUnknown(m)
}

var xxx_messageInfo_PushPostsReply proto.InternalMessageInfo

func (m *PushPostsReply) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *PushPostsReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type SelectPostsRequest struct {
	Interval             proto1.SpatioTemporalInterval `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval"`
	CityId               string                        `protobuf:"bytes,2,opt,name=cityId,proto3" json:"cityId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *SelectPostsRequest) Reset()         { *m = SelectPostsRequest{} }
func (m *SelectPostsRequest) String() string { return proto.CompactTextString(m) }
func (*SelectPostsRequest) ProtoMessage()    {}
func (*SelectPostsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{2}
}
func (m *SelectPostsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SelectPostsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SelectPostsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SelectPostsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectPostsRequest.Merge(m, src)
}
func (m *SelectPostsRequest) XXX_Size() int {
	return m.Size()
}
func (m *SelectPostsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectPostsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SelectPostsRequest proto.InternalMessageInfo

func (m *SelectPostsRequest) GetInterval() proto1.SpatioTemporalInterval {
	if m != nil {
		return m.Interval
	}
	return proto1.SpatioTemporalInterval{}
}

func (m *SelectPostsRequest) GetCityId() string {
	if m != nil {
		return m.CityId
	}
	return ""
}

type SelectPostsReply struct {
	Posts                []proto1.Post `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts"`
	Err                  string        `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SelectPostsReply) Reset()         { *m = SelectPostsReply{} }
func (m *SelectPostsReply) String() string { return proto.CompactTextString(m) }
func (*SelectPostsReply) ProtoMessage()    {}
func (*SelectPostsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{3}
}
func (m *SelectPostsReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SelectPostsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SelectPostsReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SelectPostsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectPostsReply.Merge(m, src)
}
func (m *SelectPostsReply) XXX_Size() int {
	return m.Size()
}
func (m *SelectPostsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectPostsReply.DiscardUnknown(m)
}

var xxx_messageInfo_SelectPostsReply proto.InternalMessageInfo

func (m *SelectPostsReply) GetPosts() []proto1.Post {
	if m != nil {
		return m.Posts
	}
	return nil
}

func (m *SelectPostsReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

// messages for select aggr posts
type SelectAggrPostsRequest struct {
	Interval             proto1.SpatioHourInterval `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval"`
	CityId               string                    `protobuf:"bytes,2,opt,name=cityId,proto3" json:"cityId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SelectAggrPostsRequest) Reset()         { *m = SelectAggrPostsRequest{} }
func (m *SelectAggrPostsRequest) String() string { return proto.CompactTextString(m) }
func (*SelectAggrPostsRequest) ProtoMessage()    {}
func (*SelectAggrPostsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{4}
}
func (m *SelectAggrPostsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SelectAggrPostsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SelectAggrPostsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SelectAggrPostsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectAggrPostsRequest.Merge(m, src)
}
func (m *SelectAggrPostsRequest) XXX_Size() int {
	return m.Size()
}
func (m *SelectAggrPostsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectAggrPostsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SelectAggrPostsRequest proto.InternalMessageInfo

func (m *SelectAggrPostsRequest) GetInterval() proto1.SpatioHourInterval {
	if m != nil {
		return m.Interval
	}
	return proto1.SpatioHourInterval{}
}

func (m *SelectAggrPostsRequest) GetCityId() string {
	if m != nil {
		return m.CityId
	}
	return ""
}

type SelectAggrPostsReply struct {
	Posts                []proto1.AggregatedPost `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts"`
	Err                  string                  `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SelectAggrPostsReply) Reset()         { *m = SelectAggrPostsReply{} }
func (m *SelectAggrPostsReply) String() string { return proto.CompactTextString(m) }
func (*SelectAggrPostsReply) ProtoMessage()    {}
func (*SelectAggrPostsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{5}
}
func (m *SelectAggrPostsReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SelectAggrPostsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SelectAggrPostsReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SelectAggrPostsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectAggrPostsReply.Merge(m, src)
}
func (m *SelectAggrPostsReply) XXX_Size() int {
	return m.Size()
}
func (m *SelectAggrPostsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectAggrPostsReply.DiscardUnknown(m)
}

var xxx_messageInfo_SelectAggrPostsReply proto.InternalMessageInfo

func (m *SelectAggrPostsReply) GetPosts() []proto1.AggregatedPost {
	if m != nil {
		return m.Posts
	}
	return nil
}

func (m *SelectAggrPostsReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

// messages for pull timelines
type PullTimelineRequest struct {
	CityId               string   `protobuf:"bytes,1,opt,name=cityId,proto3" json:"cityId,omitempty"`
	Start                int64    `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	Finish               int64    `protobuf:"varint,3,opt,name=finish,proto3" json:"finish,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullTimelineRequest) Reset()         { *m = PullTimelineRequest{} }
func (m *PullTimelineRequest) String() string { return proto.CompactTextString(m) }
func (*PullTimelineRequest) ProtoMessage()    {}
func (*PullTimelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{6}
}
func (m *PullTimelineRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PullTimelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PullTimelineRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PullTimelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullTimelineRequest.Merge(m, src)
}
func (m *PullTimelineRequest) XXX_Size() int {
	return m.Size()
}
func (m *PullTimelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullTimelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullTimelineRequest proto.InternalMessageInfo

func (m *PullTimelineRequest) GetCityId() string {
	if m != nil {
		return m.CityId
	}
	return ""
}

func (m *PullTimelineRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *PullTimelineRequest) GetFinish() int64 {
	if m != nil {
		return m.Finish
	}
	return 0
}

type PullTimelineReply struct {
	Timeline             []proto1.Timestamp `protobuf:"bytes,1,rep,name=timeline,proto3" json:"timeline"`
	Err                  string             `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PullTimelineReply) Reset()         { *m = PullTimelineReply{} }
func (m *PullTimelineReply) String() string { return proto.CompactTextString(m) }
func (*PullTimelineReply) ProtoMessage()    {}
func (*PullTimelineReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{7}
}
func (m *PullTimelineReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PullTimelineReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PullTimelineReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PullTimelineReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullTimelineReply.Merge(m, src)
}
func (m *PullTimelineReply) XXX_Size() int {
	return m.Size()
}
func (m *PullTimelineReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PullTimelineReply.DiscardUnknown(m)
}

var xxx_messageInfo_PullTimelineReply proto.InternalMessageInfo

func (m *PullTimelineReply) GetTimeline() []proto1.Timestamp {
	if m != nil {
		return m.Timeline
	}
	return nil
}

func (m *PullTimelineReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

// messages for pull and push grids
type PushGridRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Blob                 []byte   `protobuf:"bytes,2,opt,name=blob,proto3" json:"blob,omitempty"`
	CityId               string   `protobuf:"bytes,3,opt,name=cityId,proto3" json:"cityId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushGridRequest) Reset()         { *m = PushGridRequest{} }
func (m *PushGridRequest) String() string { return proto.CompactTextString(m) }
func (*PushGridRequest) ProtoMessage()    {}
func (*PushGridRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{8}
}
func (m *PushGridRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PushGridRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PushGridRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PushGridRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushGridRequest.Merge(m, src)
}
func (m *PushGridRequest) XXX_Size() int {
	return m.Size()
}
func (m *PushGridRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushGridRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushGridRequest proto.InternalMessageInfo

func (m *PushGridRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PushGridRequest) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

func (m *PushGridRequest) GetCityId() string {
	if m != nil {
		return m.CityId
	}
	return ""
}

type PushGridReply struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushGridReply) Reset()         { *m = PushGridReply{} }
func (m *PushGridReply) String() string { return proto.CompactTextString(m) }
func (*PushGridReply) ProtoMessage()    {}
func (*PushGridReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{9}
}
func (m *PushGridReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PushGridReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PushGridReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PushGridReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushGridReply.Merge(m, src)
}
func (m *PushGridReply) XXX_Size() int {
	return m.Size()
}
func (m *PushGridReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PushGridReply.DiscardUnknown(m)
}

var xxx_messageInfo_PushGridReply proto.InternalMessageInfo

func (m *PushGridReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type PullGridRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CityId               string   `protobuf:"bytes,2,opt,name=cityId,proto3" json:"cityId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullGridRequest) Reset()         { *m = PullGridRequest{} }
func (m *PullGridRequest) String() string { return proto.CompactTextString(m) }
func (*PullGridRequest) ProtoMessage()    {}
func (*PullGridRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{10}
}
func (m *PullGridRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PullGridRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PullGridRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PullGridRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullGridRequest.Merge(m, src)
}
func (m *PullGridRequest) XXX_Size() int {
	return m.Size()
}
func (m *PullGridRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullGridRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullGridRequest proto.InternalMessageInfo

func (m *PullGridRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PullGridRequest) GetCityId() string {
	if m != nil {
		return m.CityId
	}
	return ""
}

type PullGridReply struct {
	Blob                 []byte   `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullGridReply) Reset()         { *m = PullGridReply{} }
func (m *PullGridReply) String() string { return proto.CompactTextString(m) }
func (*PullGridReply) ProtoMessage()    {}
func (*PullGridReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{11}
}
func (m *PullGridReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PullGridReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PullGridReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PullGridReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullGridReply.Merge(m, src)
}
func (m *PullGridReply) XXX_Size() int {
	return m.Size()
}
func (m *PullGridReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PullGridReply.DiscardUnknown(m)
}

var xxx_messageInfo_PullGridReply proto.InternalMessageInfo

func (m *PullGridReply) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

func (m *PullGridReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

// messages gor pull and push events
type PushEventsRequest struct {
	Events               []proto1.Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events"`
	CityId               string         `protobuf:"bytes,2,opt,name=cityId,proto3" json:"cityId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PushEventsRequest) Reset()         { *m = PushEventsRequest{} }
func (m *PushEventsRequest) String() string { return proto.CompactTextString(m) }
func (*PushEventsRequest) ProtoMessage()    {}
func (*PushEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{12}
}
func (m *PushEventsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PushEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PushEventsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PushEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushEventsRequest.Merge(m, src)
}
func (m *PushEventsRequest) XXX_Size() int {
	return m.Size()
}
func (m *PushEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushEventsRequest proto.InternalMessageInfo

func (m *PushEventsRequest) GetEvents() []proto1.Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *PushEventsRequest) GetCityId() string {
	if m != nil {
		return m.CityId
	}
	return ""
}

type PushEventsReply struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushEventsReply) Reset()         { *m = PushEventsReply{} }
func (m *PushEventsReply) String() string { return proto.CompactTextString(m) }
func (*PushEventsReply) ProtoMessage()    {}
func (*PushEventsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{13}
}
func (m *PushEventsReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PushEventsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PushEventsReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PushEventsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushEventsReply.Merge(m, src)
}
func (m *PushEventsReply) XXX_Size() int {
	return m.Size()
}
func (m *PushEventsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PushEventsReply.DiscardUnknown(m)
}

var xxx_messageInfo_PushEventsReply proto.InternalMessageInfo

func (m *PushEventsReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type PullEventsRequest struct {
	Interval             proto1.SpatioHourInterval `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval"`
	CityId               string                    `protobuf:"bytes,2,opt,name=cityId,proto3" json:"cityId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *PullEventsRequest) Reset()         { *m = PullEventsRequest{} }
func (m *PullEventsRequest) String() string { return proto.CompactTextString(m) }
func (*PullEventsRequest) ProtoMessage()    {}
func (*PullEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{14}
}
func (m *PullEventsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PullEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PullEventsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PullEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullEventsRequest.Merge(m, src)
}
func (m *PullEventsRequest) XXX_Size() int {
	return m.Size()
}
func (m *PullEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullEventsRequest proto.InternalMessageInfo

func (m *PullEventsRequest) GetInterval() proto1.SpatioHourInterval {
	if m != nil {
		return m.Interval
	}
	return proto1.SpatioHourInterval{}
}

func (m *PullEventsRequest) GetCityId() string {
	if m != nil {
		return m.CityId
	}
	return ""
}

type PullEventsReply struct {
	Events               []proto1.Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events"`
	Err                  string         `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PullEventsReply) Reset()         { *m = PullEventsReply{} }
func (m *PullEventsReply) String() string { return proto.CompactTextString(m) }
func (*PullEventsReply) ProtoMessage()    {}
func (*PullEventsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{15}
}
func (m *PullEventsReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PullEventsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PullEventsReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PullEventsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullEventsReply.Merge(m, src)
}
func (m *PullEventsReply) XXX_Size() int {
	return m.Size()
}
func (m *PullEventsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PullEventsReply.DiscardUnknown(m)
}

var xxx_messageInfo_PullEventsReply proto.InternalMessageInfo

func (m *PullEventsReply) GetEvents() []proto1.Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *PullEventsReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

// messages for pull and push locations
type PushLocationsRequest struct {
	CityId               string            `protobuf:"bytes,1,opt,name=cityId,proto3" json:"cityId,omitempty"`
	Locations            []proto1.Location `protobuf:"bytes,2,rep,name=locations,proto3" json:"locations"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PushLocationsRequest) Reset()         { *m = PushLocationsRequest{} }
func (m *PushLocationsRequest) String() string { return proto.CompactTextString(m) }
func (*PushLocationsRequest) ProtoMessage()    {}
func (*PushLocationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{16}
}
func (m *PushLocationsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PushLocationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PushLocationsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PushLocationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushLocationsRequest.Merge(m, src)
}
func (m *PushLocationsRequest) XXX_Size() int {
	return m.Size()
}
func (m *PushLocationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushLocationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushLocationsRequest proto.InternalMessageInfo

func (m *PushLocationsRequest) GetCityId() string {
	if m != nil {
		return m.CityId
	}
	return ""
}

func (m *PushLocationsRequest) GetLocations() []proto1.Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

type PushLocationsReply struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushLocationsReply) Reset()         { *m = PushLocationsReply{} }
func (m *PushLocationsReply) String() string { return proto.CompactTextString(m) }
func (*PushLocationsReply) ProtoMessage()    {}
func (*PushLocationsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{17}
}
func (m *PushLocationsReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PushLocationsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PushLocationsReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PushLocationsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushLocationsReply.Merge(m, src)
}
func (m *PushLocationsReply) XXX_Size() int {
	return m.Size()
}
func (m *PushLocationsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PushLocationsReply.DiscardUnknown(m)
}

var xxx_messageInfo_PushLocationsReply proto.InternalMessageInfo

func (m *PushLocationsReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type PullLocationsRequest struct {
	CityId               string   `protobuf:"bytes,1,opt,name=cityId,proto3" json:"cityId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullLocationsRequest) Reset()         { *m = PullLocationsRequest{} }
func (m *PullLocationsRequest) String() string { return proto.CompactTextString(m) }
func (*PullLocationsRequest) ProtoMessage()    {}
func (*PullLocationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{18}
}
func (m *PullLocationsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PullLocationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PullLocationsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PullLocationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullLocationsRequest.Merge(m, src)
}
func (m *PullLocationsRequest) XXX_Size() int {
	return m.Size()
}
func (m *PullLocationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullLocationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullLocationsRequest proto.InternalMessageInfo

func (m *PullLocationsRequest) GetCityId() string {
	if m != nil {
		return m.CityId
	}
	return ""
}

type PullLocationsReply struct {
	Locations            []proto1.Location `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations"`
	Err                  string            `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PullLocationsReply) Reset()         { *m = PullLocationsReply{} }
func (m *PullLocationsReply) String() string { return proto.CompactTextString(m) }
func (*PullLocationsReply) ProtoMessage()    {}
func (*PullLocationsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec0c2fba98f9a4b, []int{19}
}
func (m *PullLocationsReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PullLocationsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PullLocationsReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PullLocationsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullLocationsReply.Merge(m, src)
}
func (m *PullLocationsReply) XXX_Size() int {
	return m.Size()
}
func (m *PullLocationsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PullLocationsReply.DiscardUnknown(m)
}

var xxx_messageInfo_PullLocationsReply proto.InternalMessageInfo

func (m *PullLocationsReply) GetLocations() []proto1.Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

func (m *PullLocationsReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*PushPostsRequest)(nil), "proto.PushPostsRequest")
	proto.RegisterType((*PushPostsReply)(nil), "proto.PushPostsReply")
	proto.RegisterType((*SelectPostsRequest)(nil), "proto.SelectPostsRequest")
	proto.RegisterType((*SelectPostsReply)(nil), "proto.SelectPostsReply")
	proto.RegisterType((*SelectAggrPostsRequest)(nil), "proto.SelectAggrPostsRequest")
	proto.RegisterType((*SelectAggrPostsReply)(nil), "proto.SelectAggrPostsReply")
	proto.RegisterType((*PullTimelineRequest)(nil), "proto.PullTimelineRequest")
	proto.RegisterType((*PullTimelineReply)(nil), "proto.PullTimelineReply")
	proto.RegisterType((*PushGridRequest)(nil), "proto.PushGridRequest")
	proto.RegisterType((*PushGridReply)(nil), "proto.PushGridReply")
	proto.RegisterType((*PullGridRequest)(nil), "proto.PullGridRequest")
	proto.RegisterType((*PullGridReply)(nil), "proto.PullGridReply")
	proto.RegisterType((*PushEventsRequest)(nil), "proto.PushEventsRequest")
	proto.RegisterType((*PushEventsReply)(nil), "proto.PushEventsReply")
	proto.RegisterType((*PullEventsRequest)(nil), "proto.PullEventsRequest")
	proto.RegisterType((*PullEventsReply)(nil), "proto.PullEventsReply")
	proto.RegisterType((*PushLocationsRequest)(nil), "proto.PushLocationsRequest")
	proto.RegisterType((*PushLocationsReply)(nil), "proto.PushLocationsReply")
	proto.RegisterType((*PullLocationsRequest)(nil), "proto.PullLocationsRequest")
	proto.RegisterType((*PullLocationsReply)(nil), "proto.PullLocationsReply")
}

func init() {
	proto.RegisterFile("data-storage/proto/data-storage.proto", fileDescriptor_8ec0c2fba98f9a4b)
}

var fileDescriptor_8ec0c2fba98f9a4b = []byte{
	// 744 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0x8e, 0x93, 0xa6, 0x6a, 0x27, 0xfd, 0xb5, 0xf9, 0x2d, 0x21, 0x75, 0x5d, 0x1a, 0x8a, 0x11,
	0x55, 0x39, 0x90, 0x42, 0x80, 0x03, 0x95, 0x40, 0x50, 0xfe, 0x56, 0x2a, 0x50, 0xb9, 0x15, 0x42,
	0xe5, 0xe4, 0xd4, 0x8b, 0x6b, 0x69, 0x1b, 0x1b, 0x7b, 0x53, 0xa9, 0x6f, 0xc2, 0xc3, 0xf0, 0x00,
	0x3d, 0xf2, 0x04, 0x08, 0x85, 0x17, 0x41, 0xeb, 0xdd, 0x8d, 0x77, 0x6d, 0x07, 0xd2, 0x03, 0xa7,
	0xd8, 0x33, 0xdf, 0x7c, 0xf3, 0xcd, 0x64, 0x66, 0x0c, 0xb7, 0x3c, 0x97, 0xba, 0x77, 0x12, 0x1a,
	0xc6, 0xae, 0x8f, 0xb7, 0xa2, 0x38, 0xa4, 0xe1, 0x96, 0x6a, 0xea, 0xa6, 0x26, 0x54, 0x4f, 0x7f,
	0xac, 0xb5, 0x12, 0xb4, 0x1f, 0xfa, 0x21, 0x47, 0x59, 0xcd, 0x2c, 0x9e, 0x5b, 0x6c, 0x07, 0x9a,
	0xfb, 0xc3, 0xe4, 0x64, 0x3f, 0x4c, 0x68, 0xe2, 0xe0, 0x2f, 0x43, 0x9c, 0x50, 0xb4, 0x01, 0xf5,
	0x88, 0xbd, 0x9b, 0xc6, 0x7a, 0x6d, 0xb3, 0xd1, 0x83, 0x6e, 0x8a, 0x67, 0x90, 0x9d, 0x99, 0x8b,
	0x1f, 0xd7, 0x2b, 0x0e, 0x77, 0xa3, 0x36, 0xcc, 0x1e, 0x07, 0xf4, 0x7c, 0xd7, 0x33, 0xab, 0xeb,
	0xc6, 0xe6, 0xbc, 0x23, 0xde, 0xec, 0x07, 0xb0, 0xa8, 0x70, 0x46, 0xe4, 0x1c, 0x35, 0xa1, 0x16,
	0x78, 0x9c, 0xaf, 0xee, 0xb0, 0x47, 0x66, 0xc1, 0x71, 0x2c, 0x02, 0xd9, 0xa3, 0x4d, 0x00, 0x1d,
	0x60, 0x82, 0x8f, 0xa9, 0xa6, 0xe5, 0x09, 0xcc, 0x05, 0x03, 0x8a, 0xe3, 0x33, 0x97, 0x98, 0xc6,
	0xba, 0xb1, 0xd9, 0xe8, 0x5d, 0xe3, 0x72, 0x0e, 0x22, 0x97, 0x06, 0xe1, 0x21, 0x3e, 0x8d, 0xc2,
	0xd8, 0x25, 0xbb, 0x02, 0x23, 0x04, 0x8e, 0x63, 0x26, 0x6a, 0xdc, 0x83, 0xa6, 0x96, 0x8d, 0xa9,
	0x9c, 0xb6, 0xee, 0x32, 0xed, 0x6d, 0xce, 0xf6, 0xcc, 0xf7, 0x63, 0x4d, 0xff, 0x76, 0x41, 0xbf,
	0xa9, 0xea, 0x7f, 0x13, 0x0e, 0xe3, 0x4b, 0x6b, 0x3f, 0x82, 0x56, 0x21, 0x1b, 0xd3, 0x7f, 0x57,
	0xd7, 0xdf, 0xe2, 0x89, 0x18, 0x08, 0xfb, 0x2e, 0xc5, 0xde, 0x34, 0x95, 0x7c, 0x82, 0x2b, 0xfb,
	0x43, 0x42, 0x0e, 0x83, 0x53, 0x4c, 0x82, 0x01, 0x96, 0x65, 0x64, 0x52, 0x0c, 0x55, 0x0a, 0x6a,
	0x41, 0x3d, 0xa1, 0x6e, 0x4c, 0x53, 0x8a, 0x9a, 0xc3, 0x5f, 0x18, 0xfa, 0x73, 0x30, 0x08, 0x92,
	0x13, 0xb3, 0x96, 0x9a, 0xc5, 0x9b, 0xfd, 0x11, 0xfe, 0xd7, 0xc9, 0x99, 0xea, 0x7b, 0x30, 0x47,
	0x85, 0x41, 0x08, 0x5f, 0xe2, 0xc2, 0x19, 0x2c, 0xa1, 0xee, 0x69, 0x24, 0x1b, 0x23, 0x61, 0x25,
	0xb2, 0xdf, 0xc2, 0x12, 0x1b, 0xb9, 0xd7, 0x71, 0xe0, 0x49, 0xc9, 0x8b, 0x50, 0x0d, 0xa4, 0xdc,
	0x6a, 0xe0, 0x21, 0x04, 0x33, 0x7d, 0x12, 0xf6, 0xd3, 0xa8, 0x05, 0x27, 0x7d, 0x56, 0xca, 0xaa,
	0x69, 0x1d, 0xbe, 0x01, 0xff, 0x65, 0x74, 0x62, 0x80, 0x59, 0x46, 0x23, 0xcb, 0xf8, 0x88, 0x65,
	0x24, 0xe4, 0x4f, 0x19, 0x27, 0xfd, 0x7f, 0x0f, 0x19, 0xbb, 0x0c, 0x65, 0xec, 0x52, 0x9a, 0xa1,
	0x48, 0x2b, 0xd6, 0xf8, 0x81, 0x75, 0x2f, 0x39, 0x79, 0x79, 0x86, 0x07, 0xd9, 0x7c, 0xdd, 0x86,
	0x59, 0x9c, 0x1a, 0x44, 0xef, 0x1a, 0xbc, 0x77, 0x29, 0x48, 0xf4, 0x4d, 0x00, 0x26, 0xca, 0xb9,
	0xc9, 0x7b, 0x27, 0x79, 0xcb, 0xcb, 0xf5, 0xf9, 0x5f, 0xa7, 0x27, 0xff, 0x17, 0xc3, 0xfd, 0x8e,
	0xf7, 0x55, 0x55, 0x73, 0x89, 0x1a, 0x8b, 0x5d, 0xeb, 0x43, 0x8b, 0x55, 0xb7, 0x17, 0x1e, 0x33,
	0x49, 0x83, 0xe4, 0x6f, 0x13, 0xdd, 0x83, 0x79, 0x22, 0xb1, 0x66, 0x35, 0xcd, 0xb7, 0xc8, 0xf3,
	0x49, 0x0a, 0x91, 0x32, 0x83, 0xd9, 0x1b, 0x80, 0x72, 0x39, 0xca, 0x9b, 0xd8, 0x65, 0x5a, 0x08,
	0x99, 0x56, 0x8b, 0x7d, 0xc4, 0x78, 0x35, 0x3c, 0xe3, 0xd5, 0x14, 0x1a, 0x53, 0x29, 0x2c, 0xf6,
	0xa5, 0xf7, 0xad, 0x0e, 0x8d, 0x17, 0x2e, 0x75, 0x0f, 0xf8, 0xb7, 0x02, 0x3d, 0x86, 0xf9, 0xf1,
	0xd1, 0x46, 0xcb, 0xfc, 0xeb, 0xd0, 0xcd, 0x7f, 0x1a, 0xac, 0xab, 0x45, 0x47, 0x44, 0xce, 0xed,
	0x0a, 0x7a, 0x0e, 0x0d, 0xe5, 0x9e, 0xa2, 0x15, 0x81, 0x2b, 0x5e, 0x74, 0x6b, 0xb9, 0xcc, 0xc5,
	0x49, 0xde, 0xc3, 0x52, 0xee, 0xb0, 0xa1, 0x35, 0x0d, 0x9d, 0x3f, 0xaf, 0xd6, 0xea, 0x24, 0x37,
	0x27, 0x7c, 0x05, 0x0b, 0xea, 0xc1, 0x41, 0xd6, 0x58, 0x7e, 0xe1, 0xc4, 0x59, 0x66, 0xa9, 0x8f,
	0xf3, 0x6c, 0xc3, 0x9c, 0xbc, 0x07, 0xa8, 0xad, 0xb4, 0x40, 0xd9, 0x7e, 0xab, 0x55, 0xb0, 0x2b,
	0xb1, 0x7c, 0xdb, 0x95, 0x58, 0xed, 0x72, 0x28, 0xb1, 0xca, 0x59, 0xb0, 0x2b, 0xe8, 0x29, 0x40,
	0xb6, 0x9a, 0xc8, 0x54, 0x32, 0x68, 0x8b, 0x68, 0xb5, 0x4b, 0x3c, 0x0a, 0x83, 0x5c, 0x27, 0xa4,
	0xd6, 0x38, 0x89, 0x41, 0xdb, 0x3d, 0xbb, 0x82, 0x76, 0xf9, 0x2d, 0x1c, 0x0f, 0x21, 0x5a, 0x55,
	0x92, 0xe5, 0x47, 0xd9, 0x5a, 0x29, 0x77, 0x2a, 0x54, 0xca, 0x3c, 0x2b, 0x54, 0xc5, 0xad, 0x50,
	0xa8, 0xf2, 0x2b, 0x60, 0x57, 0x76, 0x9a, 0x17, 0xa3, 0x8e, 0xf1, 0x7d, 0xd4, 0x31, 0x7e, 0x8e,
	0x3a, 0xc6, 0xd7, 0x5f, 0x9d, 0x4a, 0x7f, 0x36, 0x45, 0xdf, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff,
	0xff, 0xae, 0xac, 0xd9, 0x31, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataStorageClient is the client API for DataStorage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataStorageClient interface {
	PushPosts(ctx context.Context, in *PushPostsRequest, opts ...grpc.CallOption) (*PushPostsReply, error)
	SelectPosts(ctx context.Context, in *SelectPostsRequest, opts ...grpc.CallOption) (*SelectPostsReply, error)
	SelectAggrPosts(ctx context.Context, in *SelectAggrPostsRequest, opts ...grpc.CallOption) (*SelectAggrPostsReply, error)
	PullTimeline(ctx context.Context, in *PullTimelineRequest, opts ...grpc.CallOption) (*PullTimelineReply, error)
	PushGrid(ctx context.Context, in *PushGridRequest, opts ...grpc.CallOption) (*PushGridReply, error)
	PullGrid(ctx context.Context, in *PullGridRequest, opts ...grpc.CallOption) (*PullGridReply, error)
	PushEvents(ctx context.Context, in *PushEventsRequest, opts ...grpc.CallOption) (*PushEventsReply, error)
	PullEvents(ctx context.Context, in *PullEventsRequest, opts ...grpc.CallOption) (*PullEventsReply, error)
	PushLocations(ctx context.Context, in *PushLocationsRequest, opts ...grpc.CallOption) (*PushLocationsReply, error)
	PullLocations(ctx context.Context, in *PullLocationsRequest, opts ...grpc.CallOption) (*PullLocationsReply, error)
}

type dataStorageClient struct {
	cc *grpc.ClientConn
}

func NewDataStorageClient(cc *grpc.ClientConn) DataStorageClient {
	return &dataStorageClient{cc}
}

func (c *dataStorageClient) PushPosts(ctx context.Context, in *PushPostsRequest, opts ...grpc.CallOption) (*PushPostsReply, error) {
	out := new(PushPostsReply)
	err := c.cc.Invoke(ctx, "/proto.DataStorage/PushPosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStorageClient) SelectPosts(ctx context.Context, in *SelectPostsRequest, opts ...grpc.CallOption) (*SelectPostsReply, error) {
	out := new(SelectPostsReply)
	err := c.cc.Invoke(ctx, "/proto.DataStorage/SelectPosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStorageClient) SelectAggrPosts(ctx context.Context, in *SelectAggrPostsRequest, opts ...grpc.CallOption) (*SelectAggrPostsReply, error) {
	out := new(SelectAggrPostsReply)
	err := c.cc.Invoke(ctx, "/proto.DataStorage/SelectAggrPosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStorageClient) PullTimeline(ctx context.Context, in *PullTimelineRequest, opts ...grpc.CallOption) (*PullTimelineReply, error) {
	out := new(PullTimelineReply)
	err := c.cc.Invoke(ctx, "/proto.DataStorage/PullTimeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStorageClient) PushGrid(ctx context.Context, in *PushGridRequest, opts ...grpc.CallOption) (*PushGridReply, error) {
	out := new(PushGridReply)
	err := c.cc.Invoke(ctx, "/proto.DataStorage/PushGrid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStorageClient) PullGrid(ctx context.Context, in *PullGridRequest, opts ...grpc.CallOption) (*PullGridReply, error) {
	out := new(PullGridReply)
	err := c.cc.Invoke(ctx, "/proto.DataStorage/PullGrid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStorageClient) PushEvents(ctx context.Context, in *PushEventsRequest, opts ...grpc.CallOption) (*PushEventsReply, error) {
	out := new(PushEventsReply)
	err := c.cc.Invoke(ctx, "/proto.DataStorage/PushEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStorageClient) PullEvents(ctx context.Context, in *PullEventsRequest, opts ...grpc.CallOption) (*PullEventsReply, error) {
	out := new(PullEventsReply)
	err := c.cc.Invoke(ctx, "/proto.DataStorage/PullEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStorageClient) PushLocations(ctx context.Context, in *PushLocationsRequest, opts ...grpc.CallOption) (*PushLocationsReply, error) {
	out := new(PushLocationsReply)
	err := c.cc.Invoke(ctx, "/proto.DataStorage/PushLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStorageClient) PullLocations(ctx context.Context, in *PullLocationsRequest, opts ...grpc.CallOption) (*PullLocationsReply, error) {
	out := new(PullLocationsReply)
	err := c.cc.Invoke(ctx, "/proto.DataStorage/PullLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataStorageServer is the server API for DataStorage service.
type DataStorageServer interface {
	PushPosts(context.Context, *PushPostsRequest) (*PushPostsReply, error)
	SelectPosts(context.Context, *SelectPostsRequest) (*SelectPostsReply, error)
	SelectAggrPosts(context.Context, *SelectAggrPostsRequest) (*SelectAggrPostsReply, error)
	PullTimeline(context.Context, *PullTimelineRequest) (*PullTimelineReply, error)
	PushGrid(context.Context, *PushGridRequest) (*PushGridReply, error)
	PullGrid(context.Context, *PullGridRequest) (*PullGridReply, error)
	PushEvents(context.Context, *PushEventsRequest) (*PushEventsReply, error)
	PullEvents(context.Context, *PullEventsRequest) (*PullEventsReply, error)
	PushLocations(context.Context, *PushLocationsRequest) (*PushLocationsReply, error)
	PullLocations(context.Context, *PullLocationsRequest) (*PullLocationsReply, error)
}

// UnimplementedDataStorageServer can be embedded to have forward compatible implementations.
type UnimplementedDataStorageServer struct {
}

func (*UnimplementedDataStorageServer) PushPosts(ctx context.Context, req *PushPostsRequest) (*PushPostsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushPosts not implemented")
}
func (*UnimplementedDataStorageServer) SelectPosts(ctx context.Context, req *SelectPostsRequest) (*SelectPostsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SelectPosts not implemented")
}
func (*UnimplementedDataStorageServer) SelectAggrPosts(ctx context.Context, req *SelectAggrPostsRequest) (*SelectAggrPostsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SelectAggrPosts not implemented")
}
func (*UnimplementedDataStorageServer) PullTimeline(ctx context.Context, req *PullTimelineRequest) (*PullTimelineReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PullTimeline not implemented")
}
func (*UnimplementedDataStorageServer) PushGrid(ctx context.Context, req *PushGridRequest) (*PushGridReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushGrid not implemented")
}
func (*UnimplementedDataStorageServer) PullGrid(ctx context.Context, req *PullGridRequest) (*PullGridReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PullGrid not implemented")
}
func (*UnimplementedDataStorageServer) PushEvents(ctx context.Context, req *PushEventsRequest) (*PushEventsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushEvents not implemented")
}
func (*UnimplementedDataStorageServer) PullEvents(ctx context.Context, req *PullEventsRequest) (*PullEventsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PullEvents not implemented")
}
func (*UnimplementedDataStorageServer) PushLocations(ctx context.Context, req *PushLocationsRequest) (*PushLocationsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushLocations not implemented")
}
func (*UnimplementedDataStorageServer) PullLocations(ctx context.Context, req *PullLocationsRequest) (*PullLocationsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PullLocations not implemented")
}

func RegisterDataStorageServer(s *grpc.Server, srv DataStorageServer) {
	s.RegisterService(&_DataStorage_serviceDesc, srv)
}

func _DataStorage_PushPosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushPostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStorageServer).PushPosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DataStorage/PushPosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStorageServer).PushPosts(ctx, req.(*PushPostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStorage_SelectPosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SelectPostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStorageServer).SelectPosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DataStorage/SelectPosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStorageServer).SelectPosts(ctx, req.(*SelectPostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStorage_SelectAggrPosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SelectAggrPostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStorageServer).SelectAggrPosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DataStorage/SelectAggrPosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStorageServer).SelectAggrPosts(ctx, req.(*SelectAggrPostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStorage_PullTimeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PullTimelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStorageServer).PullTimeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DataStorage/PullTimeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStorageServer).PullTimeline(ctx, req.(*PullTimelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStorage_PushGrid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushGridRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStorageServer).PushGrid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DataStorage/PushGrid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStorageServer).PushGrid(ctx, req.(*PushGridRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStorage_PullGrid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PullGridRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStorageServer).PullGrid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DataStorage/PullGrid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStorageServer).PullGrid(ctx, req.(*PullGridRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStorage_PushEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStorageServer).PushEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DataStorage/PushEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStorageServer).PushEvents(ctx, req.(*PushEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStorage_PullEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PullEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStorageServer).PullEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DataStorage/PullEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStorageServer).PullEvents(ctx, req.(*PullEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStorage_PushLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStorageServer).PushLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DataStorage/PushLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStorageServer).PushLocations(ctx, req.(*PushLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStorage_PullLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PullLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStorageServer).PullLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DataStorage/PullLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStorageServer).PullLocations(ctx, req.(*PullLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataStorage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DataStorage",
	HandlerType: (*DataStorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PushPosts",
			Handler:    _DataStorage_PushPosts_Handler,
		},
		{
			MethodName: "SelectPosts",
			Handler:    _DataStorage_SelectPosts_Handler,
		},
		{
			MethodName: "SelectAggrPosts",
			Handler:    _DataStorage_SelectAggrPosts_Handler,
		},
		{
			MethodName: "PullTimeline",
			Handler:    _DataStorage_PullTimeline_Handler,
		},
		{
			MethodName: "PushGrid",
			Handler:    _DataStorage_PushGrid_Handler,
		},
		{
			MethodName: "PullGrid",
			Handler:    _DataStorage_PullGrid_Handler,
		},
		{
			MethodName: "PushEvents",
			Handler:    _DataStorage_PushEvents_Handler,
		},
		{
			MethodName: "PullEvents",
			Handler:    _DataStorage_PullEvents_Handler,
		},
		{
			MethodName: "PushLocations",
			Handler:    _DataStorage_PushLocations_Handler,
		},
		{
			MethodName: "PullLocations",
			Handler:    _DataStorage_PullLocations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "data-storage/proto/data-storage.proto",
}

func (m *PushPostsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PushPostsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PushPostsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CityId) > 0 {
		i -= len(m.CityId)
		copy(dAtA[i:], m.CityId)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.CityId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Posts) > 0 {
		for iNdEx := len(m.Posts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Posts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDataStorage(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *PushPostsReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PushPostsReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PushPostsReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Ids) > 0 {
		dAtA2 := make([]byte, len(m.Ids)*10)
		var j1 int
		for _, num1 := range m.Ids {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		i -= j1
		copy(dAtA[i:], dAtA2[:j1])
		i = encodeVarintDataStorage(dAtA, i, uint64(j1))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SelectPostsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SelectPostsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SelectPostsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CityId) > 0 {
		i -= len(m.CityId)
		copy(dAtA[i:], m.CityId)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.CityId)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.Interval.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintDataStorage(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *SelectPostsReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SelectPostsReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SelectPostsReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Posts) > 0 {
		for iNdEx := len(m.Posts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Posts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDataStorage(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *SelectAggrPostsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SelectAggrPostsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SelectAggrPostsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CityId) > 0 {
		i -= len(m.CityId)
		copy(dAtA[i:], m.CityId)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.CityId)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.Interval.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintDataStorage(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *SelectAggrPostsReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SelectAggrPostsReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SelectAggrPostsReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Posts) > 0 {
		for iNdEx := len(m.Posts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Posts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDataStorage(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *PullTimelineRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PullTimelineRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PullTimelineRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Finish != 0 {
		i = encodeVarintDataStorage(dAtA, i, uint64(m.Finish))
		i--
		dAtA[i] = 0x18
	}
	if m.Start != 0 {
		i = encodeVarintDataStorage(dAtA, i, uint64(m.Start))
		i--
		dAtA[i] = 0x10
	}
	if len(m.CityId) > 0 {
		i -= len(m.CityId)
		copy(dAtA[i:], m.CityId)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.CityId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PullTimelineReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PullTimelineReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PullTimelineReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Timeline) > 0 {
		for iNdEx := len(m.Timeline) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Timeline[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDataStorage(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *PushGridRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PushGridRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PushGridRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CityId) > 0 {
		i -= len(m.CityId)
		copy(dAtA[i:], m.CityId)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.CityId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Blob) > 0 {
		i -= len(m.Blob)
		copy(dAtA[i:], m.Blob)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.Blob)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PushGridReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PushGridReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PushGridReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PullGridRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PullGridRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PullGridRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CityId) > 0 {
		i -= len(m.CityId)
		copy(dAtA[i:], m.CityId)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.CityId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PullGridReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PullGridReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PullGridReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Blob) > 0 {
		i -= len(m.Blob)
		copy(dAtA[i:], m.Blob)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.Blob)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PushEventsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PushEventsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PushEventsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CityId) > 0 {
		i -= len(m.CityId)
		copy(dAtA[i:], m.CityId)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.CityId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Events) > 0 {
		for iNdEx := len(m.Events) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Events[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDataStorage(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *PushEventsReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PushEventsReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PushEventsReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PullEventsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PullEventsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PullEventsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CityId) > 0 {
		i -= len(m.CityId)
		copy(dAtA[i:], m.CityId)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.CityId)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.Interval.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintDataStorage(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *PullEventsReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PullEventsReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PullEventsReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Events) > 0 {
		for iNdEx := len(m.Events) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Events[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDataStorage(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *PushLocationsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PushLocationsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PushLocationsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Locations) > 0 {
		for iNdEx := len(m.Locations) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Locations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDataStorage(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.CityId) > 0 {
		i -= len(m.CityId)
		copy(dAtA[i:], m.CityId)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.CityId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PushLocationsReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PushLocationsReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PushLocationsReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PullLocationsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PullLocationsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PullLocationsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CityId) > 0 {
		i -= len(m.CityId)
		copy(dAtA[i:], m.CityId)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.CityId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PullLocationsReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PullLocationsReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PullLocationsReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintDataStorage(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Locations) > 0 {
		for iNdEx := len(m.Locations) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Locations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDataStorage(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintDataStorage(dAtA []byte, offset int, v uint64) int {
	offset -= sovDataStorage(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PushPostsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Posts) > 0 {
		for _, e := range m.Posts {
			l = e.Size()
			n += 1 + l + sovDataStorage(uint64(l))
		}
	}
	l = len(m.CityId)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PushPostsReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Ids) > 0 {
		l = 0
		for _, e := range m.Ids {
			l += sovDataStorage(uint64(e))
		}
		n += 1 + sovDataStorage(uint64(l)) + l
	}
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SelectPostsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Interval.Size()
	n += 1 + l + sovDataStorage(uint64(l))
	l = len(m.CityId)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SelectPostsReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Posts) > 0 {
		for _, e := range m.Posts {
			l = e.Size()
			n += 1 + l + sovDataStorage(uint64(l))
		}
	}
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SelectAggrPostsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Interval.Size()
	n += 1 + l + sovDataStorage(uint64(l))
	l = len(m.CityId)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SelectAggrPostsReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Posts) > 0 {
		for _, e := range m.Posts {
			l = e.Size()
			n += 1 + l + sovDataStorage(uint64(l))
		}
	}
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PullTimelineRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CityId)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.Start != 0 {
		n += 1 + sovDataStorage(uint64(m.Start))
	}
	if m.Finish != 0 {
		n += 1 + sovDataStorage(uint64(m.Finish))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PullTimelineReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Timeline) > 0 {
		for _, e := range m.Timeline {
			l = e.Size()
			n += 1 + l + sovDataStorage(uint64(l))
		}
	}
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PushGridRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	l = len(m.Blob)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	l = len(m.CityId)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PushGridReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PullGridRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	l = len(m.CityId)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PullGridReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Blob)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PushEventsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Events) > 0 {
		for _, e := range m.Events {
			l = e.Size()
			n += 1 + l + sovDataStorage(uint64(l))
		}
	}
	l = len(m.CityId)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PushEventsReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PullEventsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Interval.Size()
	n += 1 + l + sovDataStorage(uint64(l))
	l = len(m.CityId)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PullEventsReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Events) > 0 {
		for _, e := range m.Events {
			l = e.Size()
			n += 1 + l + sovDataStorage(uint64(l))
		}
	}
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PushLocationsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CityId)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if len(m.Locations) > 0 {
		for _, e := range m.Locations {
			l = e.Size()
			n += 1 + l + sovDataStorage(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PushLocationsReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PullLocationsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CityId)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PullLocationsReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Locations) > 0 {
		for _, e := range m.Locations {
			l = e.Size()
			n += 1 + l + sovDataStorage(uint64(l))
		}
	}
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovDataStorage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovDataStorage(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDataStorage(x uint64) (n int) {
	return sovDataStorage(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PushPostsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PushPostsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PushPostsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Posts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Posts = append(m.Posts, proto1.Post{})
			if err := m.Posts[len(m.Posts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PushPostsReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PushPostsReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PushPostsReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDataStorage
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Ids = append(m.Ids, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDataStorage
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthDataStorage
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthDataStorage
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Ids) == 0 {
					m.Ids = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDataStorage
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Ids = append(m.Ids, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Ids", wireType)
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SelectPostsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SelectPostsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SelectPostsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interval", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Interval.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SelectPostsReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SelectPostsReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SelectPostsReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Posts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Posts = append(m.Posts, proto1.Post{})
			if err := m.Posts[len(m.Posts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SelectAggrPostsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SelectAggrPostsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SelectAggrPostsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interval", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Interval.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SelectAggrPostsReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SelectAggrPostsReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SelectAggrPostsReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Posts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Posts = append(m.Posts, proto1.AggregatedPost{})
			if err := m.Posts[len(m.Posts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PullTimelineRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PullTimelineRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PullTimelineRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
			}
			m.Start = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Start |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Finish", wireType)
			}
			m.Finish = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Finish |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PullTimelineReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PullTimelineReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PullTimelineReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timeline", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Timeline = append(m.Timeline, proto1.Timestamp{})
			if err := m.Timeline[len(m.Timeline)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PushGridRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PushGridRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PushGridRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Blob", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Blob = append(m.Blob[:0], dAtA[iNdEx:postIndex]...)
			if m.Blob == nil {
				m.Blob = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PushGridReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PushGridReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PushGridReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PullGridRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PullGridRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PullGridRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PullGridReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PullGridReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PullGridReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Blob", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Blob = append(m.Blob[:0], dAtA[iNdEx:postIndex]...)
			if m.Blob == nil {
				m.Blob = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PushEventsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PushEventsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PushEventsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Events", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Events = append(m.Events, proto1.Event{})
			if err := m.Events[len(m.Events)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PushEventsReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PushEventsReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PushEventsReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PullEventsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PullEventsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PullEventsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interval", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Interval.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PullEventsReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PullEventsReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PullEventsReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Events", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Events = append(m.Events, proto1.Event{})
			if err := m.Events[len(m.Events)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PushLocationsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PushLocationsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PushLocationsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Locations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Locations = append(m.Locations, proto1.Location{})
			if err := m.Locations[len(m.Locations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PushLocationsReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PushLocationsReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PushLocationsReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PullLocationsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PullLocationsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PullLocationsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PullLocationsReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PullLocationsReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PullLocationsReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Locations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Locations = append(m.Locations, proto1.Location{})
			if err := m.Locations[len(m.Locations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDataStorage(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDataStorage
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDataStorage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDataStorage
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDataStorage
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDataStorage
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDataStorage        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDataStorage          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDataStorage = fmt.Errorf("proto: unexpected end of group")
)
